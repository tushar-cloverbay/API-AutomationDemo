<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="77" passed="67" failed="10" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-04-20T13:44:34 IST" name="Suite" finished-at="2021-04-20T13:57:17 IST" duration-ms="763012">
    <groups>
    </groups>
    <test started-at="2021-04-20T13:44:34 IST" name="Test" finished-at="2021-04-20T13:57:17 IST" duration-ms="763012">
      <class name="net.assuresign.scenario_5.Scenario_5">
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_5.Scenario_5@1b2abca6]" started-at="2021-04-20T13:44:34 IST" name="reportUp" finished-at="2021-04-20T13:44:34 IST" duration-ms="5" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_5.getInValidTemplate(java.lang.String)[pri:0, instance:net.assuresign.scenario_5.Scenario_5@1b2abca6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="getInValidTemplate(java.lang.String)[pri:0, instance:net.assuresign.scenario_5.Scenario_5@1b2abca6]" started-at="2021-04-20T13:44:34 IST" name="getInValidTemplate" data-provider="version-data-provider" finished-at="2021-04-20T13:44:44 IST" duration-ms="10017" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInValidTemplate -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_5.Scenario_5@1b2abca6]" started-at="2021-04-20T13:44:44 IST" name="tearDown" finished-at="2021-04-20T13:44:44 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getInValidTemplate status=SUCCESS method=Scenario_5.getInValidTemplate(java.lang.String)[pri:0, instance:net.assuresign.scenario_5.Scenario_5@1b2abca6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_5.Scenario_5@1b2abca6]" started-at="2021-04-20T13:44:44 IST" name="reportUp" finished-at="2021-04-20T13:44:44 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_5.getTemplate(java.lang.String)[pri:0, instance:net.assuresign.scenario_5.Scenario_5@1b2abca6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="getTemplate(java.lang.String)[pri:0, instance:net.assuresign.scenario_5.Scenario_5@1b2abca6]" started-at="2021-04-20T13:44:44 IST" name="getTemplate" data-provider="version-data-provider" finished-at="2021-04-20T13:44:53 IST" duration-ms="8472" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTemplate -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_5.Scenario_5@1b2abca6]" started-at="2021-04-20T13:44:53 IST" name="tearDown" finished-at="2021-04-20T13:44:53 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getTemplate status=SUCCESS method=Scenario_5.getTemplate(java.lang.String)[pri:0, instance:net.assuresign.scenario_5.Scenario_5@1b2abca6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_5.Scenario_5@1b2abca6]" started-at="2021-04-20T13:44:53 IST" name="reportUp" finished-at="2021-04-20T13:44:53 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_5.getTemplateByEmptyID(java.lang.String)[pri:0, instance:net.assuresign.scenario_5.Scenario_5@1b2abca6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="getTemplateByEmptyID(java.lang.String)[pri:0, instance:net.assuresign.scenario_5.Scenario_5@1b2abca6]" started-at="2021-04-20T13:44:53 IST" name="getTemplateByEmptyID" data-provider="version-data-provider" finished-at="2021-04-20T13:44:57 IST" duration-ms="4789" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code (<400> or <404>) but was <200>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code (<400> or <404>) but was <200>.

at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:72)
at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:59)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:59)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:263)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:493)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:674)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:193)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:61)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:126)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:84)
at io.restassured.internal.ValidatableResponseImpl.super$2$statusCode(ValidatableResponseImpl.groovy)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1268)
at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)
at io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy:136)
at io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy)
at net.assuresign.scenario_5.Scenario_5.getTemplateByEmptyID(Scenario_5.java:120)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTemplateByEmptyID -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_5.Scenario_5@1b2abca6]" started-at="2021-04-20T13:44:58 IST" name="tearDown" finished-at="2021-04-20T13:44:58 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getTemplateByEmptyID status=FAILURE method=Scenario_5.getTemplateByEmptyID(java.lang.String)[pri:0, instance:net.assuresign.scenario_5.Scenario_5@1b2abca6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="getValidTemplate(java.lang.String)[pri:0, instance:net.assuresign.scenario_5.Scenario_5@1b2abca6]" started-at="2021-04-20T13:44:58 IST" name="getValidTemplate" data-provider="version-data-provider" finished-at="2021-04-20T13:45:04 IST" duration-ms="6214" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getValidTemplate -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_5.Scenario_5@1b2abca6]" started-at="2021-04-20T13:44:58 IST" name="reportUp" finished-at="2021-04-20T13:44:58 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_5.getValidTemplate(java.lang.String)[pri:0, instance:net.assuresign.scenario_5.Scenario_5@1b2abca6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_5.Scenario_5@1b2abca6]" started-at="2021-04-20T13:45:04 IST" name="tearDown" finished-at="2021-04-20T13:45:04 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getValidTemplate status=SUCCESS method=Scenario_5.getValidTemplate(java.lang.String)[pri:0, instance:net.assuresign.scenario_5.Scenario_5@1b2abca6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_5.Scenario_5@1b2abca6]" started-at="2021-04-20T13:45:04 IST" name="reportUp" finished-at="2021-04-20T13:45:04 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_5.getValidUnAuthorizedTemplate(java.lang.String)[pri:0, instance:net.assuresign.scenario_5.Scenario_5@1b2abca6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="getValidUnAuthorizedTemplate(java.lang.String)[pri:0, instance:net.assuresign.scenario_5.Scenario_5@1b2abca6]" started-at="2021-04-20T13:45:04 IST" name="getValidUnAuthorizedTemplate" data-provider="version-data-provider" finished-at="2021-04-20T13:45:08 IST" duration-ms="4268" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getValidUnAuthorizedTemplate -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_5.Scenario_5@1b2abca6]" started-at="2021-04-20T13:45:08 IST" name="tearDown" finished-at="2021-04-20T13:45:08 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getValidUnAuthorizedTemplate status=SUCCESS method=Scenario_5.getValidUnAuthorizedTemplate(java.lang.String)[pri:0, instance:net.assuresign.scenario_5.Scenario_5@1b2abca6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- net.assuresign.scenario_5.Scenario_5 -->
      <class name="net.assuresign.scenario_7.Scenario_7">
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_7.Scenario_7@72e5a8e]" started-at="2021-04-20T13:46:04 IST" name="reportUp" finished-at="2021-04-20T13:46:04 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_7.listsAccounts_EmptyUsername(java.lang.String)[pri:0, instance:net.assuresign.scenario_7.Scenario_7@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="listsAccounts_EmptyUsername(java.lang.String)[pri:0, instance:net.assuresign.scenario_7.Scenario_7@72e5a8e]" started-at="2021-04-20T13:46:04 IST" name="listsAccounts_EmptyUsername" data-provider="version-data-provider" finished-at="2021-04-20T13:46:09 IST" duration-ms="4727" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code (<400> or <404>) but was <200>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code (<400> or <404>) but was <200>.

at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:72)
at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:59)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:493)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:674)
at jdk.internal.reflect.GeneratedMethodAccessor134.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:193)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:61)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:126)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:84)
at io.restassured.internal.ValidatableResponseImpl.super$2$statusCode(ValidatableResponseImpl.groovy)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1268)
at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)
at io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy:136)
at io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy)
at net.assuresign.scenario_7.Scenario_7.listsAccounts_EmptyUsername(Scenario_7.java:75)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- listsAccounts_EmptyUsername -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_7.Scenario_7@72e5a8e]" started-at="2021-04-20T13:46:09 IST" name="tearDown" finished-at="2021-04-20T13:46:09 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=listsAccounts_EmptyUsername status=FAILURE method=Scenario_7.listsAccounts_EmptyUsername(java.lang.String)[pri:0, instance:net.assuresign.scenario_7.Scenario_7@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_7.Scenario_7@72e5a8e]" started-at="2021-04-20T13:46:09 IST" name="reportUp" finished-at="2021-04-20T13:46:09 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_7.listsAccounts_InvalidUsername(java.lang.String)[pri:0, instance:net.assuresign.scenario_7.Scenario_7@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="listsAccounts_InvalidUsername(java.lang.String)[pri:0, instance:net.assuresign.scenario_7.Scenario_7@72e5a8e]" started-at="2021-04-20T13:46:09 IST" name="listsAccounts_InvalidUsername" data-provider="version-data-provider" finished-at="2021-04-20T13:46:14 IST" duration-ms="4523" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- listsAccounts_InvalidUsername -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_7.Scenario_7@72e5a8e]" started-at="2021-04-20T13:46:14 IST" name="tearDown" finished-at="2021-04-20T13:46:14 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=listsAccounts_InvalidUsername status=SUCCESS method=Scenario_7.listsAccounts_InvalidUsername(java.lang.String)[pri:0, instance:net.assuresign.scenario_7.Scenario_7@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_7.Scenario_7@72e5a8e]" started-at="2021-04-20T13:46:14 IST" name="reportUp" finished-at="2021-04-20T13:46:14 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_7.listsAccounts_ValidUsername(java.lang.String)[pri:0, instance:net.assuresign.scenario_7.Scenario_7@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="listsAccounts_ValidUsername(java.lang.String)[pri:0, instance:net.assuresign.scenario_7.Scenario_7@72e5a8e]" started-at="2021-04-20T13:46:14 IST" name="listsAccounts_ValidUsername" data-provider="version-data-provider" finished-at="2021-04-20T13:46:19 IST" duration-ms="5051" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- listsAccounts_ValidUsername -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_7.Scenario_7@72e5a8e]" started-at="2021-04-20T13:46:19 IST" name="tearDown" finished-at="2021-04-20T13:46:19 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=listsAccounts_ValidUsername status=SUCCESS method=Scenario_7.listsAccounts_ValidUsername(java.lang.String)[pri:0, instance:net.assuresign.scenario_7.Scenario_7@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- net.assuresign.scenario_7.Scenario_7 -->
      <class name="net.assuresign.scenario_10.Scenario_10">
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@272113c4]" started-at="2021-04-20T13:51:40 IST" name="reportUp" finished-at="2021-04-20T13:51:40 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_10.apiUser_invalidEnvironment(java.lang.String)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@272113c4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="apiUser_invalidEnvironment(java.lang.String)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@272113c4]" started-at="2021-04-20T13:51:40 IST" name="apiUser_invalidEnvironment" data-provider="version-data-provider" finished-at="2021-04-20T13:51:48 IST" duration-ms="8090" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- apiUser_invalidEnvironment -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@272113c4]" started-at="2021-04-20T13:51:48 IST" name="tearDown" finished-at="2021-04-20T13:51:48 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=apiUser_invalidEnvironment status=SUCCESS method=Scenario_10.apiUser_invalidEnvironment(java.lang.String)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@272113c4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@272113c4]" started-at="2021-04-20T13:51:48 IST" name="reportUp" finished-at="2021-04-20T13:51:48 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_10.apiUser_invalidRequest(java.lang.String)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@272113c4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="apiUser_invalidRequest(java.lang.String)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@272113c4]" started-at="2021-04-20T13:51:48 IST" name="apiUser_invalidRequest" data-provider="version-data-provider" finished-at="2021-04-20T13:51:54 IST" duration-ms="5685" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- apiUser_invalidRequest -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@272113c4]" started-at="2021-04-20T13:51:54 IST" name="tearDown" finished-at="2021-04-20T13:51:54 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=apiUser_invalidRequest status=SUCCESS method=Scenario_10.apiUser_invalidRequest(java.lang.String)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@272113c4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@272113c4]" started-at="2021-04-20T13:51:54 IST" name="reportUp" finished-at="2021-04-20T13:51:54 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_10.apiUser_invalidScope(java.lang.String)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@272113c4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="apiUser_invalidScope(java.lang.String)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@272113c4]" started-at="2021-04-20T13:51:54 IST" name="apiUser_invalidScope" data-provider="version-data-provider" finished-at="2021-04-20T13:51:58 IST" duration-ms="4138" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- apiUser_invalidScope -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@272113c4]" started-at="2021-04-20T13:51:58 IST" name="reportUp" finished-at="2021-04-20T13:51:58 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_10.apiUser_noBaseUserName(java.lang.String)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@272113c4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="apiUser_noBaseUserName(java.lang.String)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@272113c4]" started-at="2021-04-20T13:51:58 IST" name="apiUser_noBaseUserName" data-provider="version-data-provider" finished-at="2021-04-20T13:52:02 IST" duration-ms="4045" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- apiUser_noBaseUserName -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@272113c4]" started-at="2021-04-20T13:51:58 IST" name="tearDown" finished-at="2021-04-20T13:51:58 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=apiUser_invalidScope status=SUCCESS method=Scenario_10.apiUser_invalidScope(java.lang.String)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@272113c4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@272113c4]" started-at="2021-04-20T13:52:02 IST" name="tearDown" finished-at="2021-04-20T13:52:02 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=apiUser_noBaseUserName status=SUCCESS method=Scenario_10.apiUser_noBaseUserName(java.lang.String)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@272113c4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@272113c4]" started-at="2021-04-20T13:52:02 IST" name="reportUp" finished-at="2021-04-20T13:52:02 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_10.apiUser_noExpDate(java.lang.String)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@272113c4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="apiUser_noExpDate(java.lang.String)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@272113c4]" started-at="2021-04-20T13:52:02 IST" name="apiUser_noExpDate" data-provider="version-data-provider" finished-at="2021-04-20T13:52:08 IST" duration-ms="5785" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- apiUser_noExpDate -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@272113c4]" started-at="2021-04-20T13:52:08 IST" name="tearDown" finished-at="2021-04-20T13:52:08 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=apiUser_noExpDate status=SUCCESS method=Scenario_10.apiUser_noExpDate(java.lang.String)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@272113c4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@272113c4]" started-at="2021-04-20T13:52:08 IST" name="reportUp" finished-at="2021-04-20T13:52:08 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_10.apiUser_noRequest(java.lang.String)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@272113c4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="apiUser_noRequest(java.lang.String)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@272113c4]" started-at="2021-04-20T13:52:08 IST" name="apiUser_noRequest" data-provider="version-data-provider" finished-at="2021-04-20T13:52:12 IST" duration-ms="4287" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- apiUser_noRequest -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@272113c4]" started-at="2021-04-20T13:52:12 IST" name="tearDown" finished-at="2021-04-20T13:52:12 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=apiUser_noRequest status=SUCCESS method=Scenario_10.apiUser_noRequest(java.lang.String)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@272113c4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="apiUser_noScope(java.lang.String)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@272113c4]" started-at="2021-04-20T13:52:12 IST" name="apiUser_noScope" data-provider="version-data-provider" finished-at="2021-04-20T13:52:18 IST" duration-ms="6359" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- apiUser_noScope -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@272113c4]" started-at="2021-04-20T13:52:12 IST" name="reportUp" finished-at="2021-04-20T13:52:12 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_10.apiUser_noScope(java.lang.String)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@272113c4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@272113c4]" started-at="2021-04-20T13:52:18 IST" name="tearDown" finished-at="2021-04-20T13:52:18 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=apiUser_noScope status=SUCCESS method=Scenario_10.apiUser_noScope(java.lang.String)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@272113c4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@272113c4]" started-at="2021-04-20T13:52:18 IST" name="reportUp" finished-at="2021-04-20T13:52:18 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_10.apiUser_noSpecificUser(java.lang.String)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@272113c4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="apiUser_noSpecificUser(java.lang.String)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@272113c4]" started-at="2021-04-20T13:52:18 IST" name="apiUser_noSpecificUser" data-provider="version-data-provider" finished-at="2021-04-20T13:52:24 IST" duration-ms="5761" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- apiUser_noSpecificUser -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@272113c4]" started-at="2021-04-20T13:52:24 IST" name="tearDown" finished-at="2021-04-20T13:52:24 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=apiUser_noSpecificUser status=SUCCESS method=Scenario_10.apiUser_noSpecificUser(java.lang.String)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@272113c4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@272113c4]" started-at="2021-04-20T13:52:24 IST" name="reportUp" finished-at="2021-04-20T13:52:24 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_10.apiUser_noValueBaseUserName(java.lang.String)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@272113c4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="apiUser_noValueBaseUserName(java.lang.String)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@272113c4]" started-at="2021-04-20T13:52:24 IST" name="apiUser_noValueBaseUserName" data-provider="version-data-provider" finished-at="2021-04-20T13:52:29 IST" duration-ms="5112" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- apiUser_noValueBaseUserName -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@272113c4]" started-at="2021-04-20T13:52:29 IST" name="tearDown" finished-at="2021-04-20T13:52:29 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=apiUser_noValueBaseUserName status=SUCCESS method=Scenario_10.apiUser_noValueBaseUserName(java.lang.String)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@272113c4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="apiUser_organizationScopes(java.lang.String)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@272113c4]" started-at="2021-04-20T13:52:29 IST" name="apiUser_organizationScopes" data-provider="version-data-provider" finished-at="2021-04-20T13:52:35 IST" duration-ms="5439" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- apiUser_organizationScopes -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@272113c4]" started-at="2021-04-20T13:52:29 IST" name="reportUp" finished-at="2021-04-20T13:52:29 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_10.apiUser_organizationScopes(java.lang.String)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@272113c4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@272113c4]" started-at="2021-04-20T13:52:35 IST" name="tearDown" finished-at="2021-04-20T13:52:35 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=apiUser_organizationScopes status=SUCCESS method=Scenario_10.apiUser_organizationScopes(java.lang.String)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@272113c4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@272113c4]" started-at="2021-04-20T13:52:35 IST" name="reportUp" finished-at="2021-04-20T13:52:35 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_10.apiUser_validRequest(java.lang.String)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@272113c4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="apiUser_validRequest(java.lang.String)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@272113c4]" started-at="2021-04-20T13:52:35 IST" name="apiUser_validRequest" data-provider="version-data-provider" finished-at="2021-04-20T13:52:40 IST" duration-ms="5754" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- apiUser_validRequest -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@272113c4]" started-at="2021-04-20T13:52:40 IST" name="tearDown" finished-at="2021-04-20T13:52:40 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=apiUser_validRequest status=SUCCESS method=Scenario_10.apiUser_validRequest(java.lang.String)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@272113c4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@272113c4]" started-at="2021-04-20T13:52:40 IST" name="reportUp" finished-at="2021-04-20T13:52:40 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_10.apiUser_validRequestSpecificEnv(java.lang.String)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@272113c4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="apiUser_validRequestSpecificEnv(java.lang.String)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@272113c4]" started-at="2021-04-20T13:52:40 IST" name="apiUser_validRequestSpecificEnv" data-provider="version-data-provider" finished-at="2021-04-20T13:52:46 IST" duration-ms="5125" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- apiUser_validRequestSpecificEnv -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@272113c4]" started-at="2021-04-20T13:52:46 IST" name="tearDown" finished-at="2021-04-20T13:52:46 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=apiUser_validRequestSpecificEnv status=SUCCESS method=Scenario_10.apiUser_validRequestSpecificEnv(java.lang.String)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@272113c4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@272113c4]" started-at="2021-04-20T13:52:46 IST" name="reportUp" finished-at="2021-04-20T13:52:46 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_10.apiUser_withoutEnvironment(java.lang.String)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@272113c4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="apiUser_withoutEnvironment(java.lang.String)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@272113c4]" started-at="2021-04-20T13:52:46 IST" name="apiUser_withoutEnvironment" data-provider="version-data-provider" finished-at="2021-04-20T13:52:50 IST" duration-ms="4788" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- apiUser_withoutEnvironment -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@272113c4]" started-at="2021-04-20T13:52:50 IST" name="tearDown" finished-at="2021-04-20T13:52:50 IST" duration-ms="6" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=apiUser_withoutEnvironment status=SUCCESS method=Scenario_10.apiUser_withoutEnvironment(java.lang.String)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@272113c4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- net.assuresign.scenario_10.Scenario_10 -->
      <class name="net.assuresign.scenario_12.Scenario_12">
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_12.Scenario_12@771a660]" started-at="2021-04-20T13:53:03 IST" name="reportUp" finished-at="2021-04-20T13:53:03 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_12.collectionRun_submit(java.lang.String)[pri:0, instance:net.assuresign.scenario_12.Scenario_12@771a660] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="collectionRun_submit(java.lang.String)[pri:0, instance:net.assuresign.scenario_12.Scenario_12@771a660]" started-at="2021-04-20T13:53:03 IST" name="collectionRun_submit" data-provider="version-data-provider" finished-at="2021-04-20T13:53:37 IST" duration-ms="34595" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- collectionRun_submit -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_12.Scenario_12@771a660]" started-at="2021-04-20T13:53:37 IST" name="tearDown" finished-at="2021-04-20T13:53:37 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=collectionRun_submit status=SUCCESS method=Scenario_12.collectionRun_submit(java.lang.String)[pri:0, instance:net.assuresign.scenario_12.Scenario_12@771a660] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- net.assuresign.scenario_12.Scenario_12 -->
      <class name="net.assuresign.scenario_8.Scenario_8_1">
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_1@53aac487]" started-at="2021-04-20T13:47:28 IST" name="reportUp" finished-at="2021-04-20T13:47:28 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_8_1.getEnvelope_ForSignedEnvelopes(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_1@53aac487] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="getEnvelope_ForSignedEnvelopes(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_1@53aac487]" started-at="2021-04-20T13:47:28 IST" name="getEnvelope_ForSignedEnvelopes" data-provider="version-data-provider" finished-at="2021-04-20T13:47:52 IST" duration-ms="23667" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code (<400> or <404>) but was <200>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code (<400> or <404>) but was <200>.

at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:72)
at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:59)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:493)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:674)
at jdk.internal.reflect.GeneratedMethodAccessor134.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:193)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:61)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:126)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:84)
at io.restassured.internal.ValidatableResponseImpl.super$2$statusCode(ValidatableResponseImpl.groovy)
at jdk.internal.reflect.GeneratedMethodAccessor160.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1268)
at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)
at io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy:136)
at io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy)
at net.assuresign.scenario_8.Scenario_8_1.getEnvelope_ForSignedEnvelopes(Scenario_8_1.java:79)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getEnvelope_ForSignedEnvelopes -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_1@53aac487]" started-at="2021-04-20T13:47:52 IST" name="tearDown" finished-at="2021-04-20T13:47:52 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getEnvelope_ForSignedEnvelopes status=FAILURE method=Scenario_8_1.getEnvelope_ForSignedEnvelopes(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_1@53aac487] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_1@53aac487]" started-at="2021-04-20T13:47:52 IST" name="reportUp" finished-at="2021-04-20T13:47:52 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_8_1.getEnvelope_ForValidEnvelopes(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_1@53aac487] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="getEnvelope_ForValidEnvelopes(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_1@53aac487]" started-at="2021-04-20T13:47:52 IST" name="getEnvelope_ForValidEnvelopes" data-provider="version-data-provider" finished-at="2021-04-20T13:48:09 IST" duration-ms="17278" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getEnvelope_ForValidEnvelopes -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_1@53aac487]" started-at="2021-04-20T13:48:09 IST" name="tearDown" finished-at="2021-04-20T13:48:09 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getEnvelope_ForValidEnvelopes status=SUCCESS method=Scenario_8_1.getEnvelope_ForValidEnvelopes(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_1@53aac487] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_1@53aac487]" started-at="2021-04-20T13:48:09 IST" name="reportUp" finished-at="2021-04-20T13:48:09 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_8_1.getEnvelope_ValidDoctypeEnvelopID(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_1@53aac487] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="getEnvelope_ValidDoctypeEnvelopID(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_1@53aac487]" started-at="2021-04-20T13:48:09 IST" name="getEnvelope_ValidDoctypeEnvelopID" data-provider="version-data-provider" finished-at="2021-04-20T13:48:24 IST" duration-ms="15030" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getEnvelope_ValidDoctypeEnvelopID -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_1@53aac487]" started-at="2021-04-20T13:48:24 IST" name="tearDown" finished-at="2021-04-20T13:48:24 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getEnvelope_ValidDoctypeEnvelopID status=SUCCESS method=Scenario_8_1.getEnvelope_ValidDoctypeEnvelopID(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_1@53aac487] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_1@53aac487]" started-at="2021-04-20T13:48:24 IST" name="reportUp" finished-at="2021-04-20T13:48:24 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_8_1.getEnvelopes_ValidEnvelopID(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_1@53aac487] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="getEnvelopes_ValidEnvelopID(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_1@53aac487]" started-at="2021-04-20T13:48:24 IST" name="getEnvelopes_ValidEnvelopID" data-provider="version-data-provider" finished-at="2021-04-20T13:48:40 IST" duration-ms="15683" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getEnvelopes_ValidEnvelopID -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_1@53aac487]" started-at="2021-04-20T13:48:40 IST" name="tearDown" finished-at="2021-04-20T13:48:40 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getEnvelopes_ValidEnvelopID status=SUCCESS method=Scenario_8_1.getEnvelopes_ValidEnvelopID(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_1@53aac487] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="getHistory_ValidEnvelopID(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_1@53aac487]" started-at="2021-04-20T13:48:40 IST" name="getHistory_ValidEnvelopID" data-provider="version-data-provider" finished-at="2021-04-20T13:48:56 IST" duration-ms="16616" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getHistory_ValidEnvelopID -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_1@53aac487]" started-at="2021-04-20T13:48:40 IST" name="reportUp" finished-at="2021-04-20T13:48:40 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_8_1.getHistory_ValidEnvelopID(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_1@53aac487] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_1@53aac487]" started-at="2021-04-20T13:48:56 IST" name="tearDown" finished-at="2021-04-20T13:48:56 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getHistory_ValidEnvelopID status=SUCCESS method=Scenario_8_1.getHistory_ValidEnvelopID(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_1@53aac487] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_1@53aac487]" started-at="2021-04-20T13:48:56 IST" name="reportUp" finished-at="2021-04-20T13:48:56 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_8_1.getStatus_ValidEnvelopID(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_1@53aac487] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="getStatus_ValidEnvelopID(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_1@53aac487]" started-at="2021-04-20T13:48:56 IST" name="getStatus_ValidEnvelopID" data-provider="version-data-provider" finished-at="2021-04-20T13:49:13 IST" duration-ms="17025" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getStatus_ValidEnvelopID -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_1@53aac487]" started-at="2021-04-20T13:49:13 IST" name="tearDown" finished-at="2021-04-20T13:49:13 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getStatus_ValidEnvelopID status=SUCCESS method=Scenario_8_1.getStatus_ValidEnvelopID(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_1@53aac487] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_1@53aac487]" started-at="2021-04-20T13:49:13 IST" name="reportUp" finished-at="2021-04-20T13:49:13 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_8_1.getValues_ValidEnvelopID(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_1@53aac487] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="getValues_ValidEnvelopID(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_1@53aac487]" started-at="2021-04-20T13:49:13 IST" name="getValues_ValidEnvelopID" data-provider="version-data-provider" finished-at="2021-04-20T13:49:28 IST" duration-ms="14684" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getValues_ValidEnvelopID -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_1@53aac487]" started-at="2021-04-20T13:49:28 IST" name="tearDown" finished-at="2021-04-20T13:49:28 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getValues_ValidEnvelopID status=SUCCESS method=Scenario_8_1.getValues_ValidEnvelopID(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_1@53aac487] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- net.assuresign.scenario_8.Scenario_8_1 -->
      <class name="net.assuresign.scenario_8.Scenario_8_2">
        <test-method signature="cancel_AlreadyCancelledEnvelopID(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_2@52b1beb6]" started-at="2021-04-20T13:49:28 IST" name="cancel_AlreadyCancelledEnvelopID" data-provider="version-data-provider" finished-at="2021-04-20T13:49:45 IST" duration-ms="16595" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cancel_AlreadyCancelledEnvelopID -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_2@52b1beb6]" started-at="2021-04-20T13:49:28 IST" name="reportUp" finished-at="2021-04-20T13:49:28 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_8_2.cancel_AlreadyCancelledEnvelopID(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_2@52b1beb6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_2@52b1beb6]" started-at="2021-04-20T13:49:45 IST" name="tearDown" finished-at="2021-04-20T13:49:45 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=cancel_AlreadyCancelledEnvelopID status=SUCCESS method=Scenario_8_2.cancel_AlreadyCancelledEnvelopID(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_2@52b1beb6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_2@52b1beb6]" started-at="2021-04-20T13:49:45 IST" name="reportUp" finished-at="2021-04-20T13:49:45 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_8_2.cancel_ValidEnvelopID(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_2@52b1beb6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="cancel_ValidEnvelopID(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_2@52b1beb6]" started-at="2021-04-20T13:49:45 IST" name="cancel_ValidEnvelopID" data-provider="version-data-provider" finished-at="2021-04-20T13:49:50 IST" duration-ms="5436" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cancel_ValidEnvelopID -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_2@52b1beb6]" started-at="2021-04-20T13:49:50 IST" name="tearDown" finished-at="2021-04-20T13:49:50 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=cancel_ValidEnvelopID status=SUCCESS method=Scenario_8_2.cancel_ValidEnvelopID(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_2@52b1beb6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- net.assuresign.scenario_8.Scenario_8_2 -->
      <class name="net.assuresign.scenario_8.Scenario_8_3">
        <test-method signature="Signers_NotCompletedEnvelop(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_3@273e7444]" started-at="2021-04-20T13:49:50 IST" name="Signers_NotCompletedEnvelop" data-provider="version-data-provider" finished-at="2021-04-20T13:50:06 IST" duration-ms="16041" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Signers_NotCompletedEnvelop -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_3@273e7444]" started-at="2021-04-20T13:49:50 IST" name="reportUp" finished-at="2021-04-20T13:49:50 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_8_3.Signers_NotCompletedEnvelop(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_3@273e7444] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_3@273e7444]" started-at="2021-04-20T13:50:06 IST" name="tearDown" finished-at="2021-04-20T13:50:06 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Signers_NotCompletedEnvelop status=SUCCESS method=Scenario_8_3.Signers_NotCompletedEnvelop(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_3@273e7444] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="getEnvelopes_ClosedWithValidFormData(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_3@273e7444]" started-at="2021-04-20T13:50:06 IST" name="getEnvelopes_ClosedWithValidFormData" data-provider="version-data-provider" finished-at="2021-04-20T13:50:14 IST" duration-ms="7332" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getEnvelopes_ClosedWithValidFormData -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_3@273e7444]" started-at="2021-04-20T13:50:06 IST" name="reportUp" finished-at="2021-04-20T13:50:06 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_8_3.getEnvelopes_ClosedWithValidFormData(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_3@273e7444] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_3@273e7444]" started-at="2021-04-20T13:50:14 IST" name="tearDown" finished-at="2021-04-20T13:50:14 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getEnvelopes_ClosedWithValidFormData status=SUCCESS method=Scenario_8_3.getEnvelopes_ClosedWithValidFormData(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_3@273e7444] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- net.assuresign.scenario_8.Scenario_8_3 -->
      <class name="net.assuresign.scenario_8.Scenario_8_4">
        <test-method signature="Signers_CompletedDoc(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_4@7db12bb6]" started-at="2021-04-20T13:50:14 IST" name="Signers_CompletedDoc" data-provider="version-data-provider" finished-at="2021-04-20T13:50:31 IST" duration-ms="17278" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Signers_CompletedDoc -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_4@7db12bb6]" started-at="2021-04-20T13:50:14 IST" name="reportUp" finished-at="2021-04-20T13:50:14 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_8_4.Signers_CompletedDoc(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_4@7db12bb6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_4@7db12bb6]" started-at="2021-04-20T13:50:31 IST" name="tearDown" finished-at="2021-04-20T13:50:31 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Signers_CompletedDoc status=SUCCESS method=Scenario_8_4.Signers_CompletedDoc(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_4@7db12bb6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="Signers_emptySignerAndEnvelopID(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_4@7db12bb6]" started-at="2021-04-20T13:50:31 IST" name="Signers_emptySignerAndEnvelopID" data-provider="version-data-provider" finished-at="2021-04-20T13:50:35 IST" duration-ms="4452" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Signers_emptySignerAndEnvelopID -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_4@7db12bb6]" started-at="2021-04-20T13:50:31 IST" name="reportUp" finished-at="2021-04-20T13:50:31 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_8_4.Signers_emptySignerAndEnvelopID(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_4@7db12bb6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_4@7db12bb6]" started-at="2021-04-20T13:50:35 IST" name="tearDown" finished-at="2021-04-20T13:50:35 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Signers_emptySignerAndEnvelopID status=SUCCESS method=Scenario_8_4.Signers_emptySignerAndEnvelopID(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_4@7db12bb6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_4@7db12bb6]" started-at="2021-04-20T13:50:35 IST" name="reportUp" finished-at="2021-04-20T13:50:35 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_8_4.Signers_invalidEnvelopeID(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_4@7db12bb6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="Signers_invalidEnvelopeID(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_4@7db12bb6]" started-at="2021-04-20T13:50:35 IST" name="Signers_invalidEnvelopeID" data-provider="version-data-provider" finished-at="2021-04-20T13:50:40 IST" duration-ms="5116" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Signers_invalidEnvelopeID -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_4@7db12bb6]" started-at="2021-04-20T13:50:40 IST" name="tearDown" finished-at="2021-04-20T13:50:40 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Signers_invalidEnvelopeID status=SUCCESS method=Scenario_8_4.Signers_invalidEnvelopeID(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_4@7db12bb6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_4@7db12bb6]" started-at="2021-04-20T13:50:40 IST" name="reportUp" finished-at="2021-04-20T13:50:40 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_8_4.Signers_invalidSignerID(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_4@7db12bb6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="Signers_invalidSignerID(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_4@7db12bb6]" started-at="2021-04-20T13:50:40 IST" name="Signers_invalidSignerID" data-provider="version-data-provider" finished-at="2021-04-20T13:50:57 IST" duration-ms="16354" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Signers_invalidSignerID -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_4@7db12bb6]" started-at="2021-04-20T13:50:57 IST" name="tearDown" finished-at="2021-04-20T13:50:57 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Signers_invalidSignerID status=SUCCESS method=Scenario_8_4.Signers_invalidSignerID(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_4@7db12bb6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="Signers_validInput(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_4@7db12bb6]" started-at="2021-04-20T13:50:57 IST" name="Signers_validInput" data-provider="version-data-provider" finished-at="2021-04-20T13:51:13 IST" duration-ms="16279" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Signers_validInput -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_4@7db12bb6]" started-at="2021-04-20T13:50:57 IST" name="reportUp" finished-at="2021-04-20T13:50:57 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_8_4.Signers_validInput(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_4@7db12bb6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_4@7db12bb6]" started-at="2021-04-20T13:51:13 IST" name="tearDown" finished-at="2021-04-20T13:51:13 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Signers_validInput status=SUCCESS method=Scenario_8_4.Signers_validInput(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_4@7db12bb6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_4@7db12bb6]" started-at="2021-04-20T13:51:13 IST" name="reportUp" finished-at="2021-04-20T13:51:13 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_8_4.Signers_withoutRequestBody(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_4@7db12bb6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="Signers_withoutRequestBody(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_4@7db12bb6]" started-at="2021-04-20T13:51:13 IST" name="Signers_withoutRequestBody" data-provider="version-data-provider" finished-at="2021-04-20T13:51:31 IST" duration-ms="17592" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Signers_withoutRequestBody -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_4@7db12bb6]" started-at="2021-04-20T13:51:31 IST" name="tearDown" finished-at="2021-04-20T13:51:31 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Signers_withoutRequestBody status=SUCCESS method=Scenario_8_4.Signers_withoutRequestBody(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_4@7db12bb6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- net.assuresign.scenario_8.Scenario_8_4 -->
      <class name="net.assuresign.scenario_11.Scenario_11">
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_11.Scenario_11@73e9cf30]" started-at="2021-04-20T13:52:50 IST" name="reportUp" finished-at="2021-04-20T13:52:50 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_11.environments_EmptyUsername(java.lang.String)[pri:0, instance:net.assuresign.scenario_11.Scenario_11@73e9cf30] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="environments_EmptyUsername(java.lang.String)[pri:0, instance:net.assuresign.scenario_11.Scenario_11@73e9cf30]" started-at="2021-04-20T13:52:50 IST" name="environments_EmptyUsername" data-provider="version-data-provider" finished-at="2021-04-20T13:52:54 IST" duration-ms="4017" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- environments_EmptyUsername -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_11.Scenario_11@73e9cf30]" started-at="2021-04-20T13:52:54 IST" name="tearDown" finished-at="2021-04-20T13:52:54 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=environments_EmptyUsername status=SUCCESS method=Scenario_11.environments_EmptyUsername(java.lang.String)[pri:0, instance:net.assuresign.scenario_11.Scenario_11@73e9cf30] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="environments_InvalidUsername(java.lang.String)[pri:0, instance:net.assuresign.scenario_11.Scenario_11@73e9cf30]" started-at="2021-04-20T13:52:54 IST" name="environments_InvalidUsername" data-provider="version-data-provider" finished-at="2021-04-20T13:52:58 IST" duration-ms="4083" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- environments_InvalidUsername -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_11.Scenario_11@73e9cf30]" started-at="2021-04-20T13:52:54 IST" name="reportUp" finished-at="2021-04-20T13:52:54 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_11.environments_InvalidUsername(java.lang.String)[pri:0, instance:net.assuresign.scenario_11.Scenario_11@73e9cf30] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_11.Scenario_11@73e9cf30]" started-at="2021-04-20T13:52:58 IST" name="tearDown" finished-at="2021-04-20T13:52:58 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=environments_InvalidUsername status=SUCCESS method=Scenario_11.environments_InvalidUsername(java.lang.String)[pri:0, instance:net.assuresign.scenario_11.Scenario_11@73e9cf30] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_11.Scenario_11@73e9cf30]" started-at="2021-04-20T13:52:58 IST" name="reportUp" finished-at="2021-04-20T13:52:58 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_11.environments_validUsername(java.lang.String)[pri:0, instance:net.assuresign.scenario_11.Scenario_11@73e9cf30] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="environments_validUsername(java.lang.String)[pri:0, instance:net.assuresign.scenario_11.Scenario_11@73e9cf30]" started-at="2021-04-20T13:52:58 IST" name="environments_validUsername" data-provider="version-data-provider" finished-at="2021-04-20T13:53:03 IST" duration-ms="4304" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- environments_validUsername -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_11.Scenario_11@73e9cf30]" started-at="2021-04-20T13:53:03 IST" name="tearDown" finished-at="2021-04-20T13:53:03 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=environments_validUsername status=SUCCESS method=Scenario_11.environments_validUsername(java.lang.String)[pri:0, instance:net.assuresign.scenario_11.Scenario_11@73e9cf30] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- net.assuresign.scenario_11.Scenario_11 -->
      <class name="net.assuresign.scenario_9.Scenario_9">
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_9.Scenario_9@783a467b]" started-at="2021-04-20T13:51:31 IST" name="reportUp" finished-at="2021-04-20T13:51:31 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_9.getSSOToken(java.lang.String)[pri:0, instance:net.assuresign.scenario_9.Scenario_9@783a467b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="getSSOToken(java.lang.String)[pri:0, instance:net.assuresign.scenario_9.Scenario_9@783a467b]" started-at="2021-04-20T13:51:31 IST" name="getSSOToken" data-provider="version-data-provider" finished-at="2021-04-20T13:51:35 IST" duration-ms="4815" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSSOToken -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_9.Scenario_9@783a467b]" started-at="2021-04-20T13:51:35 IST" name="tearDown" finished-at="2021-04-20T13:51:35 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getSSOToken status=SUCCESS method=Scenario_9.getSSOToken(java.lang.String)[pri:0, instance:net.assuresign.scenario_9.Scenario_9@783a467b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="getSSOToken_XASUserContext(java.lang.String)[pri:0, instance:net.assuresign.scenario_9.Scenario_9@783a467b]" started-at="2021-04-20T13:51:35 IST" name="getSSOToken_XASUserContext" data-provider="version-data-provider" finished-at="2021-04-20T13:51:40 IST" duration-ms="4477" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSSOToken_XASUserContext -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_9.Scenario_9@783a467b]" started-at="2021-04-20T13:51:35 IST" name="reportUp" finished-at="2021-04-20T13:51:35 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_9.getSSOToken_XASUserContext(java.lang.String)[pri:0, instance:net.assuresign.scenario_9.Scenario_9@783a467b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_9.Scenario_9@783a467b]" started-at="2021-04-20T13:51:40 IST" name="tearDown" finished-at="2021-04-20T13:51:40 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getSSOToken_XASUserContext status=SUCCESS method=Scenario_9.getSSOToken_XASUserContext(java.lang.String)[pri:0, instance:net.assuresign.scenario_9.Scenario_9@783a467b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- net.assuresign.scenario_9.Scenario_9 -->
      <class name="net.assuresign.scenario_6.Scenario_6">
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_6.Scenario_6@7d4f9aae]" started-at="2021-04-20T13:45:08 IST" name="reportUp" finished-at="2021-04-20T13:45:08 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_6.getAllEmailDesignForValidEmail(java.lang.String)[pri:0, instance:net.assuresign.scenario_6.Scenario_6@7d4f9aae] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="getAllEmailDesignForValidEmail(java.lang.String)[pri:0, instance:net.assuresign.scenario_6.Scenario_6@7d4f9aae]" started-at="2021-04-20T13:45:08 IST" name="getAllEmailDesignForValidEmail" data-provider="version-data-provider" finished-at="2021-04-20T13:45:13 IST" duration-ms="4838" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllEmailDesignForValidEmail -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_6.Scenario_6@7d4f9aae]" started-at="2021-04-20T13:45:13 IST" name="tearDown" finished-at="2021-04-20T13:45:13 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getAllEmailDesignForValidEmail status=SUCCESS method=Scenario_6.getAllEmailDesignForValidEmail(java.lang.String)[pri:0, instance:net.assuresign.scenario_6.Scenario_6@7d4f9aae] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="getAllEmailDesignSets(java.lang.String)[pri:0, instance:net.assuresign.scenario_6.Scenario_6@7d4f9aae]" started-at="2021-04-20T13:45:13 IST" name="getAllEmailDesignSets" data-provider="version-data-provider" finished-at="2021-04-20T13:45:17 IST" duration-ms="4191" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllEmailDesignSets -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_6.Scenario_6@7d4f9aae]" started-at="2021-04-20T13:45:13 IST" name="reportUp" finished-at="2021-04-20T13:45:13 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_6.getAllEmailDesignSets(java.lang.String)[pri:0, instance:net.assuresign.scenario_6.Scenario_6@7d4f9aae] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_6.Scenario_6@7d4f9aae]" started-at="2021-04-20T13:45:17 IST" name="tearDown" finished-at="2021-04-20T13:45:17 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getAllEmailDesignSets status=SUCCESS method=Scenario_6.getAllEmailDesignSets(java.lang.String)[pri:0, instance:net.assuresign.scenario_6.Scenario_6@7d4f9aae] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_6.Scenario_6@7d4f9aae]" started-at="2021-04-20T13:45:17 IST" name="reportUp" finished-at="2021-04-20T13:45:17 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_6.getAllEmailDesign_EmptyEmail(java.lang.String)[pri:0, instance:net.assuresign.scenario_6.Scenario_6@7d4f9aae] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="getAllEmailDesign_EmptyEmail(java.lang.String)[pri:0, instance:net.assuresign.scenario_6.Scenario_6@7d4f9aae]" started-at="2021-04-20T13:45:17 IST" name="getAllEmailDesign_EmptyEmail" data-provider="version-data-provider" finished-at="2021-04-20T13:45:35 IST" duration-ms="17943" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code (<400> or <404>) but was <200>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code (<400> or <404>) but was <200>.

at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:72)
at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:59)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:493)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:674)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:193)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:61)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:126)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:84)
at io.restassured.internal.ValidatableResponseImpl.super$2$statusCode(ValidatableResponseImpl.groovy)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1268)
at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)
at io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy:136)
at io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy)
at net.assuresign.scenario_6.Scenario_6.getAllEmailDesign_EmptyEmail(Scenario_6.java:132)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllEmailDesign_EmptyEmail -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_6.Scenario_6@7d4f9aae]" started-at="2021-04-20T13:45:35 IST" name="tearDown" finished-at="2021-04-20T13:45:35 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getAllEmailDesign_EmptyEmail status=FAILURE method=Scenario_6.getAllEmailDesign_EmptyEmail(java.lang.String)[pri:0, instance:net.assuresign.scenario_6.Scenario_6@7d4f9aae] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_6.Scenario_6@7d4f9aae]" started-at="2021-04-20T13:45:35 IST" name="reportUp" finished-at="2021-04-20T13:45:35 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_6.getAllEmailDesign_InvalidEmail(java.lang.String)[pri:0, instance:net.assuresign.scenario_6.Scenario_6@7d4f9aae] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="getAllEmailDesign_InvalidEmail(java.lang.String)[pri:0, instance:net.assuresign.scenario_6.Scenario_6@7d4f9aae]" started-at="2021-04-20T13:45:35 IST" name="getAllEmailDesign_InvalidEmail" data-provider="version-data-provider" finished-at="2021-04-20T13:45:40 IST" duration-ms="4833" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllEmailDesign_InvalidEmail -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_6.Scenario_6@7d4f9aae]" started-at="2021-04-20T13:45:40 IST" name="tearDown" finished-at="2021-04-20T13:45:40 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getAllEmailDesign_InvalidEmail status=SUCCESS method=Scenario_6.getAllEmailDesign_InvalidEmail(java.lang.String)[pri:0, instance:net.assuresign.scenario_6.Scenario_6@7d4f9aae] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_6.Scenario_6@7d4f9aae]" started-at="2021-04-20T13:45:40 IST" name="reportUp" finished-at="2021-04-20T13:45:40 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_6.retriveNotificationForInvalidDesignsetID(java.lang.String)[pri:0, instance:net.assuresign.scenario_6.Scenario_6@7d4f9aae] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="retriveNotificationForInvalidDesignsetID(java.lang.String)[pri:0, instance:net.assuresign.scenario_6.Scenario_6@7d4f9aae]" started-at="2021-04-20T13:45:40 IST" name="retriveNotificationForInvalidDesignsetID" data-provider="version-data-provider" finished-at="2021-04-20T13:45:45 IST" duration-ms="5339" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- retriveNotificationForInvalidDesignsetID -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_6.Scenario_6@7d4f9aae]" started-at="2021-04-20T13:45:45 IST" name="tearDown" finished-at="2021-04-20T13:45:45 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=retriveNotificationForInvalidDesignsetID status=SUCCESS method=Scenario_6.retriveNotificationForInvalidDesignsetID(java.lang.String)[pri:0, instance:net.assuresign.scenario_6.Scenario_6@7d4f9aae] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_6.Scenario_6@7d4f9aae]" started-at="2021-04-20T13:45:45 IST" name="reportUp" finished-at="2021-04-20T13:45:45 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_6.retriveNotificationForValidEmail(java.lang.String)[pri:0, instance:net.assuresign.scenario_6.Scenario_6@7d4f9aae] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="retriveNotificationForValidEmail(java.lang.String)[pri:0, instance:net.assuresign.scenario_6.Scenario_6@7d4f9aae]" started-at="2021-04-20T13:45:45 IST" name="retriveNotificationForValidEmail" data-provider="version-data-provider" finished-at="2021-04-20T13:45:51 IST" duration-ms="5370" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- retriveNotificationForValidEmail -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_6.Scenario_6@7d4f9aae]" started-at="2021-04-20T13:45:51 IST" name="tearDown" finished-at="2021-04-20T13:45:51 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=retriveNotificationForValidEmail status=SUCCESS method=Scenario_6.retriveNotificationForValidEmail(java.lang.String)[pri:0, instance:net.assuresign.scenario_6.Scenario_6@7d4f9aae] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="retriveNotification_EmptyCulture(java.lang.String)[pri:0, instance:net.assuresign.scenario_6.Scenario_6@7d4f9aae]" started-at="2021-04-20T13:45:51 IST" name="retriveNotification_EmptyCulture" data-provider="version-data-provider" finished-at="2021-04-20T13:45:55 IST" duration-ms="4519" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- retriveNotification_EmptyCulture -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_6.Scenario_6@7d4f9aae]" started-at="2021-04-20T13:45:51 IST" name="reportUp" finished-at="2021-04-20T13:45:51 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_6.retriveNotification_EmptyCulture(java.lang.String)[pri:0, instance:net.assuresign.scenario_6.Scenario_6@7d4f9aae] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_6.Scenario_6@7d4f9aae]" started-at="2021-04-20T13:45:55 IST" name="tearDown" finished-at="2021-04-20T13:45:55 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=retriveNotification_EmptyCulture status=SUCCESS method=Scenario_6.retriveNotification_EmptyCulture(java.lang.String)[pri:0, instance:net.assuresign.scenario_6.Scenario_6@7d4f9aae] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="retriveNotification_EmptyDesignsetID(java.lang.String)[pri:0, instance:net.assuresign.scenario_6.Scenario_6@7d4f9aae]" started-at="2021-04-20T13:45:55 IST" name="retriveNotification_EmptyDesignsetID" data-provider="version-data-provider" finished-at="2021-04-20T13:46:00 IST" duration-ms="4752" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code (<400> or <404>) but was <200>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code (<400> or <404>) but was <200>.

at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:72)
at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:59)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:493)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:674)
at jdk.internal.reflect.GeneratedMethodAccessor134.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:193)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:61)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:126)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:84)
at io.restassured.internal.ValidatableResponseImpl.super$2$statusCode(ValidatableResponseImpl.groovy)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1268)
at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)
at io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy:136)
at io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy)
at net.assuresign.scenario_6.Scenario_6.retriveNotification_EmptyDesignsetID(Scenario_6.java:188)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- retriveNotification_EmptyDesignsetID -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_6.Scenario_6@7d4f9aae]" started-at="2021-04-20T13:45:55 IST" name="reportUp" finished-at="2021-04-20T13:45:55 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_6.retriveNotification_EmptyDesignsetID(java.lang.String)[pri:0, instance:net.assuresign.scenario_6.Scenario_6@7d4f9aae] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_6.Scenario_6@7d4f9aae]" started-at="2021-04-20T13:46:00 IST" name="tearDown" finished-at="2021-04-20T13:46:00 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=retriveNotification_EmptyDesignsetID status=FAILURE method=Scenario_6.retriveNotification_EmptyDesignsetID(java.lang.String)[pri:0, instance:net.assuresign.scenario_6.Scenario_6@7d4f9aae] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_6.Scenario_6@7d4f9aae]" started-at="2021-04-20T13:46:00 IST" name="reportUp" finished-at="2021-04-20T13:46:00 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_6.retriveNotification_InvalidCulture(java.lang.String)[pri:0, instance:net.assuresign.scenario_6.Scenario_6@7d4f9aae] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="retriveNotification_InvalidCulture(java.lang.String)[pri:0, instance:net.assuresign.scenario_6.Scenario_6@7d4f9aae]" started-at="2021-04-20T13:46:00 IST" name="retriveNotification_InvalidCulture" data-provider="version-data-provider" finished-at="2021-04-20T13:46:04 IST" duration-ms="4536" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code (<400> or <404>) but was <200>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code (<400> or <404>) but was <200>.

at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:72)
at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:59)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:493)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:674)
at jdk.internal.reflect.GeneratedMethodAccessor134.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:193)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:61)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:126)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:84)
at io.restassured.internal.ValidatableResponseImpl.super$2$statusCode(ValidatableResponseImpl.groovy)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1268)
at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)
at io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy:136)
at io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy)
at net.assuresign.scenario_6.Scenario_6.retriveNotification_InvalidCulture(Scenario_6.java:150)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- retriveNotification_InvalidCulture -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_6.Scenario_6@7d4f9aae]" started-at="2021-04-20T13:46:04 IST" name="tearDown" finished-at="2021-04-20T13:46:04 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=retriveNotification_InvalidCulture status=FAILURE method=Scenario_6.retriveNotification_InvalidCulture(java.lang.String)[pri:0, instance:net.assuresign.scenario_6.Scenario_6@7d4f9aae] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- net.assuresign.scenario_6.Scenario_6 -->
      <class name="net.assuresign.scenario_13.Scenario_13">
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_13.Scenario_13@2d52216b]" started-at="2021-04-20T13:53:37 IST" name="reportUp" finished-at="2021-04-20T13:53:37 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_13.submitPrepare_documents(java.lang.String)[pri:0, instance:net.assuresign.scenario_13.Scenario_13@2d52216b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="submitPrepare_documents(java.lang.String)[pri:0, instance:net.assuresign.scenario_13.Scenario_13@2d52216b]" started-at="2021-04-20T13:53:37 IST" name="submitPrepare_documents" data-provider="version-data-provider" finished-at="2021-04-20T13:53:49 IST" duration-ms="11528" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitPrepare_documents -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_13.Scenario_13@2d52216b]" started-at="2021-04-20T13:53:49 IST" name="tearDown" finished-at="2021-04-20T13:53:49 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=submitPrepare_documents status=SUCCESS method=Scenario_13.submitPrepare_documents(java.lang.String)[pri:0, instance:net.assuresign.scenario_13.Scenario_13@2d52216b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_13.Scenario_13@2d52216b]" started-at="2021-04-20T13:53:49 IST" name="reportUp" finished-at="2021-04-20T13:53:49 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_13.submitPrepare_documentsEmptyID(java.lang.String)[pri:0, instance:net.assuresign.scenario_13.Scenario_13@2d52216b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="submitPrepare_documentsEmptyID(java.lang.String)[pri:0, instance:net.assuresign.scenario_13.Scenario_13@2d52216b]" started-at="2021-04-20T13:53:49 IST" name="submitPrepare_documentsEmptyID" data-provider="version-data-provider" finished-at="2021-04-20T13:53:54 IST" duration-ms="5407" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitPrepare_documentsEmptyID -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_13.Scenario_13@2d52216b]" started-at="2021-04-20T13:53:54 IST" name="tearDown" finished-at="2021-04-20T13:53:54 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=submitPrepare_documentsEmptyID status=SUCCESS method=Scenario_13.submitPrepare_documentsEmptyID(java.lang.String)[pri:0, instance:net.assuresign.scenario_13.Scenario_13@2d52216b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_13.Scenario_13@2d52216b]" started-at="2021-04-20T13:53:54 IST" name="reportUp" finished-at="2021-04-20T13:53:54 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_13.submitPrepare_documentsInvalidID(java.lang.String)[pri:0, instance:net.assuresign.scenario_13.Scenario_13@2d52216b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="submitPrepare_documentsInvalidID(java.lang.String)[pri:0, instance:net.assuresign.scenario_13.Scenario_13@2d52216b]" started-at="2021-04-20T13:53:54 IST" name="submitPrepare_documentsInvalidID" data-provider="version-data-provider" finished-at="2021-04-20T13:54:00 IST" duration-ms="5503" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitPrepare_documentsInvalidID -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_13.Scenario_13@2d52216b]" started-at="2021-04-20T13:54:00 IST" name="tearDown" finished-at="2021-04-20T13:54:00 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=submitPrepare_documentsInvalidID status=SUCCESS method=Scenario_13.submitPrepare_documentsInvalidID(java.lang.String)[pri:0, instance:net.assuresign.scenario_13.Scenario_13@2d52216b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="submitPrepare_documentsPwdToEditFile(java.lang.String)[pri:0, instance:net.assuresign.scenario_13.Scenario_13@2d52216b]" started-at="2021-04-20T13:54:00 IST" name="submitPrepare_documentsPwdToEditFile" data-provider="version-data-provider" finished-at="2021-04-20T13:54:09 IST" duration-ms="9526" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitPrepare_documentsPwdToEditFile -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_13.Scenario_13@2d52216b]" started-at="2021-04-20T13:54:00 IST" name="reportUp" finished-at="2021-04-20T13:54:00 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_13.submitPrepare_documentsPwdToEditFile(java.lang.String)[pri:0, instance:net.assuresign.scenario_13.Scenario_13@2d52216b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_13.Scenario_13@2d52216b]" started-at="2021-04-20T13:54:09 IST" name="tearDown" finished-at="2021-04-20T13:54:09 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=submitPrepare_documentsPwdToEditFile status=SUCCESS method=Scenario_13.submitPrepare_documentsPwdToEditFile(java.lang.String)[pri:0, instance:net.assuresign.scenario_13.Scenario_13@2d52216b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_13.Scenario_13@2d52216b]" started-at="2021-04-20T13:54:09 IST" name="reportUp" finished-at="2021-04-20T13:54:09 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_13.submitPrepare_documentsPwdToOpenFile(java.lang.String)[pri:0, instance:net.assuresign.scenario_13.Scenario_13@2d52216b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="submitPrepare_documentsPwdToOpenFile(java.lang.String)[pri:0, instance:net.assuresign.scenario_13.Scenario_13@2d52216b]" started-at="2021-04-20T13:54:09 IST" name="submitPrepare_documentsPwdToOpenFile" data-provider="version-data-provider" finished-at="2021-04-20T13:54:19 IST" duration-ms="9669" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitPrepare_documentsPwdToOpenFile -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_13.Scenario_13@2d52216b]" started-at="2021-04-20T13:54:19 IST" name="tearDown" finished-at="2021-04-20T13:54:19 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=submitPrepare_documentsPwdToOpenFile status=SUCCESS method=Scenario_13.submitPrepare_documentsPwdToOpenFile(java.lang.String)[pri:0, instance:net.assuresign.scenario_13.Scenario_13@2d52216b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="submitPrepare_putCall1(java.lang.String)[pri:0, instance:net.assuresign.scenario_13.Scenario_13@2d52216b]" started-at="2021-04-20T13:54:19 IST" name="submitPrepare_putCall1" data-provider="version-data-provider" finished-at="2021-04-20T13:54:31 IST" duration-ms="11464" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitPrepare_putCall1 -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_13.Scenario_13@2d52216b]" started-at="2021-04-20T13:54:19 IST" name="reportUp" finished-at="2021-04-20T13:54:19 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_13.submitPrepare_putCall1(java.lang.String)[pri:0, instance:net.assuresign.scenario_13.Scenario_13@2d52216b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_13.Scenario_13@2d52216b]" started-at="2021-04-20T13:54:31 IST" name="tearDown" finished-at="2021-04-20T13:54:31 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=submitPrepare_putCall1 status=SUCCESS method=Scenario_13.submitPrepare_putCall1(java.lang.String)[pri:0, instance:net.assuresign.scenario_13.Scenario_13@2d52216b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_13.Scenario_13@2d52216b]" started-at="2021-04-20T13:54:31 IST" name="reportUp" finished-at="2021-04-20T13:54:31 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_13.submitPrepare_withoutDocName(java.lang.String)[pri:0, instance:net.assuresign.scenario_13.Scenario_13@2d52216b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="submitPrepare_withoutDocName(java.lang.String)[pri:0, instance:net.assuresign.scenario_13.Scenario_13@2d52216b]" started-at="2021-04-20T13:54:31 IST" name="submitPrepare_withoutDocName" data-provider="version-data-provider" finished-at="2021-04-20T13:54:41 IST" duration-ms="10243" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitPrepare_withoutDocName -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_13.Scenario_13@2d52216b]" started-at="2021-04-20T13:54:41 IST" name="tearDown" finished-at="2021-04-20T13:54:41 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=submitPrepare_withoutDocName status=SUCCESS method=Scenario_13.submitPrepare_withoutDocName(java.lang.String)[pri:0, instance:net.assuresign.scenario_13.Scenario_13@2d52216b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_13.Scenario_13@2d52216b]" started-at="2021-04-20T13:54:41 IST" name="reportUp" finished-at="2021-04-20T13:54:41 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_13.submitValidate_Adhoc(java.lang.String)[pri:0, instance:net.assuresign.scenario_13.Scenario_13@2d52216b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="submitValidate_Adhoc(java.lang.String)[pri:0, instance:net.assuresign.scenario_13.Scenario_13@2d52216b]" started-at="2021-04-20T13:54:41 IST" name="submitValidate_Adhoc" data-provider="version-data-provider" finished-at="2021-04-20T13:56:52 IST" duration-ms="130865" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitValidate_Adhoc -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_13.Scenario_13@2d52216b]" started-at="2021-04-20T13:56:52 IST" name="tearDown" finished-at="2021-04-20T13:56:52 IST" duration-ms="29" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=submitValidate_Adhoc status=SUCCESS method=Scenario_13.submitValidate_Adhoc(java.lang.String)[pri:0, instance:net.assuresign.scenario_13.Scenario_13@2d52216b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_13.Scenario_13@2d52216b]" started-at="2021-04-20T13:56:52 IST" name="reportUp" finished-at="2021-04-20T13:56:52 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_13.submitValidate_adhoc400(java.lang.String)[pri:0, instance:net.assuresign.scenario_13.Scenario_13@2d52216b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="submitValidate_adhoc400(java.lang.String)[pri:0, instance:net.assuresign.scenario_13.Scenario_13@2d52216b]" started-at="2021-04-20T13:56:52 IST" name="submitValidate_adhoc400" data-provider="version-data-provider" finished-at="2021-04-20T13:57:03 IST" duration-ms="10869" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitValidate_adhoc400 -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_13.Scenario_13@2d52216b]" started-at="2021-04-20T13:57:03 IST" name="tearDown" finished-at="2021-04-20T13:57:03 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=submitValidate_adhoc400 status=SUCCESS method=Scenario_13.submitValidate_adhoc400(java.lang.String)[pri:0, instance:net.assuresign.scenario_13.Scenario_13@2d52216b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_13.Scenario_13@2d52216b]" started-at="2021-04-20T13:57:03 IST" name="reportUp" finished-at="2021-04-20T13:57:03 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_13.submitValidate_hybridCall(java.lang.String)[pri:0, instance:net.assuresign.scenario_13.Scenario_13@2d52216b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="submitValidate_hybridCall(java.lang.String)[pri:0, instance:net.assuresign.scenario_13.Scenario_13@2d52216b]" started-at="2021-04-20T13:57:03 IST" name="submitValidate_hybridCall" data-provider="version-data-provider" finished-at="2021-04-20T13:57:10 IST" duration-ms="7417" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitValidate_hybridCall -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_13.Scenario_13@2d52216b]" started-at="2021-04-20T13:57:10 IST" name="tearDown" finished-at="2021-04-20T13:57:10 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=submitValidate_hybridCall status=SUCCESS method=Scenario_13.submitValidate_hybridCall(java.lang.String)[pri:0, instance:net.assuresign.scenario_13.Scenario_13@2d52216b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_13.Scenario_13@2d52216b]" started-at="2021-04-20T13:57:10 IST" name="reportUp" finished-at="2021-04-20T13:57:10 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_13.submitValidate_ssTemplate(java.lang.String)[pri:0, instance:net.assuresign.scenario_13.Scenario_13@2d52216b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="submitValidate_ssTemplate(java.lang.String)[pri:0, instance:net.assuresign.scenario_13.Scenario_13@2d52216b]" started-at="2021-04-20T13:57:10 IST" name="submitValidate_ssTemplate" data-provider="version-data-provider" finished-at="2021-04-20T13:57:17 IST" duration-ms="6982" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitValidate_ssTemplate -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_13.Scenario_13@2d52216b]" started-at="2021-04-20T13:57:17 IST" name="tearDown" finished-at="2021-04-20T13:57:17 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=submitValidate_ssTemplate status=SUCCESS method=Scenario_13.submitValidate_ssTemplate(java.lang.String)[pri:0, instance:net.assuresign.scenario_13.Scenario_13@2d52216b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- net.assuresign.scenario_13.Scenario_13 -->
      <class name="net.assuresign.scenario_8.Scenario_8">
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@54e1c68b]" started-at="2021-04-20T13:46:19 IST" name="reportUp" finished-at="2021-04-20T13:46:19 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_8.getEnvelope_EmptyEnvelopID(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@54e1c68b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="getEnvelope_EmptyEnvelopID(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@54e1c68b]" started-at="2021-04-20T13:46:19 IST" name="getEnvelope_EmptyEnvelopID" data-provider="version-data-provider" finished-at="2021-04-20T13:46:23 IST" duration-ms="4511" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getEnvelope_EmptyEnvelopID -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@54e1c68b]" started-at="2021-04-20T13:46:23 IST" name="tearDown" finished-at="2021-04-20T13:46:23 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getEnvelope_EmptyEnvelopID status=SUCCESS method=Scenario_8.getEnvelope_EmptyEnvelopID(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@54e1c68b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@54e1c68b]" started-at="2021-04-20T13:46:23 IST" name="reportUp" finished-at="2021-04-20T13:46:23 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_8.getEnvelope_ForEmptyEnvelopes(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@54e1c68b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="getEnvelope_ForEmptyEnvelopes(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@54e1c68b]" started-at="2021-04-20T13:46:23 IST" name="getEnvelope_ForEmptyEnvelopes" data-provider="version-data-provider" finished-at="2021-04-20T13:46:29 IST" duration-ms="5705" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code (<400> or <404>) but was <200>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code (<400> or <404>) but was <200>.

at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:72)
at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:59)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:493)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:674)
at jdk.internal.reflect.GeneratedMethodAccessor134.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:193)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:61)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:126)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:84)
at io.restassured.internal.ValidatableResponseImpl.super$2$statusCode(ValidatableResponseImpl.groovy)
at jdk.internal.reflect.GeneratedMethodAccessor160.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1268)
at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)
at io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy:136)
at io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy)
at net.assuresign.scenario_8.Scenario_8.getEnvelope_ForEmptyEnvelopes(Scenario_8.java:171)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getEnvelope_ForEmptyEnvelopes -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@54e1c68b]" started-at="2021-04-20T13:46:29 IST" name="tearDown" finished-at="2021-04-20T13:46:29 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getEnvelope_ForEmptyEnvelopes status=FAILURE method=Scenario_8.getEnvelope_ForEmptyEnvelopes(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@54e1c68b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@54e1c68b]" started-at="2021-04-20T13:46:29 IST" name="reportUp" finished-at="2021-04-20T13:46:29 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_8.getEnvelope_ForInvalidEnvelopes(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@54e1c68b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="getEnvelope_ForInvalidEnvelopes(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@54e1c68b]" started-at="2021-04-20T13:46:29 IST" name="getEnvelope_ForInvalidEnvelopes" data-provider="version-data-provider" finished-at="2021-04-20T13:46:34 IST" duration-ms="5092" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getEnvelope_ForInvalidEnvelopes -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@54e1c68b]" started-at="2021-04-20T13:46:34 IST" name="tearDown" finished-at="2021-04-20T13:46:34 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getEnvelope_ForInvalidEnvelopes status=SUCCESS method=Scenario_8.getEnvelope_ForInvalidEnvelopes(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@54e1c68b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@54e1c68b]" started-at="2021-04-20T13:46:34 IST" name="reportUp" finished-at="2021-04-20T13:46:34 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_8.getEnvelope_InvalidDocType(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@54e1c68b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="getEnvelope_InvalidDocType(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@54e1c68b]" started-at="2021-04-20T13:46:34 IST" name="getEnvelope_InvalidDocType" data-provider="version-data-provider" finished-at="2021-04-20T13:46:39 IST" duration-ms="5118" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code (<400> or <401>) but was <200>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code (<400> or <401>) but was <200>.

at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:72)
at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:59)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:493)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:674)
at jdk.internal.reflect.GeneratedMethodAccessor134.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:193)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:61)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:126)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:84)
at io.restassured.internal.ValidatableResponseImpl.super$2$statusCode(ValidatableResponseImpl.groovy)
at jdk.internal.reflect.GeneratedMethodAccessor160.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1268)
at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)
at io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy:136)
at io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy)
at net.assuresign.scenario_8.Scenario_8.getEnvelope_InvalidDocType(Scenario_8.java:226)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getEnvelope_InvalidDocType -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@54e1c68b]" started-at="2021-04-20T13:46:39 IST" name="tearDown" finished-at="2021-04-20T13:46:39 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getEnvelope_InvalidDocType status=FAILURE method=Scenario_8.getEnvelope_InvalidDocType(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@54e1c68b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@54e1c68b]" started-at="2021-04-20T13:46:39 IST" name="reportUp" finished-at="2021-04-20T13:46:39 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_8.getEnvelope_InvalidEnvelopID(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@54e1c68b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="getEnvelope_InvalidEnvelopID(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@54e1c68b]" started-at="2021-04-20T13:46:39 IST" name="getEnvelope_InvalidEnvelopID" data-provider="version-data-provider" finished-at="2021-04-20T13:46:44 IST" duration-ms="5147" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getEnvelope_InvalidEnvelopID -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@54e1c68b]" started-at="2021-04-20T13:46:44 IST" name="tearDown" finished-at="2021-04-20T13:46:44 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getEnvelope_InvalidEnvelopID status=SUCCESS method=Scenario_8.getEnvelope_InvalidEnvelopID(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@54e1c68b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@54e1c68b]" started-at="2021-04-20T13:46:44 IST" name="reportUp" finished-at="2021-04-20T13:46:44 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_8.getEnvelope_WithoutDocType(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@54e1c68b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="getEnvelope_WithoutDocType(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@54e1c68b]" started-at="2021-04-20T13:46:44 IST" name="getEnvelope_WithoutDocType" data-provider="version-data-provider" finished-at="2021-04-20T13:46:49 IST" duration-ms="4582" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getEnvelope_WithoutDocType -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@54e1c68b]" started-at="2021-04-20T13:46:49 IST" name="tearDown" finished-at="2021-04-20T13:46:49 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getEnvelope_WithoutDocType status=SUCCESS method=Scenario_8.getEnvelope_WithoutDocType(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@54e1c68b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@54e1c68b]" started-at="2021-04-20T13:46:49 IST" name="reportUp" finished-at="2021-04-20T13:46:49 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_8.getEnvelope_WrongDocType(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@54e1c68b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="getEnvelope_WrongDocType(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@54e1c68b]" started-at="2021-04-20T13:46:49 IST" name="getEnvelope_WrongDocType" data-provider="version-data-provider" finished-at="2021-04-20T13:46:54 IST" duration-ms="5324" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code (<400> or <401>) but was <200>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code (<400> or <401>) but was <200>.

at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:72)
at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:59)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:493)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:674)
at jdk.internal.reflect.GeneratedMethodAccessor134.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:193)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:61)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:126)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:84)
at io.restassured.internal.ValidatableResponseImpl.super$2$statusCode(ValidatableResponseImpl.groovy)
at jdk.internal.reflect.GeneratedMethodAccessor160.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1268)
at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)
at io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy:136)
at io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy)
at net.assuresign.scenario_8.Scenario_8.getEnvelope_WrongDocType(Scenario_8.java:189)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getEnvelope_WrongDocType -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@54e1c68b]" started-at="2021-04-20T13:46:54 IST" name="tearDown" finished-at="2021-04-20T13:46:54 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getEnvelope_WrongDocType status=FAILURE method=Scenario_8.getEnvelope_WrongDocType(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@54e1c68b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@54e1c68b]" started-at="2021-04-20T13:46:54 IST" name="reportUp" finished-at="2021-04-20T13:46:54 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_8.getEnvelopesAnyFilter(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@54e1c68b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="getEnvelopesAnyFilter(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@54e1c68b]" started-at="2021-04-20T13:46:54 IST" name="getEnvelopesAnyFilter" data-provider="version-data-provider" finished-at="2021-04-20T13:47:02 IST" duration-ms="7727" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getEnvelopesAnyFilter -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@54e1c68b]" started-at="2021-04-20T13:47:02 IST" name="tearDown" finished-at="2021-04-20T13:47:02 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getEnvelopesAnyFilter status=SUCCESS method=Scenario_8.getEnvelopesAnyFilter(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@54e1c68b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@54e1c68b]" started-at="2021-04-20T13:47:02 IST" name="reportUp" finished-at="2021-04-20T13:47:02 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_8.getEnvelopes_ClosedWithFromDateLaterTodate(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@54e1c68b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="getEnvelopes_ClosedWithFromDateLaterTodate(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@54e1c68b]" started-at="2021-04-20T13:47:02 IST" name="getEnvelopes_ClosedWithFromDateLaterTodate" data-provider="version-data-provider" finished-at="2021-04-20T13:47:07 IST" duration-ms="5423" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getEnvelopes_ClosedWithFromDateLaterTodate -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@54e1c68b]" started-at="2021-04-20T13:47:07 IST" name="tearDown" finished-at="2021-04-20T13:47:07 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getEnvelopes_ClosedWithFromDateLaterTodate status=SUCCESS method=Scenario_8.getEnvelopes_ClosedWithFromDateLaterTodate(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@54e1c68b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="getEnvelopes_ClosedWithInvalidFormData(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@54e1c68b]" started-at="2021-04-20T13:47:07 IST" name="getEnvelopes_ClosedWithInvalidFormData" data-provider="version-data-provider" finished-at="2021-04-20T13:47:12 IST" duration-ms="4766" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getEnvelopes_ClosedWithInvalidFormData -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@54e1c68b]" started-at="2021-04-20T13:47:07 IST" name="reportUp" finished-at="2021-04-20T13:47:07 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_8.getEnvelopes_ClosedWithInvalidFormData(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@54e1c68b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@54e1c68b]" started-at="2021-04-20T13:47:12 IST" name="tearDown" finished-at="2021-04-20T13:47:12 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getEnvelopes_ClosedWithInvalidFormData status=SUCCESS method=Scenario_8.getEnvelopes_ClosedWithInvalidFormData(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@54e1c68b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@54e1c68b]" started-at="2021-04-20T13:47:12 IST" name="reportUp" finished-at="2021-04-20T13:47:12 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_8.getEnvelopes_ClosedWithNoFormData(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@54e1c68b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="getEnvelopes_ClosedWithNoFormData(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@54e1c68b]" started-at="2021-04-20T13:47:12 IST" name="getEnvelopes_ClosedWithNoFormData" data-provider="version-data-provider" finished-at="2021-04-20T13:47:17 IST" duration-ms="4797" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getEnvelopes_ClosedWithNoFormData -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@54e1c68b]" started-at="2021-04-20T13:47:17 IST" name="tearDown" finished-at="2021-04-20T13:47:17 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getEnvelopes_ClosedWithNoFormData status=SUCCESS method=Scenario_8.getEnvelopes_ClosedWithNoFormData(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@54e1c68b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@54e1c68b]" started-at="2021-04-20T13:47:17 IST" name="reportUp" finished-at="2021-04-20T13:47:17 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_8.getEnvelopes_EmptyEnvelopID(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@54e1c68b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="getEnvelopes_EmptyEnvelopID(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@54e1c68b]" started-at="2021-04-20T13:47:17 IST" name="getEnvelopes_EmptyEnvelopID" data-provider="version-data-provider" finished-at="2021-04-20T13:47:23 IST" duration-ms="6414" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code (<400> or <404>) but was <200>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code (<400> or <404>) but was <200>.

at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:72)
at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:59)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:493)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:674)
at jdk.internal.reflect.GeneratedMethodAccessor134.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:193)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:61)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:126)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:84)
at io.restassured.internal.ValidatableResponseImpl.super$2$statusCode(ValidatableResponseImpl.groovy)
at jdk.internal.reflect.GeneratedMethodAccessor160.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1268)
at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)
at io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy:136)
at io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy)
at net.assuresign.scenario_8.Scenario_8.getEnvelopes_EmptyEnvelopID(Scenario_8.java:135)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getEnvelopes_EmptyEnvelopID -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@54e1c68b]" started-at="2021-04-20T13:47:23 IST" name="tearDown" finished-at="2021-04-20T13:47:23 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getEnvelopes_EmptyEnvelopID status=FAILURE method=Scenario_8.getEnvelopes_EmptyEnvelopID(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@54e1c68b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="getEnvelopes_InvalidEnvelopID(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@54e1c68b]" started-at="2021-04-20T13:47:23 IST" name="getEnvelopes_InvalidEnvelopID" data-provider="version-data-provider" finished-at="2021-04-20T13:47:28 IST" duration-ms="4773" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getEnvelopes_InvalidEnvelopID -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@54e1c68b]" started-at="2021-04-20T13:47:23 IST" name="reportUp" finished-at="2021-04-20T13:47:23 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_8.getEnvelopes_InvalidEnvelopID(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@54e1c68b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@54e1c68b]" started-at="2021-04-20T13:47:28 IST" name="tearDown" finished-at="2021-04-20T13:47:28 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getEnvelopes_InvalidEnvelopID status=SUCCESS method=Scenario_8.getEnvelopes_InvalidEnvelopID(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@54e1c68b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- net.assuresign.scenario_8.Scenario_8 -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
