<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="2" total="136" passed="122" failed="12" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-04-15T10:19:18 IST" name="Suite" finished-at="2021-04-15T10:50:57 IST" duration-ms="1899065">
    <groups>
    </groups>
    <test started-at="2021-04-15T10:19:18 IST" name="Test" finished-at="2021-04-15T10:50:57 IST" duration-ms="1899065">
      <class name="net.assuresign.scenario_4.Scenario_4_3">
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_3@6892b3b6]" started-at="2021-04-15T10:27:05 IST" name="reportUp" finished-at="2021-04-15T10:27:05 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_4_3.submitPrepare_WithDifferentFileType(java.lang.String)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_3@6892b3b6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="submitPrepare_WithDifferentFileType(java.lang.String)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_3@6892b3b6]" started-at="2021-04-15T10:27:05 IST" name="submitPrepare_WithDifferentFileType" data-provider="version-data-provider" finished-at="2021-04-15T10:27:30 IST" duration-ms="24627" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitPrepare_WithDifferentFileType -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_3@6892b3b6]" started-at="2021-04-15T10:27:30 IST" name="tearDown" finished-at="2021-04-15T10:27:30 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=submitPrepare_WithDifferentFileType status=SUCCESS method=Scenario_4_3.submitPrepare_WithDifferentFileType(java.lang.String)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_3@6892b3b6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_3@6892b3b6]" started-at="2021-04-15T10:27:30 IST" name="reportUp" finished-at="2021-04-15T10:27:30 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_4_3.submit_WithDifferentFileType(java.lang.String)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_3@6892b3b6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="submit_WithDifferentFileType(java.lang.String)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_3@6892b3b6]" started-at="2021-04-15T10:27:30 IST" name="submit_WithDifferentFileType" data-provider="version-data-provider" finished-at="2021-04-15T10:28:09 IST" duration-ms="38723" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submit_WithDifferentFileType -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_3@6892b3b6]" started-at="2021-04-15T10:28:09 IST" name="tearDown" finished-at="2021-04-15T10:28:09 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=submit_WithDifferentFileType status=SUCCESS method=Scenario_4_3.submit_WithDifferentFileType(java.lang.String)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_3@6892b3b6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- net.assuresign.scenario_4.Scenario_4_3 -->
      <class name="net.assuresign.scenario_3.Scenario_3_4">
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_3.Scenario_3_4@740cae06]" started-at="2021-04-15T10:21:24 IST" name="reportUp" finished-at="2021-04-15T10:21:24 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_3_4.submit_DifferentFileType(java.lang.String)[pri:0, instance:net.assuresign.scenario_3.Scenario_3_4@740cae06] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="submit_DifferentFileType(java.lang.String)[pri:0, instance:net.assuresign.scenario_3.Scenario_3_4@740cae06]" started-at="2021-04-15T10:21:24 IST" name="submit_DifferentFileType" data-provider="version-data-provider" finished-at="2021-04-15T10:22:05 IST" duration-ms="41608" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submit_DifferentFileType -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_3.Scenario_3_4@740cae06]" started-at="2021-04-15T10:22:05 IST" name="tearDown" finished-at="2021-04-15T10:22:05 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=submit_DifferentFileType status=SUCCESS method=Scenario_3_4.submit_DifferentFileType(java.lang.String)[pri:0, instance:net.assuresign.scenario_3.Scenario_3_4@740cae06] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="submit_HybridCallDifferentFileType(java.lang.String)[pri:0, instance:net.assuresign.scenario_3.Scenario_3_4@740cae06]" started-at="2021-04-15T10:22:05 IST" name="submit_HybridCallDifferentFileType" data-provider="version-data-provider" finished-at="2021-04-15T10:22:41 IST" duration-ms="35175" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submit_HybridCallDifferentFileType -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_3.Scenario_3_4@740cae06]" started-at="2021-04-15T10:22:05 IST" name="reportUp" finished-at="2021-04-15T10:22:05 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_3_4.submit_HybridCallDifferentFileType(java.lang.String)[pri:0, instance:net.assuresign.scenario_3.Scenario_3_4@740cae06] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_3.Scenario_3_4@740cae06]" started-at="2021-04-15T10:22:41 IST" name="tearDown" finished-at="2021-04-15T10:22:41 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=submit_HybridCallDifferentFileType status=SUCCESS method=Scenario_3_4.submit_HybridCallDifferentFileType(java.lang.String)[pri:0, instance:net.assuresign.scenario_3.Scenario_3_4@740cae06] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_3.Scenario_3_4@740cae06]" started-at="2021-04-15T10:22:41 IST" name="reportUp" finished-at="2021-04-15T10:22:41 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_3_4.submit_HybridCallDifferentFileTypeIncorrect(java.lang.String)[pri:0, instance:net.assuresign.scenario_3.Scenario_3_4@740cae06] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="submit_HybridCallDifferentFileTypeIncorrect(java.lang.String)[pri:0, instance:net.assuresign.scenario_3.Scenario_3_4@740cae06]" started-at="2021-04-15T10:22:41 IST" name="submit_HybridCallDifferentFileTypeIncorrect" data-provider="version-data-provider" finished-at="2021-04-15T10:22:48 IST" duration-ms="7218" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submit_HybridCallDifferentFileTypeIncorrect -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_3.Scenario_3_4@740cae06]" started-at="2021-04-15T10:22:48 IST" name="tearDown" finished-at="2021-04-15T10:22:48 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=submit_HybridCallDifferentFileTypeIncorrect status=SUCCESS method=Scenario_3_4.submit_HybridCallDifferentFileTypeIncorrect(java.lang.String)[pri:0, instance:net.assuresign.scenario_3.Scenario_3_4@740cae06] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- net.assuresign.scenario_3.Scenario_3_4 -->
      <class name="net.assuresign.scenario_4.Scenario_4_2">
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_2@11392934]" started-at="2021-04-15T10:26:56 IST" name="reportUp" finished-at="2021-04-15T10:26:56 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_4_2.submitPrepare_WithDelayedStep(java.lang.String)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_2@11392934] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="submitPrepare_WithDelayedStep(java.lang.String)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_2@11392934]" started-at="2021-04-15T10:26:56 IST" name="submitPrepare_WithDelayedStep" data-provider="version-data-provider" finished-at="2021-04-15T10:27:05 IST" duration-ms="9706" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitPrepare_WithDelayedStep -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_2@11392934]" started-at="2021-04-15T10:27:05 IST" name="tearDown" finished-at="2021-04-15T10:27:05 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=submitPrepare_WithDelayedStep status=SUCCESS method=Scenario_4_2.submitPrepare_WithDelayedStep(java.lang.String)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_2@11392934] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- net.assuresign.scenario_4.Scenario_4_2 -->
      <class name="net.assuresign.scenario_3.Scenario_3_3">
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_3.Scenario_3_3@2a7f1f10]" started-at="2021-04-15T10:20:08 IST" name="reportUp" finished-at="2021-04-15T10:20:08 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_3_3.submit_LargeFile(java.lang.String)[pri:0, instance:net.assuresign.scenario_3.Scenario_3_3@2a7f1f10] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="submit_LargeFile(java.lang.String)[pri:0, instance:net.assuresign.scenario_3.Scenario_3_3@2a7f1f10]" started-at="2021-04-15T10:20:08 IST" name="submit_LargeFile" data-provider="version-data-provider" finished-at="2021-04-15T10:21:04 IST" duration-ms="56691" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submit_LargeFile -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_3.Scenario_3_3@2a7f1f10]" started-at="2021-04-15T10:21:04 IST" name="tearDown" finished-at="2021-04-15T10:21:04 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=submit_LargeFile status=SUCCESS method=Scenario_3_3.submit_LargeFile(java.lang.String)[pri:0, instance:net.assuresign.scenario_3.Scenario_3_3@2a7f1f10] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_3.Scenario_3_3@2a7f1f10]" started-at="2021-04-15T10:21:04 IST" name="reportUp" finished-at="2021-04-15T10:21:04 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_3_3.submit_SSTemplateLargeFile(java.lang.String)[pri:0, instance:net.assuresign.scenario_3.Scenario_3_3@2a7f1f10] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="submit_SSTemplateLargeFile(java.lang.String)[pri:0, instance:net.assuresign.scenario_3.Scenario_3_3@2a7f1f10]" started-at="2021-04-15T10:21:04 IST" name="submit_SSTemplateLargeFile" data-provider="version-data-provider" finished-at="2021-04-15T10:21:24 IST" duration-ms="19450" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submit_SSTemplateLargeFile -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_3.Scenario_3_3@2a7f1f10]" started-at="2021-04-15T10:21:24 IST" name="tearDown" finished-at="2021-04-15T10:21:24 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=submit_SSTemplateLargeFile status=SUCCESS method=Scenario_3_3.submit_SSTemplateLargeFile(java.lang.String)[pri:0, instance:net.assuresign.scenario_3.Scenario_3_3@2a7f1f10] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- net.assuresign.scenario_3.Scenario_3_3 -->
      <class name="net.assuresign.scenario_7.Scenario_7">
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_7.Scenario_7@8f2ef19]" started-at="2021-04-15T10:39:29 IST" name="reportUp" finished-at="2021-04-15T10:39:29 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_7.listsAccounts_EmptyUsername(java.lang.String)[pri:0, instance:net.assuresign.scenario_7.Scenario_7@8f2ef19] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="listsAccounts_EmptyUsername(java.lang.String)[pri:0, instance:net.assuresign.scenario_7.Scenario_7@8f2ef19]" started-at="2021-04-15T10:39:29 IST" name="listsAccounts_EmptyUsername" data-provider="version-data-provider" finished-at="2021-04-15T10:39:33 IST" duration-ms="4477" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code (<400> or <404>) but was <200>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code (<400> or <404>) but was <200>.

at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:72)
at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:59)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:493)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:674)
at jdk.internal.reflect.GeneratedMethodAccessor69.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:193)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:61)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:126)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:84)
at io.restassured.internal.ValidatableResponseImpl.super$2$statusCode(ValidatableResponseImpl.groovy)
at jdk.internal.reflect.GeneratedMethodAccessor166.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1268)
at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)
at io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy:136)
at io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy)
at net.assuresign.scenario_7.Scenario_7.listsAccounts_EmptyUsername(Scenario_7.java:75)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- listsAccounts_EmptyUsername -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_7.Scenario_7@8f2ef19]" started-at="2021-04-15T10:39:33 IST" name="tearDown" finished-at="2021-04-15T10:39:33 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=listsAccounts_EmptyUsername status=FAILURE method=Scenario_7.listsAccounts_EmptyUsername(java.lang.String)[pri:0, instance:net.assuresign.scenario_7.Scenario_7@8f2ef19] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="listsAccounts_InvalidUsername(java.lang.String)[pri:0, instance:net.assuresign.scenario_7.Scenario_7@8f2ef19]" started-at="2021-04-15T10:39:33 IST" name="listsAccounts_InvalidUsername" data-provider="version-data-provider" finished-at="2021-04-15T10:39:38 IST" duration-ms="4981" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- listsAccounts_InvalidUsername -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_7.Scenario_7@8f2ef19]" started-at="2021-04-15T10:39:33 IST" name="reportUp" finished-at="2021-04-15T10:39:33 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_7.listsAccounts_InvalidUsername(java.lang.String)[pri:0, instance:net.assuresign.scenario_7.Scenario_7@8f2ef19] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_7.Scenario_7@8f2ef19]" started-at="2021-04-15T10:39:38 IST" name="tearDown" finished-at="2021-04-15T10:39:38 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=listsAccounts_InvalidUsername status=SUCCESS method=Scenario_7.listsAccounts_InvalidUsername(java.lang.String)[pri:0, instance:net.assuresign.scenario_7.Scenario_7@8f2ef19] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_7.Scenario_7@8f2ef19]" started-at="2021-04-15T10:39:38 IST" name="reportUp" finished-at="2021-04-15T10:39:38 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_7.listsAccounts_ValidUsername(java.lang.String)[pri:0, instance:net.assuresign.scenario_7.Scenario_7@8f2ef19] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="listsAccounts_ValidUsername(java.lang.String)[pri:0, instance:net.assuresign.scenario_7.Scenario_7@8f2ef19]" started-at="2021-04-15T10:39:38 IST" name="listsAccounts_ValidUsername" data-provider="version-data-provider" finished-at="2021-04-15T10:39:43 IST" duration-ms="4318" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- listsAccounts_ValidUsername -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_7.Scenario_7@8f2ef19]" started-at="2021-04-15T10:39:43 IST" name="tearDown" finished-at="2021-04-15T10:39:43 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=listsAccounts_ValidUsername status=SUCCESS method=Scenario_7.listsAccounts_ValidUsername(java.lang.String)[pri:0, instance:net.assuresign.scenario_7.Scenario_7@8f2ef19] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- net.assuresign.scenario_7.Scenario_7 -->
      <class name="net.assuresign.scenario_4.Scenario_4_5">
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_5@76a4ebf2]" started-at="2021-04-15T10:28:58 IST" name="reportUp" finished-at="2021-04-15T10:28:58 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_4_5.submitPrepare_WithMissingDocumentName(java.lang.String)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_5@76a4ebf2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="submitPrepare_WithMissingDocumentName(java.lang.String)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_5@76a4ebf2]" started-at="2021-04-15T10:28:58 IST" name="submitPrepare_WithMissingDocumentName" data-provider="version-data-provider" finished-at="2021-04-15T10:29:13 IST" duration-ms="15459" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitPrepare_WithMissingDocumentName -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_5@76a4ebf2]" started-at="2021-04-15T10:29:13 IST" name="tearDown" finished-at="2021-04-15T10:29:13 IST" duration-ms="5" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=submitPrepare_WithMissingDocumentName status=SUCCESS method=Scenario_4_5.submitPrepare_WithMissingDocumentName(java.lang.String)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_5@76a4ebf2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_5@76a4ebf2]" started-at="2021-04-15T10:29:13 IST" name="reportUp" finished-at="2021-04-15T10:29:13 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_4_5.submit_WithMissingDocumentName(java.lang.String)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_5@76a4ebf2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="submit_WithMissingDocumentName(java.lang.String)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_5@76a4ebf2]" started-at="2021-04-15T10:29:13 IST" name="submit_WithMissingDocumentName" data-provider="version-data-provider" finished-at="2021-04-15T10:29:28 IST" duration-ms="14730" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submit_WithMissingDocumentName -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_5@76a4ebf2]" started-at="2021-04-15T10:29:28 IST" name="tearDown" finished-at="2021-04-15T10:29:28 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=submit_WithMissingDocumentName status=SUCCESS method=Scenario_4_5.submit_WithMissingDocumentName(java.lang.String)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_5@76a4ebf2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- net.assuresign.scenario_4.Scenario_4_5 -->
      <class name="net.assuresign.scenario_10.Scenario_10">
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@74ea2410]" started-at="2021-04-15T10:45:00 IST" name="reportUp" finished-at="2021-04-15T10:45:00 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_10.apiUser_invalidEnvironment(java.lang.String)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@74ea2410] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="apiUser_invalidEnvironment(java.lang.String)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@74ea2410]" started-at="2021-04-15T10:45:00 IST" name="apiUser_invalidEnvironment" data-provider="version-data-provider" finished-at="2021-04-15T10:45:06 IST" duration-ms="5804" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- apiUser_invalidEnvironment -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@74ea2410]" started-at="2021-04-15T10:45:06 IST" name="tearDown" finished-at="2021-04-15T10:45:06 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=apiUser_invalidEnvironment status=SUCCESS method=Scenario_10.apiUser_invalidEnvironment(java.lang.String)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@74ea2410] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@74ea2410]" started-at="2021-04-15T10:45:06 IST" name="reportUp" finished-at="2021-04-15T10:45:06 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_10.apiUser_invalidRequest(java.lang.String)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@74ea2410] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="apiUser_invalidRequest(java.lang.String)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@74ea2410]" started-at="2021-04-15T10:45:06 IST" name="apiUser_invalidRequest" data-provider="version-data-provider" finished-at="2021-04-15T10:45:11 IST" duration-ms="5095" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- apiUser_invalidRequest -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@74ea2410]" started-at="2021-04-15T10:45:11 IST" name="tearDown" finished-at="2021-04-15T10:45:11 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=apiUser_invalidRequest status=SUCCESS method=Scenario_10.apiUser_invalidRequest(java.lang.String)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@74ea2410] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="apiUser_invalidScope(java.lang.String)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@74ea2410]" started-at="2021-04-15T10:45:11 IST" name="apiUser_invalidScope" data-provider="version-data-provider" finished-at="2021-04-15T10:45:16 IST" duration-ms="4806" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- apiUser_invalidScope -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@74ea2410]" started-at="2021-04-15T10:45:11 IST" name="reportUp" finished-at="2021-04-15T10:45:11 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_10.apiUser_invalidScope(java.lang.String)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@74ea2410] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@74ea2410]" started-at="2021-04-15T10:45:16 IST" name="tearDown" finished-at="2021-04-15T10:45:16 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=apiUser_invalidScope status=SUCCESS method=Scenario_10.apiUser_invalidScope(java.lang.String)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@74ea2410] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@74ea2410]" started-at="2021-04-15T10:45:16 IST" name="reportUp" finished-at="2021-04-15T10:45:16 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_10.apiUser_noBaseUserName(java.lang.String)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@74ea2410] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="apiUser_noBaseUserName(java.lang.String)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@74ea2410]" started-at="2021-04-15T10:45:16 IST" name="apiUser_noBaseUserName" data-provider="version-data-provider" finished-at="2021-04-15T10:45:21 IST" duration-ms="5424" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- apiUser_noBaseUserName -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@74ea2410]" started-at="2021-04-15T10:45:21 IST" name="tearDown" finished-at="2021-04-15T10:45:21 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=apiUser_noBaseUserName status=SUCCESS method=Scenario_10.apiUser_noBaseUserName(java.lang.String)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@74ea2410] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@74ea2410]" started-at="2021-04-15T10:45:21 IST" name="reportUp" finished-at="2021-04-15T10:45:21 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_10.apiUser_noExpDate(java.lang.String)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@74ea2410] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="apiUser_noExpDate(java.lang.String)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@74ea2410]" started-at="2021-04-15T10:45:21 IST" name="apiUser_noExpDate" data-provider="version-data-provider" finished-at="2021-04-15T10:45:27 IST" duration-ms="5239" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- apiUser_noExpDate -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@74ea2410]" started-at="2021-04-15T10:45:27 IST" name="tearDown" finished-at="2021-04-15T10:45:27 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=apiUser_noExpDate status=SUCCESS method=Scenario_10.apiUser_noExpDate(java.lang.String)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@74ea2410] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="apiUser_noRequest(java.lang.String)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@74ea2410]" started-at="2021-04-15T10:45:27 IST" name="apiUser_noRequest" data-provider="version-data-provider" finished-at="2021-04-15T10:45:32 IST" duration-ms="5635" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- apiUser_noRequest -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@74ea2410]" started-at="2021-04-15T10:45:27 IST" name="reportUp" finished-at="2021-04-15T10:45:27 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_10.apiUser_noRequest(java.lang.String)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@74ea2410] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@74ea2410]" started-at="2021-04-15T10:45:32 IST" name="tearDown" finished-at="2021-04-15T10:45:32 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=apiUser_noRequest status=SUCCESS method=Scenario_10.apiUser_noRequest(java.lang.String)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@74ea2410] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@74ea2410]" started-at="2021-04-15T10:45:32 IST" name="reportUp" finished-at="2021-04-15T10:45:32 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_10.apiUser_noScope(java.lang.String)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@74ea2410] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="apiUser_noScope(java.lang.String)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@74ea2410]" started-at="2021-04-15T10:45:32 IST" name="apiUser_noScope" data-provider="version-data-provider" finished-at="2021-04-15T10:45:39 IST" duration-ms="6727" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- apiUser_noScope -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@74ea2410]" started-at="2021-04-15T10:45:39 IST" name="tearDown" finished-at="2021-04-15T10:45:39 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=apiUser_noScope status=SUCCESS method=Scenario_10.apiUser_noScope(java.lang.String)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@74ea2410] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="apiUser_noSpecificUser(java.lang.String)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@74ea2410]" started-at="2021-04-15T10:45:39 IST" name="apiUser_noSpecificUser" data-provider="version-data-provider" finished-at="2021-04-15T10:45:44 IST" duration-ms="5345" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- apiUser_noSpecificUser -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@74ea2410]" started-at="2021-04-15T10:45:39 IST" name="reportUp" finished-at="2021-04-15T10:45:39 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_10.apiUser_noSpecificUser(java.lang.String)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@74ea2410] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@74ea2410]" started-at="2021-04-15T10:45:44 IST" name="tearDown" finished-at="2021-04-15T10:45:44 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=apiUser_noSpecificUser status=SUCCESS method=Scenario_10.apiUser_noSpecificUser(java.lang.String)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@74ea2410] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@74ea2410]" started-at="2021-04-15T10:45:44 IST" name="reportUp" finished-at="2021-04-15T10:45:44 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_10.apiUser_noValueBaseUserName(java.lang.String)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@74ea2410] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="apiUser_noValueBaseUserName(java.lang.String)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@74ea2410]" started-at="2021-04-15T10:45:44 IST" name="apiUser_noValueBaseUserName" data-provider="version-data-provider" finished-at="2021-04-15T10:45:50 IST" duration-ms="5807" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- apiUser_noValueBaseUserName -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@74ea2410]" started-at="2021-04-15T10:45:50 IST" name="tearDown" finished-at="2021-04-15T10:45:50 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=apiUser_noValueBaseUserName status=SUCCESS method=Scenario_10.apiUser_noValueBaseUserName(java.lang.String)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@74ea2410] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@74ea2410]" started-at="2021-04-15T10:45:50 IST" name="reportUp" finished-at="2021-04-15T10:45:50 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_10.apiUser_organizationScopes(java.lang.String)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@74ea2410] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="apiUser_organizationScopes(java.lang.String)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@74ea2410]" started-at="2021-04-15T10:45:50 IST" name="apiUser_organizationScopes" data-provider="version-data-provider" finished-at="2021-04-15T10:45:55 IST" duration-ms="4479" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- apiUser_organizationScopes -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@74ea2410]" started-at="2021-04-15T10:45:55 IST" name="tearDown" finished-at="2021-04-15T10:45:55 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=apiUser_organizationScopes status=SUCCESS method=Scenario_10.apiUser_organizationScopes(java.lang.String)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@74ea2410] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@74ea2410]" started-at="2021-04-15T10:45:55 IST" name="reportUp" finished-at="2021-04-15T10:45:55 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_10.apiUser_validRequest(java.lang.String)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@74ea2410] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="apiUser_validRequest(java.lang.String)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@74ea2410]" started-at="2021-04-15T10:45:55 IST" name="apiUser_validRequest" data-provider="version-data-provider" finished-at="2021-04-15T10:46:00 IST" duration-ms="5178" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- apiUser_validRequest -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@74ea2410]" started-at="2021-04-15T10:46:00 IST" name="tearDown" finished-at="2021-04-15T10:46:00 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=apiUser_validRequest status=SUCCESS method=Scenario_10.apiUser_validRequest(java.lang.String)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@74ea2410] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@74ea2410]" started-at="2021-04-15T10:46:00 IST" name="reportUp" finished-at="2021-04-15T10:46:00 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_10.apiUser_validRequestSpecificEnv(java.lang.String)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@74ea2410] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="apiUser_validRequestSpecificEnv(java.lang.String)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@74ea2410]" started-at="2021-04-15T10:46:00 IST" name="apiUser_validRequestSpecificEnv" data-provider="version-data-provider" finished-at="2021-04-15T10:46:05 IST" duration-ms="5395" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- apiUser_validRequestSpecificEnv -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@74ea2410]" started-at="2021-04-15T10:46:05 IST" name="tearDown" finished-at="2021-04-15T10:46:05 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=apiUser_validRequestSpecificEnv status=SUCCESS method=Scenario_10.apiUser_validRequestSpecificEnv(java.lang.String)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@74ea2410] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@74ea2410]" started-at="2021-04-15T10:46:05 IST" name="reportUp" finished-at="2021-04-15T10:46:05 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_10.apiUser_withoutEnvironment(java.lang.String)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@74ea2410] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="apiUser_withoutEnvironment(java.lang.String)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@74ea2410]" started-at="2021-04-15T10:46:05 IST" name="apiUser_withoutEnvironment" data-provider="version-data-provider" finished-at="2021-04-15T10:46:12 IST" duration-ms="6744" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- apiUser_withoutEnvironment -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@74ea2410]" started-at="2021-04-15T10:46:12 IST" name="tearDown" finished-at="2021-04-15T10:46:12 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=apiUser_withoutEnvironment status=SUCCESS method=Scenario_10.apiUser_withoutEnvironment(java.lang.String)[pri:0, instance:net.assuresign.scenario_10.Scenario_10@74ea2410] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- net.assuresign.scenario_10.Scenario_10 -->
      <class name="net.assuresign.scenario_3.Scenario_3_2">
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_3.Scenario_3_2@298a5e20]" started-at="2021-04-15T10:19:47 IST" name="reportUp" finished-at="2021-04-15T10:19:47 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_3_2.submit_InvalidTemplateID(java.lang.String)[pri:0, instance:net.assuresign.scenario_3.Scenario_3_2@298a5e20] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="submit_InvalidTemplateID(java.lang.String)[pri:0, instance:net.assuresign.scenario_3.Scenario_3_2@298a5e20]" started-at="2021-04-15T10:19:47 IST" name="submit_InvalidTemplateID" data-provider="version-data-provider" finished-at="2021-04-15T10:19:54 IST" duration-ms="7036" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submit_InvalidTemplateID -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_3.Scenario_3_2@298a5e20]" started-at="2021-04-15T10:19:54 IST" name="tearDown" finished-at="2021-04-15T10:19:54 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=submit_InvalidTemplateID status=SUCCESS method=Scenario_3_2.submit_InvalidTemplateID(java.lang.String)[pri:0, instance:net.assuresign.scenario_3.Scenario_3_2@298a5e20] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="submit_ValidTemplateID(java.lang.String)[pri:0, instance:net.assuresign.scenario_3.Scenario_3_2@298a5e20]" started-at="2021-04-15T10:19:54 IST" name="submit_ValidTemplateID" data-provider="version-data-provider" finished-at="2021-04-15T10:20:08 IST" duration-ms="13461" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submit_ValidTemplateID -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_3.Scenario_3_2@298a5e20]" started-at="2021-04-15T10:19:54 IST" name="reportUp" finished-at="2021-04-15T10:19:54 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_3_2.submit_ValidTemplateID(java.lang.String)[pri:0, instance:net.assuresign.scenario_3.Scenario_3_2@298a5e20] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_3.Scenario_3_2@298a5e20]" started-at="2021-04-15T10:20:08 IST" name="tearDown" finished-at="2021-04-15T10:20:08 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=submit_ValidTemplateID status=SUCCESS method=Scenario_3_2.submit_ValidTemplateID(java.lang.String)[pri:0, instance:net.assuresign.scenario_3.Scenario_3_2@298a5e20] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- net.assuresign.scenario_3.Scenario_3_2 -->
      <class name="net.assuresign.scenario_4.Scenario_4_4">
        <test-method signature="submitPrepare_WithSignerPassword(java.lang.String)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_4@6e6f2380]" started-at="2021-04-15T10:28:09 IST" name="submitPrepare_WithSignerPassword" data-provider="version-data-provider" finished-at="2021-04-15T10:28:34 IST" duration-ms="25359" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitPrepare_WithSignerPassword -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_4@6e6f2380]" started-at="2021-04-15T10:28:09 IST" name="reportUp" finished-at="2021-04-15T10:28:09 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_4_4.submitPrepare_WithSignerPassword(java.lang.String)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_4@6e6f2380] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_4@6e6f2380]" started-at="2021-04-15T10:28:34 IST" name="tearDown" finished-at="2021-04-15T10:28:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=submitPrepare_WithSignerPassword status=SUCCESS method=Scenario_4_4.submitPrepare_WithSignerPassword(java.lang.String)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_4@6e6f2380] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_4@6e6f2380]" started-at="2021-04-15T10:28:34 IST" name="reportUp" finished-at="2021-04-15T10:28:34 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_4_4.submit_WithSignerPassword(java.lang.String)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_4@6e6f2380] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="submit_WithSignerPassword(java.lang.String)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_4@6e6f2380]" started-at="2021-04-15T10:28:34 IST" name="submit_WithSignerPassword" data-provider="version-data-provider" finished-at="2021-04-15T10:28:58 IST" duration-ms="23740" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submit_WithSignerPassword -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_4@6e6f2380]" started-at="2021-04-15T10:28:58 IST" name="tearDown" finished-at="2021-04-15T10:28:58 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=submit_WithSignerPassword status=SUCCESS method=Scenario_4_4.submit_WithSignerPassword(java.lang.String)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_4@6e6f2380] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- net.assuresign.scenario_4.Scenario_4_4 -->
      <class name="net.assuresign.scenario_12.Scenario_12">
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_12.Scenario_12@76b1e9b8]" started-at="2021-04-15T10:46:25 IST" name="reportUp" finished-at="2021-04-15T10:46:25 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_12.collectionRun_submit(java.lang.String)[pri:0, instance:net.assuresign.scenario_12.Scenario_12@76b1e9b8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="collectionRun_submit(java.lang.String)[pri:0, instance:net.assuresign.scenario_12.Scenario_12@76b1e9b8]" started-at="2021-04-15T10:46:25 IST" name="collectionRun_submit" data-provider="version-data-provider" finished-at="2021-04-15T10:47:00 IST" duration-ms="34742" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- collectionRun_submit -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_12.Scenario_12@76b1e9b8]" started-at="2021-04-15T10:47:00 IST" name="tearDown" finished-at="2021-04-15T10:47:00 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=collectionRun_submit status=SUCCESS method=Scenario_12.collectionRun_submit(java.lang.String)[pri:0, instance:net.assuresign.scenario_12.Scenario_12@76b1e9b8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- net.assuresign.scenario_12.Scenario_12 -->
      <class name="net.assuresign.scenario_4.Scenario_4_7">
        <test-method signature="submitPrepare_enUSSMS2FactorAuth(java.lang.String)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_7@53fe15ff]" started-at="2021-04-15T10:29:51 IST" name="submitPrepare_enUSSMS2FactorAuth" data-provider="version-data-provider" finished-at="2021-04-15T10:30:38 IST" duration-ms="46469" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitPrepare_enUSSMS2FactorAuth -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_7@53fe15ff]" started-at="2021-04-15T10:29:51 IST" name="reportUp" finished-at="2021-04-15T10:29:51 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_4_7.submitPrepare_enUSSMS2FactorAuth(java.lang.String)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_7@53fe15ff] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_7@53fe15ff]" started-at="2021-04-15T10:30:38 IST" name="tearDown" finished-at="2021-04-15T10:30:38 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=submitPrepare_enUSSMS2FactorAuth status=SUCCESS method=Scenario_4_7.submitPrepare_enUSSMS2FactorAuth(java.lang.String)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_7@53fe15ff] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- net.assuresign.scenario_4.Scenario_4_7 -->
      <class name="net.assuresign.scenario_3.Scenario_3_9">
        <test-method signature="submit_Doc128Char(java.lang.String)[pri:0, instance:net.assuresign.scenario_3.Scenario_3_9@f78a47e]" started-at="2021-04-15T10:23:03 IST" name="submit_Doc128Char" data-provider="version-data-provider" finished-at="2021-04-15T10:23:12 IST" duration-ms="9106" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submit_Doc128Char -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_3.Scenario_3_9@f78a47e]" started-at="2021-04-15T10:23:03 IST" name="reportUp" finished-at="2021-04-15T10:23:03 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_3_9.submit_Doc128Char(java.lang.String)[pri:0, instance:net.assuresign.scenario_3.Scenario_3_9@f78a47e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_3.Scenario_3_9@f78a47e]" started-at="2021-04-15T10:23:12 IST" name="tearDown" finished-at="2021-04-15T10:23:12 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=submit_Doc128Char status=SUCCESS method=Scenario_3_9.submit_Doc128Char(java.lang.String)[pri:0, instance:net.assuresign.scenario_3.Scenario_3_9@f78a47e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_3.Scenario_3_9@f78a47e]" started-at="2021-04-15T10:23:12 IST" name="reportUp" finished-at="2021-04-15T10:23:12 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_3_9.submit_SSTemplate128Char(java.lang.String)[pri:0, instance:net.assuresign.scenario_3.Scenario_3_9@f78a47e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="submit_SSTemplate128Char(java.lang.String)[pri:0, instance:net.assuresign.scenario_3.Scenario_3_9@f78a47e]" started-at="2021-04-15T10:23:12 IST" name="submit_SSTemplate128Char" data-provider="version-data-provider" finished-at="2021-04-15T10:23:19 IST" duration-ms="6388" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submit_SSTemplate128Char -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_3.Scenario_3_9@f78a47e]" started-at="2021-04-15T10:23:19 IST" name="tearDown" finished-at="2021-04-15T10:23:19 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=submit_SSTemplate128Char status=SUCCESS method=Scenario_3_9.submit_SSTemplate128Char(java.lang.String)[pri:0, instance:net.assuresign.scenario_3.Scenario_3_9@f78a47e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- net.assuresign.scenario_3.Scenario_3_9 -->
      <class name="net.assuresign.scenario_3.Scenario_3_8">
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_3.Scenario_3_8@26d9b808]" started-at="2021-04-15T10:22:48 IST" name="reportUp" finished-at="2021-04-15T10:22:48 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_3_8.sessionTokenDeprecated_44009(java.lang.String)[pri:0, instance:net.assuresign.scenario_3.Scenario_3_8@26d9b808] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="sessionTokenDeprecated_44009(java.lang.String)[pri:0, instance:net.assuresign.scenario_3.Scenario_3_8@26d9b808]" started-at="2021-04-15T10:22:48 IST" name="sessionTokenDeprecated_44009" data-provider="version-data-provider" finished-at="2021-04-15T10:22:50 IST" duration-ms="2473" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sessionTokenDeprecated_44009 -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_3.Scenario_3_8@26d9b808]" started-at="2021-04-15T10:22:50 IST" name="tearDown" finished-at="2021-04-15T10:22:50 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=sessionTokenDeprecated_44009 status=SUCCESS method=Scenario_3_8.sessionTokenDeprecated_44009(java.lang.String)[pri:0, instance:net.assuresign.scenario_3.Scenario_3_8@26d9b808] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="submitHybridCallDeprecated(java.lang.String)[pri:0, instance:net.assuresign.scenario_3.Scenario_3_8@26d9b808]" started-at="2021-04-15T10:22:50 IST" name="submitHybridCallDeprecated" data-provider="version-data-provider" finished-at="2021-04-15T10:23:03 IST" duration-ms="12983" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitHybridCallDeprecated -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_3.Scenario_3_8@26d9b808]" started-at="2021-04-15T10:22:50 IST" name="reportUp" finished-at="2021-04-15T10:22:50 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_3_8.submitHybridCallDeprecated(java.lang.String)[pri:0, instance:net.assuresign.scenario_3.Scenario_3_8@26d9b808] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_3.Scenario_3_8@26d9b808]" started-at="2021-04-15T10:23:03 IST" name="tearDown" finished-at="2021-04-15T10:23:03 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=submitHybridCallDeprecated status=SUCCESS method=Scenario_3_8.submitHybridCallDeprecated(java.lang.String)[pri:0, instance:net.assuresign.scenario_3.Scenario_3_8@26d9b808] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- net.assuresign.scenario_3.Scenario_3_8 -->
      <class name="net.assuresign.scenario_4.Scenario_4_6">
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_6@2e8c1c9b]" started-at="2021-04-15T10:29:28 IST" name="reportUp" finished-at="2021-04-15T10:29:28 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_4_6.submitPrepare_WithPwdToEditFile(java.lang.String)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_6@2e8c1c9b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="submitPrepare_WithPwdToEditFile(java.lang.String)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_6@2e8c1c9b]" started-at="2021-04-15T10:29:28 IST" name="submitPrepare_WithPwdToEditFile" data-provider="version-data-provider" finished-at="2021-04-15T10:29:40 IST" duration-ms="11575" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitPrepare_WithPwdToEditFile -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_6@2e8c1c9b]" started-at="2021-04-15T10:29:40 IST" name="tearDown" finished-at="2021-04-15T10:29:40 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=submitPrepare_WithPwdToEditFile status=SUCCESS method=Scenario_4_6.submitPrepare_WithPwdToEditFile(java.lang.String)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_6@2e8c1c9b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="submitPrepare_WithPwdToOpenFile(java.lang.String)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_6@2e8c1c9b]" started-at="2021-04-15T10:29:40 IST" name="submitPrepare_WithPwdToOpenFile" data-provider="version-data-provider" finished-at="2021-04-15T10:29:51 IST" duration-ms="11338" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitPrepare_WithPwdToOpenFile -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_6@2e8c1c9b]" started-at="2021-04-15T10:29:40 IST" name="reportUp" finished-at="2021-04-15T10:29:40 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_4_6.submitPrepare_WithPwdToOpenFile(java.lang.String)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_6@2e8c1c9b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_6@2e8c1c9b]" started-at="2021-04-15T10:29:51 IST" name="tearDown" finished-at="2021-04-15T10:29:51 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=submitPrepare_WithPwdToOpenFile status=SUCCESS method=Scenario_4_6.submitPrepare_WithPwdToOpenFile(java.lang.String)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_6@2e8c1c9b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- net.assuresign.scenario_4.Scenario_4_6 -->
      <class name="net.assuresign.scenario_4.Scenario_4_9">
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_9@1530c739]" started-at="2021-04-15T10:32:41 IST" name="reportUp" finished-at="2021-04-15T10:32:41 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_4_9.submitPrepare_DynamicJotBlockParsing(java.lang.String)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_9@1530c739] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="submitPrepare_DynamicJotBlockParsing(java.lang.String)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_9@1530c739]" started-at="2021-04-15T10:32:41 IST" name="submitPrepare_DynamicJotBlockParsing" data-provider="version-data-provider" finished-at="2021-04-15T10:33:02 IST" duration-ms="21114" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitPrepare_DynamicJotBlockParsing -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_9@1530c739]" started-at="2021-04-15T10:33:02 IST" name="tearDown" finished-at="2021-04-15T10:33:02 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=submitPrepare_DynamicJotBlockParsing status=SUCCESS method=Scenario_4_9.submitPrepare_DynamicJotBlockParsing(java.lang.String)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_9@1530c739] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- net.assuresign.scenario_4.Scenario_4_9 -->
      <class name="net.assuresign.scenario_4.Scenario_4_8">
        <test-method signature="submitPrepare_WithLargeFile(java.lang.String)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_8@449a4f23]" started-at="2021-04-15T10:30:38 IST" name="submitPrepare_WithLargeFile" data-provider="version-data-provider" finished-at="2021-04-15T10:31:40 IST" duration-ms="62661" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitPrepare_WithLargeFile -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_8@449a4f23]" started-at="2021-04-15T10:30:38 IST" name="reportUp" finished-at="2021-04-15T10:30:38 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_4_8.submitPrepare_WithLargeFile(java.lang.String)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_8@449a4f23] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_8@449a4f23]" started-at="2021-04-15T10:31:40 IST" name="tearDown" finished-at="2021-04-15T10:31:40 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=submitPrepare_WithLargeFile status=SUCCESS method=Scenario_4_8.submitPrepare_WithLargeFile(java.lang.String)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_8@449a4f23] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_8@449a4f23]" started-at="2021-04-15T10:31:40 IST" name="reportUp" finished-at="2021-04-15T10:31:40 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_4_8.submit_WithLargeFile(java.lang.String)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_8@449a4f23] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="submit_WithLargeFile(java.lang.String)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_8@449a4f23]" started-at="2021-04-15T10:31:40 IST" name="submit_WithLargeFile" data-provider="version-data-provider" finished-at="2021-04-15T10:32:41 IST" duration-ms="60637" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submit_WithLargeFile -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_8@449a4f23]" started-at="2021-04-15T10:32:41 IST" name="tearDown" finished-at="2021-04-15T10:32:41 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=submit_WithLargeFile status=SUCCESS method=Scenario_4_8.submit_WithLargeFile(java.lang.String)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_8@449a4f23] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- net.assuresign.scenario_4.Scenario_4_8 -->
      <class name="net.assuresign.scenario_8.Scenario_8_1">
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_1@2cf3d63b]" started-at="2021-04-15T10:40:52 IST" name="reportUp" finished-at="2021-04-15T10:40:52 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_8_1.getEnvelope_ForSignedEnvelopes(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_1@2cf3d63b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="getEnvelope_ForSignedEnvelopes(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_1@2cf3d63b]" started-at="2021-04-15T10:40:52 IST" name="getEnvelope_ForSignedEnvelopes" data-provider="version-data-provider" finished-at="2021-04-15T10:41:10 IST" duration-ms="18220" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code (<400> or <404>) but was <200>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code (<400> or <404>) but was <200>.

at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:72)
at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:59)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:493)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:674)
at jdk.internal.reflect.GeneratedMethodAccessor69.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:193)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:61)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:126)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:84)
at io.restassured.internal.ValidatableResponseImpl.super$2$statusCode(ValidatableResponseImpl.groovy)
at jdk.internal.reflect.GeneratedMethodAccessor166.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1268)
at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)
at io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy:136)
at io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy)
at net.assuresign.scenario_8.Scenario_8_1.getEnvelope_ForSignedEnvelopes(Scenario_8_1.java:79)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getEnvelope_ForSignedEnvelopes -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_1@2cf3d63b]" started-at="2021-04-15T10:41:10 IST" name="tearDown" finished-at="2021-04-15T10:41:10 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getEnvelope_ForSignedEnvelopes status=FAILURE method=Scenario_8_1.getEnvelope_ForSignedEnvelopes(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_1@2cf3d63b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="getEnvelope_ForValidEnvelopes(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_1@2cf3d63b]" started-at="2021-04-15T10:41:10 IST" name="getEnvelope_ForValidEnvelopes" data-provider="version-data-provider" finished-at="2021-04-15T10:41:25 IST" duration-ms="14957" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getEnvelope_ForValidEnvelopes -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_1@2cf3d63b]" started-at="2021-04-15T10:41:10 IST" name="reportUp" finished-at="2021-04-15T10:41:10 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_8_1.getEnvelope_ForValidEnvelopes(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_1@2cf3d63b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_1@2cf3d63b]" started-at="2021-04-15T10:41:25 IST" name="tearDown" finished-at="2021-04-15T10:41:25 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getEnvelope_ForValidEnvelopes status=SUCCESS method=Scenario_8_1.getEnvelope_ForValidEnvelopes(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_1@2cf3d63b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_1@2cf3d63b]" started-at="2021-04-15T10:41:25 IST" name="reportUp" finished-at="2021-04-15T10:41:25 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_8_1.getEnvelope_ValidDoctypeEnvelopID(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_1@2cf3d63b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="getEnvelope_ValidDoctypeEnvelopID(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_1@2cf3d63b]" started-at="2021-04-15T10:41:25 IST" name="getEnvelope_ValidDoctypeEnvelopID" data-provider="version-data-provider" finished-at="2021-04-15T10:41:41 IST" duration-ms="15372" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getEnvelope_ValidDoctypeEnvelopID -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_1@2cf3d63b]" started-at="2021-04-15T10:41:41 IST" name="tearDown" finished-at="2021-04-15T10:41:41 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getEnvelope_ValidDoctypeEnvelopID status=SUCCESS method=Scenario_8_1.getEnvelope_ValidDoctypeEnvelopID(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_1@2cf3d63b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="getEnvelopes_ValidEnvelopID(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_1@2cf3d63b]" started-at="2021-04-15T10:41:41 IST" name="getEnvelopes_ValidEnvelopID" data-provider="version-data-provider" finished-at="2021-04-15T10:41:56 IST" duration-ms="15464" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getEnvelopes_ValidEnvelopID -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_1@2cf3d63b]" started-at="2021-04-15T10:41:41 IST" name="reportUp" finished-at="2021-04-15T10:41:41 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_8_1.getEnvelopes_ValidEnvelopID(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_1@2cf3d63b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_1@2cf3d63b]" started-at="2021-04-15T10:41:56 IST" name="tearDown" finished-at="2021-04-15T10:41:56 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getEnvelopes_ValidEnvelopID status=SUCCESS method=Scenario_8_1.getEnvelopes_ValidEnvelopID(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_1@2cf3d63b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_1@2cf3d63b]" started-at="2021-04-15T10:41:56 IST" name="reportUp" finished-at="2021-04-15T10:41:56 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_8_1.getHistory_ValidEnvelopID(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_1@2cf3d63b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="getHistory_ValidEnvelopID(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_1@2cf3d63b]" started-at="2021-04-15T10:41:56 IST" name="getHistory_ValidEnvelopID" data-provider="version-data-provider" finished-at="2021-04-15T10:42:14 IST" duration-ms="17650" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getHistory_ValidEnvelopID -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_1@2cf3d63b]" started-at="2021-04-15T10:42:14 IST" name="tearDown" finished-at="2021-04-15T10:42:14 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getHistory_ValidEnvelopID status=SUCCESS method=Scenario_8_1.getHistory_ValidEnvelopID(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_1@2cf3d63b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_1@2cf3d63b]" started-at="2021-04-15T10:42:14 IST" name="reportUp" finished-at="2021-04-15T10:42:14 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_8_1.getStatus_ValidEnvelopID(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_1@2cf3d63b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="getStatus_ValidEnvelopID(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_1@2cf3d63b]" started-at="2021-04-15T10:42:14 IST" name="getStatus_ValidEnvelopID" data-provider="version-data-provider" finished-at="2021-04-15T10:42:30 IST" duration-ms="15686" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getStatus_ValidEnvelopID -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_1@2cf3d63b]" started-at="2021-04-15T10:42:30 IST" name="tearDown" finished-at="2021-04-15T10:42:30 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getStatus_ValidEnvelopID status=SUCCESS method=Scenario_8_1.getStatus_ValidEnvelopID(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_1@2cf3d63b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_1@2cf3d63b]" started-at="2021-04-15T10:42:30 IST" name="reportUp" finished-at="2021-04-15T10:42:30 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_8_1.getValues_ValidEnvelopID(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_1@2cf3d63b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="getValues_ValidEnvelopID(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_1@2cf3d63b]" started-at="2021-04-15T10:42:30 IST" name="getValues_ValidEnvelopID" data-provider="version-data-provider" finished-at="2021-04-15T10:42:47 IST" duration-ms="17585" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getValues_ValidEnvelopID -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_1@2cf3d63b]" started-at="2021-04-15T10:42:47 IST" name="tearDown" finished-at="2021-04-15T10:42:47 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getValues_ValidEnvelopID status=SUCCESS method=Scenario_8_1.getValues_ValidEnvelopID(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_1@2cf3d63b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- net.assuresign.scenario_8.Scenario_8_1 -->
      <class name="net.assuresign.scenario_8.Scenario_8_2">
        <test-method signature="cancel_AlreadyCancelledEnvelopID(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_2@7674f035]" started-at="2021-04-15T10:42:47 IST" name="cancel_AlreadyCancelledEnvelopID" data-provider="version-data-provider" finished-at="2021-04-15T10:43:03 IST" duration-ms="16294" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cancel_AlreadyCancelledEnvelopID -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_2@7674f035]" started-at="2021-04-15T10:42:47 IST" name="reportUp" finished-at="2021-04-15T10:42:47 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_8_2.cancel_AlreadyCancelledEnvelopID(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_2@7674f035] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_2@7674f035]" started-at="2021-04-15T10:43:03 IST" name="tearDown" finished-at="2021-04-15T10:43:03 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=cancel_AlreadyCancelledEnvelopID status=SUCCESS method=Scenario_8_2.cancel_AlreadyCancelledEnvelopID(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_2@7674f035] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_2@7674f035]" started-at="2021-04-15T10:43:03 IST" name="reportUp" finished-at="2021-04-15T10:43:03 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_8_2.cancel_ValidEnvelopID(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_2@7674f035] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="cancel_ValidEnvelopID(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_2@7674f035]" started-at="2021-04-15T10:43:03 IST" name="cancel_ValidEnvelopID" data-provider="version-data-provider" finished-at="2021-04-15T10:43:10 IST" duration-ms="6425" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cancel_ValidEnvelopID -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_2@7674f035]" started-at="2021-04-15T10:43:10 IST" name="tearDown" finished-at="2021-04-15T10:43:10 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=cancel_ValidEnvelopID status=SUCCESS method=Scenario_8_2.cancel_ValidEnvelopID(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_2@7674f035] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- net.assuresign.scenario_8.Scenario_8_2 -->
      <class name="net.assuresign.scenario_8.Scenario_8_3">
        <test-method signature="Signers_NotCompletedEnvelop(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_3@69e153c5]" started-at="2021-04-15T10:43:10 IST" name="Signers_NotCompletedEnvelop" data-provider="version-data-provider" finished-at="2021-04-15T10:43:27 IST" duration-ms="17063" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Signers_NotCompletedEnvelop -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_3@69e153c5]" started-at="2021-04-15T10:43:10 IST" name="reportUp" finished-at="2021-04-15T10:43:10 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_8_3.Signers_NotCompletedEnvelop(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_3@69e153c5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_3@69e153c5]" started-at="2021-04-15T10:43:27 IST" name="tearDown" finished-at="2021-04-15T10:43:27 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Signers_NotCompletedEnvelop status=SUCCESS method=Scenario_8_3.Signers_NotCompletedEnvelop(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_3@69e153c5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="getEnvelopes_ClosedWithValidFormData(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_3@69e153c5]" started-at="2021-04-15T10:43:27 IST" name="getEnvelopes_ClosedWithValidFormData" data-provider="version-data-provider" finished-at="2021-04-15T10:43:32 IST" duration-ms="4982" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getEnvelopes_ClosedWithValidFormData -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_3@69e153c5]" started-at="2021-04-15T10:43:27 IST" name="reportUp" finished-at="2021-04-15T10:43:27 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_8_3.getEnvelopes_ClosedWithValidFormData(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_3@69e153c5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_3@69e153c5]" started-at="2021-04-15T10:43:32 IST" name="tearDown" finished-at="2021-04-15T10:43:32 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getEnvelopes_ClosedWithValidFormData status=SUCCESS method=Scenario_8_3.getEnvelopes_ClosedWithValidFormData(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_3@69e153c5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- net.assuresign.scenario_8.Scenario_8_3 -->
      <class name="net.assuresign.scenario_8.Scenario_8_4">
        <test-method signature="Signers_CompletedDoc(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_4@173ed316]" started-at="2021-04-15T10:43:32 IST" name="Signers_CompletedDoc" data-provider="version-data-provider" finished-at="2021-04-15T10:43:51 IST" duration-ms="18665" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Signers_CompletedDoc -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_4@173ed316]" started-at="2021-04-15T10:43:32 IST" name="reportUp" finished-at="2021-04-15T10:43:32 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_8_4.Signers_CompletedDoc(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_4@173ed316] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_4@173ed316]" started-at="2021-04-15T10:43:51 IST" name="tearDown" finished-at="2021-04-15T10:43:51 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Signers_CompletedDoc status=SUCCESS method=Scenario_8_4.Signers_CompletedDoc(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_4@173ed316] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_4@173ed316]" started-at="2021-04-15T10:43:51 IST" name="reportUp" finished-at="2021-04-15T10:43:51 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_8_4.Signers_emptySignerAndEnvelopID(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_4@173ed316] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="Signers_emptySignerAndEnvelopID(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_4@173ed316]" started-at="2021-04-15T10:43:51 IST" name="Signers_emptySignerAndEnvelopID" data-provider="version-data-provider" finished-at="2021-04-15T10:43:55 IST" duration-ms="4423" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Signers_emptySignerAndEnvelopID -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_4@173ed316]" started-at="2021-04-15T10:43:55 IST" name="tearDown" finished-at="2021-04-15T10:43:55 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Signers_emptySignerAndEnvelopID status=SUCCESS method=Scenario_8_4.Signers_emptySignerAndEnvelopID(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_4@173ed316] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_4@173ed316]" started-at="2021-04-15T10:43:55 IST" name="reportUp" finished-at="2021-04-15T10:43:55 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_8_4.Signers_invalidEnvelopeID(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_4@173ed316] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="Signers_invalidEnvelopeID(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_4@173ed316]" started-at="2021-04-15T10:43:55 IST" name="Signers_invalidEnvelopeID" data-provider="version-data-provider" finished-at="2021-04-15T10:44:00 IST" duration-ms="5394" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Signers_invalidEnvelopeID -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_4@173ed316]" started-at="2021-04-15T10:44:00 IST" name="tearDown" finished-at="2021-04-15T10:44:00 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Signers_invalidEnvelopeID status=SUCCESS method=Scenario_8_4.Signers_invalidEnvelopeID(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_4@173ed316] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="Signers_invalidSignerID(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_4@173ed316]" started-at="2021-04-15T10:44:00 IST" name="Signers_invalidSignerID" data-provider="version-data-provider" finished-at="2021-04-15T10:44:19 IST" duration-ms="18155" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Signers_invalidSignerID -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_4@173ed316]" started-at="2021-04-15T10:44:00 IST" name="reportUp" finished-at="2021-04-15T10:44:00 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_8_4.Signers_invalidSignerID(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_4@173ed316] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_4@173ed316]" started-at="2021-04-15T10:44:19 IST" name="tearDown" finished-at="2021-04-15T10:44:19 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Signers_invalidSignerID status=SUCCESS method=Scenario_8_4.Signers_invalidSignerID(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_4@173ed316] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="Signers_validInput(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_4@173ed316]" started-at="2021-04-15T10:44:19 IST" name="Signers_validInput" data-provider="version-data-provider" finished-at="2021-04-15T10:44:35 IST" duration-ms="16387" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Signers_validInput -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_4@173ed316]" started-at="2021-04-15T10:44:19 IST" name="reportUp" finished-at="2021-04-15T10:44:19 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_8_4.Signers_validInput(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_4@173ed316] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_4@173ed316]" started-at="2021-04-15T10:44:35 IST" name="tearDown" finished-at="2021-04-15T10:44:35 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Signers_validInput status=SUCCESS method=Scenario_8_4.Signers_validInput(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_4@173ed316] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_4@173ed316]" started-at="2021-04-15T10:44:35 IST" name="reportUp" finished-at="2021-04-15T10:44:35 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_8_4.Signers_withoutRequestBody(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_4@173ed316] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="Signers_withoutRequestBody(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_4@173ed316]" started-at="2021-04-15T10:44:35 IST" name="Signers_withoutRequestBody" data-provider="version-data-provider" finished-at="2021-04-15T10:44:51 IST" duration-ms="16335" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Signers_withoutRequestBody -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_4@173ed316]" started-at="2021-04-15T10:44:51 IST" name="tearDown" finished-at="2021-04-15T10:44:51 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Signers_withoutRequestBody status=SUCCESS method=Scenario_8_4.Signers_withoutRequestBody(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8_4@173ed316] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- net.assuresign.scenario_8.Scenario_8_4 -->
      <class name="net.assuresign.scenario_3.Scenario_3_1">
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_3.Scenario_3_1@b9b00e0]" started-at="2021-04-15T10:19:19 IST" name="reportUp" finished-at="2021-04-15T10:19:19 IST" duration-ms="6" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_3_1.submitHybridCall(java.lang.String)[pri:0, instance:net.assuresign.scenario_3.Scenario_3_1@b9b00e0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="submitHybridCall(java.lang.String)[pri:0, instance:net.assuresign.scenario_3.Scenario_3_1@b9b00e0]" started-at="2021-04-15T10:19:19 IST" name="submitHybridCall" data-provider="version-data-provider" finished-at="2021-04-15T10:19:38 IST" duration-ms="19759" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitHybridCall -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_3.Scenario_3_1@b9b00e0]" started-at="2021-04-15T10:19:38 IST" name="tearDown" finished-at="2021-04-15T10:19:38 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=submitHybridCall status=SUCCESS method=Scenario_3_1.submitHybridCall(java.lang.String)[pri:0, instance:net.assuresign.scenario_3.Scenario_3_1@b9b00e0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_3.Scenario_3_1@b9b00e0]" started-at="2021-04-15T10:19:38 IST" name="reportUp" finished-at="2021-04-15T10:19:38 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_3_1.submitHybridCall_InvalidDocName(java.lang.String)[pri:0, instance:net.assuresign.scenario_3.Scenario_3_1@b9b00e0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="submitHybridCall_InvalidDocName(java.lang.String)[pri:0, instance:net.assuresign.scenario_3.Scenario_3_1@b9b00e0]" started-at="2021-04-15T10:19:38 IST" name="submitHybridCall_InvalidDocName" data-provider="version-data-provider" finished-at="2021-04-15T10:19:47 IST" duration-ms="8653" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitHybridCall_InvalidDocName -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_3.Scenario_3_1@b9b00e0]" started-at="2021-04-15T10:19:47 IST" name="tearDown" finished-at="2021-04-15T10:19:47 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=submitHybridCall_InvalidDocName status=SUCCESS method=Scenario_3_1.submitHybridCall_InvalidDocName(java.lang.String)[pri:0, instance:net.assuresign.scenario_3.Scenario_3_1@b9b00e0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- net.assuresign.scenario_3.Scenario_3_1 -->
      <class name="net.assuresign.scenario_11.Scenario_11">
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_11.Scenario_11@17f62e33]" started-at="2021-04-15T10:46:12 IST" name="reportUp" finished-at="2021-04-15T10:46:12 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_11.environments_EmptyUsername(java.lang.String)[pri:0, instance:net.assuresign.scenario_11.Scenario_11@17f62e33] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="environments_EmptyUsername(java.lang.String)[pri:0, instance:net.assuresign.scenario_11.Scenario_11@17f62e33]" started-at="2021-04-15T10:46:12 IST" name="environments_EmptyUsername" data-provider="version-data-provider" finished-at="2021-04-15T10:46:17 IST" duration-ms="4586" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- environments_EmptyUsername -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_11.Scenario_11@17f62e33]" started-at="2021-04-15T10:46:17 IST" name="tearDown" finished-at="2021-04-15T10:46:17 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=environments_EmptyUsername status=SUCCESS method=Scenario_11.environments_EmptyUsername(java.lang.String)[pri:0, instance:net.assuresign.scenario_11.Scenario_11@17f62e33] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_11.Scenario_11@17f62e33]" started-at="2021-04-15T10:46:17 IST" name="reportUp" finished-at="2021-04-15T10:46:17 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_11.environments_InvalidUsername(java.lang.String)[pri:0, instance:net.assuresign.scenario_11.Scenario_11@17f62e33] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="environments_InvalidUsername(java.lang.String)[pri:0, instance:net.assuresign.scenario_11.Scenario_11@17f62e33]" started-at="2021-04-15T10:46:17 IST" name="environments_InvalidUsername" data-provider="version-data-provider" finished-at="2021-04-15T10:46:21 IST" duration-ms="4671" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- environments_InvalidUsername -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_11.Scenario_11@17f62e33]" started-at="2021-04-15T10:46:21 IST" name="tearDown" finished-at="2021-04-15T10:46:21 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=environments_InvalidUsername status=SUCCESS method=Scenario_11.environments_InvalidUsername(java.lang.String)[pri:0, instance:net.assuresign.scenario_11.Scenario_11@17f62e33] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_11.Scenario_11@17f62e33]" started-at="2021-04-15T10:46:21 IST" name="reportUp" finished-at="2021-04-15T10:46:21 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_11.environments_validUsername(java.lang.String)[pri:0, instance:net.assuresign.scenario_11.Scenario_11@17f62e33] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="environments_validUsername(java.lang.String)[pri:0, instance:net.assuresign.scenario_11.Scenario_11@17f62e33]" started-at="2021-04-15T10:46:21 IST" name="environments_validUsername" data-provider="version-data-provider" finished-at="2021-04-15T10:46:25 IST" duration-ms="4224" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- environments_validUsername -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_11.Scenario_11@17f62e33]" started-at="2021-04-15T10:46:25 IST" name="tearDown" finished-at="2021-04-15T10:46:25 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=environments_validUsername status=SUCCESS method=Scenario_11.environments_validUsername(java.lang.String)[pri:0, instance:net.assuresign.scenario_11.Scenario_11@17f62e33] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- net.assuresign.scenario_11.Scenario_11 -->
      <class name="net.assuresign.scenario_4.Scenario_4_1">
        <test-method signature="submitPrepare(java.lang.String)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_1@2a265ea9]" started-at="2021-04-15T10:26:24 IST" name="submitPrepare" data-provider="version-data-provider" finished-at="2021-04-15T10:26:44 IST" duration-ms="20107" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitPrepare -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_1@2a265ea9]" started-at="2021-04-15T10:26:24 IST" name="reportUp" finished-at="2021-04-15T10:26:24 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_4_1.submitPrepare(java.lang.String)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_1@2a265ea9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_1@2a265ea9]" started-at="2021-04-15T10:26:44 IST" name="tearDown" finished-at="2021-04-15T10:26:44 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=submitPrepare status=SUCCESS method=Scenario_4_1.submitPrepare(java.lang.String)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_1@2a265ea9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_1@2a265ea9]" started-at="2021-04-15T10:26:44 IST" name="reportUp" finished-at="2021-04-15T10:26:44 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_4_1.submitPrepare_SpecifiedSchema(java.lang.String)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_1@2a265ea9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="submitPrepare_SpecifiedSchema(java.lang.String)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_1@2a265ea9]" started-at="2021-04-15T10:26:44 IST" name="submitPrepare_SpecifiedSchema" data-provider="version-data-provider" finished-at="2021-04-15T10:26:56 IST" duration-ms="11411" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitPrepare_SpecifiedSchema -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_1@2a265ea9]" started-at="2021-04-15T10:26:56 IST" name="tearDown" finished-at="2021-04-15T10:26:56 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=submitPrepare_SpecifiedSchema status=SUCCESS method=Scenario_4_1.submitPrepare_SpecifiedSchema(java.lang.String)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_1@2a265ea9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- net.assuresign.scenario_4.Scenario_4_1 -->
      <class name="net.assuresign.scenario_6.Scenario_6">
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_6.Scenario_6@2eae8e6e]" started-at="2021-04-15T10:38:45 IST" name="reportUp" finished-at="2021-04-15T10:38:45 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_6.getAllEmailDesignForValidEmail(java.lang.String)[pri:0, instance:net.assuresign.scenario_6.Scenario_6@2eae8e6e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="getAllEmailDesignForValidEmail(java.lang.String)[pri:0, instance:net.assuresign.scenario_6.Scenario_6@2eae8e6e]" started-at="2021-04-15T10:38:45 IST" name="getAllEmailDesignForValidEmail" data-provider="version-data-provider" finished-at="2021-04-15T10:38:50 IST" duration-ms="4993" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllEmailDesignForValidEmail -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_6.Scenario_6@2eae8e6e]" started-at="2021-04-15T10:38:50 IST" name="tearDown" finished-at="2021-04-15T10:38:50 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getAllEmailDesignForValidEmail status=SUCCESS method=Scenario_6.getAllEmailDesignForValidEmail(java.lang.String)[pri:0, instance:net.assuresign.scenario_6.Scenario_6@2eae8e6e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_6.Scenario_6@2eae8e6e]" started-at="2021-04-15T10:38:50 IST" name="reportUp" finished-at="2021-04-15T10:38:50 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_6.getAllEmailDesignSets(java.lang.String)[pri:0, instance:net.assuresign.scenario_6.Scenario_6@2eae8e6e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="getAllEmailDesignSets(java.lang.String)[pri:0, instance:net.assuresign.scenario_6.Scenario_6@2eae8e6e]" started-at="2021-04-15T10:38:50 IST" name="getAllEmailDesignSets" data-provider="version-data-provider" finished-at="2021-04-15T10:38:55 IST" duration-ms="4638" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllEmailDesignSets -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_6.Scenario_6@2eae8e6e]" started-at="2021-04-15T10:38:55 IST" name="tearDown" finished-at="2021-04-15T10:38:55 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getAllEmailDesignSets status=SUCCESS method=Scenario_6.getAllEmailDesignSets(java.lang.String)[pri:0, instance:net.assuresign.scenario_6.Scenario_6@2eae8e6e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_6.Scenario_6@2eae8e6e]" started-at="2021-04-15T10:38:55 IST" name="reportUp" finished-at="2021-04-15T10:38:55 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_6.getAllEmailDesign_EmptyEmail(java.lang.String)[pri:0, instance:net.assuresign.scenario_6.Scenario_6@2eae8e6e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="getAllEmailDesign_EmptyEmail(java.lang.String)[pri:0, instance:net.assuresign.scenario_6.Scenario_6@2eae8e6e]" started-at="2021-04-15T10:38:55 IST" name="getAllEmailDesign_EmptyEmail" data-provider="version-data-provider" finished-at="2021-04-15T10:39:01 IST" duration-ms="6547" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code (<400> or <404>) but was <200>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code (<400> or <404>) but was <200>.

at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:72)
at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:59)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:493)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:674)
at jdk.internal.reflect.GeneratedMethodAccessor69.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:193)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:61)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:126)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:84)
at io.restassured.internal.ValidatableResponseImpl.super$2$statusCode(ValidatableResponseImpl.groovy)
at jdk.internal.reflect.GeneratedMethodAccessor166.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1268)
at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)
at io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy:136)
at io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy)
at net.assuresign.scenario_6.Scenario_6.getAllEmailDesign_EmptyEmail(Scenario_6.java:132)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllEmailDesign_EmptyEmail -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_6.Scenario_6@2eae8e6e]" started-at="2021-04-15T10:39:01 IST" name="tearDown" finished-at="2021-04-15T10:39:01 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getAllEmailDesign_EmptyEmail status=FAILURE method=Scenario_6.getAllEmailDesign_EmptyEmail(java.lang.String)[pri:0, instance:net.assuresign.scenario_6.Scenario_6@2eae8e6e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_6.Scenario_6@2eae8e6e]" started-at="2021-04-15T10:39:01 IST" name="reportUp" finished-at="2021-04-15T10:39:01 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_6.getAllEmailDesign_InvalidEmail(java.lang.String)[pri:0, instance:net.assuresign.scenario_6.Scenario_6@2eae8e6e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="getAllEmailDesign_InvalidEmail(java.lang.String)[pri:0, instance:net.assuresign.scenario_6.Scenario_6@2eae8e6e]" started-at="2021-04-15T10:39:01 IST" name="getAllEmailDesign_InvalidEmail" data-provider="version-data-provider" finished-at="2021-04-15T10:39:07 IST" duration-ms="5308" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllEmailDesign_InvalidEmail -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_6.Scenario_6@2eae8e6e]" started-at="2021-04-15T10:39:07 IST" name="tearDown" finished-at="2021-04-15T10:39:07 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getAllEmailDesign_InvalidEmail status=SUCCESS method=Scenario_6.getAllEmailDesign_InvalidEmail(java.lang.String)[pri:0, instance:net.assuresign.scenario_6.Scenario_6@2eae8e6e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="retriveNotificationForInvalidDesignsetID(java.lang.String)[pri:0, instance:net.assuresign.scenario_6.Scenario_6@2eae8e6e]" started-at="2021-04-15T10:39:07 IST" name="retriveNotificationForInvalidDesignsetID" data-provider="version-data-provider" finished-at="2021-04-15T10:39:11 IST" duration-ms="4549" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- retriveNotificationForInvalidDesignsetID -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_6.Scenario_6@2eae8e6e]" started-at="2021-04-15T10:39:07 IST" name="reportUp" finished-at="2021-04-15T10:39:07 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_6.retriveNotificationForInvalidDesignsetID(java.lang.String)[pri:0, instance:net.assuresign.scenario_6.Scenario_6@2eae8e6e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_6.Scenario_6@2eae8e6e]" started-at="2021-04-15T10:39:11 IST" name="tearDown" finished-at="2021-04-15T10:39:11 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=retriveNotificationForInvalidDesignsetID status=SUCCESS method=Scenario_6.retriveNotificationForInvalidDesignsetID(java.lang.String)[pri:0, instance:net.assuresign.scenario_6.Scenario_6@2eae8e6e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_6.Scenario_6@2eae8e6e]" started-at="2021-04-15T10:39:11 IST" name="reportUp" finished-at="2021-04-15T10:39:11 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_6.retriveNotificationForValidEmail(java.lang.String)[pri:0, instance:net.assuresign.scenario_6.Scenario_6@2eae8e6e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="retriveNotificationForValidEmail(java.lang.String)[pri:0, instance:net.assuresign.scenario_6.Scenario_6@2eae8e6e]" started-at="2021-04-15T10:39:11 IST" name="retriveNotificationForValidEmail" data-provider="version-data-provider" finished-at="2021-04-15T10:39:15 IST" duration-ms="4103" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- retriveNotificationForValidEmail -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_6.Scenario_6@2eae8e6e]" started-at="2021-04-15T10:39:15 IST" name="reportUp" finished-at="2021-04-15T10:39:15 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_6.retriveNotification_EmptyCulture(java.lang.String)[pri:0, instance:net.assuresign.scenario_6.Scenario_6@2eae8e6e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_6.Scenario_6@2eae8e6e]" started-at="2021-04-15T10:39:15 IST" name="tearDown" finished-at="2021-04-15T10:39:15 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=retriveNotificationForValidEmail status=SUCCESS method=Scenario_6.retriveNotificationForValidEmail(java.lang.String)[pri:0, instance:net.assuresign.scenario_6.Scenario_6@2eae8e6e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="retriveNotification_EmptyCulture(java.lang.String)[pri:0, instance:net.assuresign.scenario_6.Scenario_6@2eae8e6e]" started-at="2021-04-15T10:39:15 IST" name="retriveNotification_EmptyCulture" data-provider="version-data-provider" finished-at="2021-04-15T10:39:20 IST" duration-ms="4546" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- retriveNotification_EmptyCulture -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_6.Scenario_6@2eae8e6e]" started-at="2021-04-15T10:39:20 IST" name="tearDown" finished-at="2021-04-15T10:39:20 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=retriveNotification_EmptyCulture status=SUCCESS method=Scenario_6.retriveNotification_EmptyCulture(java.lang.String)[pri:0, instance:net.assuresign.scenario_6.Scenario_6@2eae8e6e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="retriveNotification_EmptyDesignsetID(java.lang.String)[pri:0, instance:net.assuresign.scenario_6.Scenario_6@2eae8e6e]" started-at="2021-04-15T10:39:20 IST" name="retriveNotification_EmptyDesignsetID" data-provider="version-data-provider" finished-at="2021-04-15T10:39:24 IST" duration-ms="4268" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code (<400> or <404>) but was <200>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code (<400> or <404>) but was <200>.

at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:72)
at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:59)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:493)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:674)
at jdk.internal.reflect.GeneratedMethodAccessor69.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:193)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:61)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:126)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:84)
at io.restassured.internal.ValidatableResponseImpl.super$2$statusCode(ValidatableResponseImpl.groovy)
at jdk.internal.reflect.GeneratedMethodAccessor166.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1268)
at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)
at io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy:136)
at io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy)
at net.assuresign.scenario_6.Scenario_6.retriveNotification_EmptyDesignsetID(Scenario_6.java:188)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- retriveNotification_EmptyDesignsetID -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_6.Scenario_6@2eae8e6e]" started-at="2021-04-15T10:39:20 IST" name="reportUp" finished-at="2021-04-15T10:39:20 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_6.retriveNotification_EmptyDesignsetID(java.lang.String)[pri:0, instance:net.assuresign.scenario_6.Scenario_6@2eae8e6e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_6.Scenario_6@2eae8e6e]" started-at="2021-04-15T10:39:24 IST" name="tearDown" finished-at="2021-04-15T10:39:24 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=retriveNotification_EmptyDesignsetID status=FAILURE method=Scenario_6.retriveNotification_EmptyDesignsetID(java.lang.String)[pri:0, instance:net.assuresign.scenario_6.Scenario_6@2eae8e6e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_6.Scenario_6@2eae8e6e]" started-at="2021-04-15T10:39:24 IST" name="reportUp" finished-at="2021-04-15T10:39:24 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_6.retriveNotification_InvalidCulture(java.lang.String)[pri:0, instance:net.assuresign.scenario_6.Scenario_6@2eae8e6e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="retriveNotification_InvalidCulture(java.lang.String)[pri:0, instance:net.assuresign.scenario_6.Scenario_6@2eae8e6e]" started-at="2021-04-15T10:39:24 IST" name="retriveNotification_InvalidCulture" data-provider="version-data-provider" finished-at="2021-04-15T10:39:29 IST" duration-ms="4644" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code (<400> or <404>) but was <200>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code (<400> or <404>) but was <200>.

at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:72)
at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:59)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:493)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:674)
at jdk.internal.reflect.GeneratedMethodAccessor69.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:193)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:61)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:126)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:84)
at io.restassured.internal.ValidatableResponseImpl.super$2$statusCode(ValidatableResponseImpl.groovy)
at jdk.internal.reflect.GeneratedMethodAccessor166.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1268)
at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)
at io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy:136)
at io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy)
at net.assuresign.scenario_6.Scenario_6.retriveNotification_InvalidCulture(Scenario_6.java:150)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- retriveNotification_InvalidCulture -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_6.Scenario_6@2eae8e6e]" started-at="2021-04-15T10:39:29 IST" name="tearDown" finished-at="2021-04-15T10:39:29 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=retriveNotification_InvalidCulture status=FAILURE method=Scenario_6.retriveNotification_InvalidCulture(java.lang.String)[pri:0, instance:net.assuresign.scenario_6.Scenario_6@2eae8e6e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- net.assuresign.scenario_6.Scenario_6 -->
      <class name="net.assuresign.scenario_3.Scenario_3_18">
        <test-method signature="submit_WrongConditionalLogic(java.lang.String)[pri:0, instance:net.assuresign.scenario_3.Scenario_3_18@6d4d66d2]" started-at="2021-04-15T10:25:42 IST" name="submit_WrongConditionalLogic" data-provider="version-data-provider" finished-at="2021-04-15T10:26:24 IST" duration-ms="42611" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submit_WrongConditionalLogic -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_3.Scenario_3_18@6d4d66d2]" started-at="2021-04-15T10:25:42 IST" name="reportUp" finished-at="2021-04-15T10:25:42 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_3_18.submit_WrongConditionalLogic(java.lang.String)[pri:0, instance:net.assuresign.scenario_3.Scenario_3_18@6d4d66d2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_3.Scenario_3_18@6d4d66d2]" started-at="2021-04-15T10:26:24 IST" name="tearDown" finished-at="2021-04-15T10:26:24 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=submit_WrongConditionalLogic status=SUCCESS method=Scenario_3_18.submit_WrongConditionalLogic(java.lang.String)[pri:0, instance:net.assuresign.scenario_3.Scenario_3_18@6d4d66d2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- net.assuresign.scenario_3.Scenario_3_18 -->
      <class name="net.assuresign.scenario_5.Scenario_5">
        <test-method signature="getInValidTemplate(java.lang.String)[pri:0, instance:net.assuresign.scenario_5.Scenario_5@4b741d6d]" started-at="2021-04-15T10:38:21 IST" name="getInValidTemplate" data-provider="version-data-provider" finished-at="2021-04-15T10:38:25 IST" duration-ms="4345" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code (<400> or <404>) but was <401>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code (<400> or <404>) but was <401>.

at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:72)
at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:59)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:493)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:674)
at jdk.internal.reflect.GeneratedMethodAccessor69.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:193)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:61)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:126)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:84)
at io.restassured.internal.ValidatableResponseImpl.super$2$statusCode(ValidatableResponseImpl.groovy)
at jdk.internal.reflect.GeneratedMethodAccessor166.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1268)
at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)
at io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy:136)
at io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy)
at net.assuresign.scenario_5.Scenario_5.getInValidTemplate(Scenario_5.java:99)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInValidTemplate -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_5.Scenario_5@4b741d6d]" started-at="2021-04-15T10:38:21 IST" name="reportUp" finished-at="2021-04-15T10:38:21 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_5.getInValidTemplate(java.lang.String)[pri:0, instance:net.assuresign.scenario_5.Scenario_5@4b741d6d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_5.Scenario_5@4b741d6d]" started-at="2021-04-15T10:38:25 IST" name="tearDown" finished-at="2021-04-15T10:38:25 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getInValidTemplate status=FAILURE method=Scenario_5.getInValidTemplate(java.lang.String)[pri:0, instance:net.assuresign.scenario_5.Scenario_5@4b741d6d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_5.Scenario_5@4b741d6d]" started-at="2021-04-15T10:38:25 IST" name="reportUp" finished-at="2021-04-15T10:38:25 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_5.getTemplate(java.lang.String)[pri:0, instance:net.assuresign.scenario_5.Scenario_5@4b741d6d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="getTemplate(java.lang.String)[pri:0, instance:net.assuresign.scenario_5.Scenario_5@4b741d6d]" started-at="2021-04-15T10:38:25 IST" name="getTemplate" data-provider="version-data-provider" finished-at="2021-04-15T10:38:30 IST" duration-ms="4663" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTemplate -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_5.Scenario_5@4b741d6d]" started-at="2021-04-15T10:38:30 IST" name="tearDown" finished-at="2021-04-15T10:38:30 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getTemplate status=SUCCESS method=Scenario_5.getTemplate(java.lang.String)[pri:0, instance:net.assuresign.scenario_5.Scenario_5@4b741d6d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_5.Scenario_5@4b741d6d]" started-at="2021-04-15T10:38:30 IST" name="reportUp" finished-at="2021-04-15T10:38:30 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_5.getTemplateByEmptyID(java.lang.String)[pri:0, instance:net.assuresign.scenario_5.Scenario_5@4b741d6d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="getTemplateByEmptyID(java.lang.String)[pri:0, instance:net.assuresign.scenario_5.Scenario_5@4b741d6d]" started-at="2021-04-15T10:38:30 IST" name="getTemplateByEmptyID" data-provider="version-data-provider" finished-at="2021-04-15T10:38:34 IST" duration-ms="4321" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code (<400> or <404>) but was <200>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code (<400> or <404>) but was <200>.

at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:72)
at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:59)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:493)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:674)
at jdk.internal.reflect.GeneratedMethodAccessor69.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:193)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:61)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:126)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:84)
at io.restassured.internal.ValidatableResponseImpl.super$2$statusCode(ValidatableResponseImpl.groovy)
at jdk.internal.reflect.GeneratedMethodAccessor166.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1268)
at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)
at io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy:136)
at io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy)
at net.assuresign.scenario_5.Scenario_5.getTemplateByEmptyID(Scenario_5.java:120)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTemplateByEmptyID -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_5.Scenario_5@4b741d6d]" started-at="2021-04-15T10:38:34 IST" name="tearDown" finished-at="2021-04-15T10:38:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getTemplateByEmptyID status=FAILURE method=Scenario_5.getTemplateByEmptyID(java.lang.String)[pri:0, instance:net.assuresign.scenario_5.Scenario_5@4b741d6d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_5.Scenario_5@4b741d6d]" started-at="2021-04-15T10:38:34 IST" name="reportUp" finished-at="2021-04-15T10:38:34 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_5.getValidTemplate(java.lang.String)[pri:0, instance:net.assuresign.scenario_5.Scenario_5@4b741d6d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="getValidTemplate(java.lang.String)[pri:0, instance:net.assuresign.scenario_5.Scenario_5@4b741d6d]" started-at="2021-04-15T10:38:34 IST" name="getValidTemplate" data-provider="version-data-provider" finished-at="2021-04-15T10:38:41 IST" duration-ms="6824" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getValidTemplate -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_5.Scenario_5@4b741d6d]" started-at="2021-04-15T10:38:41 IST" name="tearDown" finished-at="2021-04-15T10:38:41 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getValidTemplate status=SUCCESS method=Scenario_5.getValidTemplate(java.lang.String)[pri:0, instance:net.assuresign.scenario_5.Scenario_5@4b741d6d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_5.Scenario_5@4b741d6d]" started-at="2021-04-15T10:38:41 IST" name="reportUp" finished-at="2021-04-15T10:38:41 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_5.getValidUnAuthorizedTemplate(java.lang.String)[pri:0, instance:net.assuresign.scenario_5.Scenario_5@4b741d6d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="getValidUnAuthorizedTemplate(java.lang.String)[pri:0, instance:net.assuresign.scenario_5.Scenario_5@4b741d6d]" started-at="2021-04-15T10:38:41 IST" name="getValidUnAuthorizedTemplate" data-provider="version-data-provider" finished-at="2021-04-15T10:38:45 IST" duration-ms="4205" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getValidUnAuthorizedTemplate -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_5.Scenario_5@4b741d6d]" started-at="2021-04-15T10:38:45 IST" name="tearDown" finished-at="2021-04-15T10:38:45 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getValidUnAuthorizedTemplate status=SUCCESS method=Scenario_5.getValidUnAuthorizedTemplate(java.lang.String)[pri:0, instance:net.assuresign.scenario_5.Scenario_5@4b741d6d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- net.assuresign.scenario_5.Scenario_5 -->
      <class name="net.assuresign.scenario_4.Scenario_4_14">
        <test-method signature="submitPrepare_WithInvalidTemplate(java.lang.String)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_14@7d0b7e3c]" started-at="2021-04-15T10:33:56 IST" name="submitPrepare_WithInvalidTemplate" data-provider="version-data-provider" finished-at="2021-04-15T10:34:02 IST" duration-ms="6230" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitPrepare_WithInvalidTemplate -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_14@7d0b7e3c]" started-at="2021-04-15T10:33:56 IST" name="reportUp" finished-at="2021-04-15T10:33:56 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_4_14.submitPrepare_WithInvalidTemplate(java.lang.String)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_14@7d0b7e3c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_14@7d0b7e3c]" started-at="2021-04-15T10:34:02 IST" name="tearDown" finished-at="2021-04-15T10:34:02 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=submitPrepare_WithInvalidTemplate status=SUCCESS method=Scenario_4_14.submitPrepare_WithInvalidTemplate(java.lang.String)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_14@7d0b7e3c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="submitPrepare_WithTempleteSchema(java.lang.String)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_14@7d0b7e3c]" started-at="2021-04-15T10:34:02 IST" name="submitPrepare_WithTempleteSchema" data-provider="version-data-provider" finished-at="2021-04-15T10:34:10 IST" duration-ms="7487" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitPrepare_WithTempleteSchema -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_14@7d0b7e3c]" started-at="2021-04-15T10:34:02 IST" name="reportUp" finished-at="2021-04-15T10:34:02 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_4_14.submitPrepare_WithTempleteSchema(java.lang.String)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_14@7d0b7e3c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_14@7d0b7e3c]" started-at="2021-04-15T10:34:10 IST" name="tearDown" finished-at="2021-04-15T10:34:10 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=submitPrepare_WithTempleteSchema status=SUCCESS method=Scenario_4_14.submitPrepare_WithTempleteSchema(java.lang.String)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_14@7d0b7e3c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="submit_WithTempleteSchema(java.lang.String)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_14@7d0b7e3c]" started-at="2021-04-15T10:34:10 IST" name="submit_WithTempleteSchema" data-provider="version-data-provider" finished-at="2021-04-15T10:34:23 IST" duration-ms="13660" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submit_WithTempleteSchema -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_14@7d0b7e3c]" started-at="2021-04-15T10:34:10 IST" name="reportUp" finished-at="2021-04-15T10:34:10 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_4_14.submit_WithTempleteSchema(java.lang.String)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_14@7d0b7e3c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_14@7d0b7e3c]" started-at="2021-04-15T10:34:23 IST" name="tearDown" finished-at="2021-04-15T10:34:23 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=submit_WithTempleteSchema status=SUCCESS method=Scenario_4_14.submit_WithTempleteSchema(java.lang.String)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_14@7d0b7e3c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- net.assuresign.scenario_4.Scenario_4_14 -->
      <class name="net.assuresign.scenario_4.Scenario_4_15">
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_15@15bb5034]" started-at="2021-04-15T10:34:23 IST" name="reportUp" finished-at="2021-04-15T10:34:23 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_4_15.getPreparedEnvelopedID_DocMoreThen128Char(java.lang.String)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_15@15bb5034] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="getPreparedEnvelopedID_DocMoreThen128Char(java.lang.String)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_15@15bb5034]" started-at="2021-04-15T10:34:23 IST" name="getPreparedEnvelopedID_DocMoreThen128Char" data-provider="version-data-provider" finished-at="2021-04-15T10:34:33 IST" duration-ms="9161" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPreparedEnvelopedID_DocMoreThen128Char -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_15@15bb5034]" started-at="2021-04-15T10:34:33 IST" name="tearDown" finished-at="2021-04-15T10:34:33 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getPreparedEnvelopedID_DocMoreThen128Char status=SUCCESS method=Scenario_4_15.getPreparedEnvelopedID_DocMoreThen128Char(java.lang.String)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_15@15bb5034] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="getPreparedEnvelopedID_FileToUploadEmptyString(java.lang.String)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_15@15bb5034]" started-at="2021-04-15T10:34:33 IST" name="getPreparedEnvelopedID_FileToUploadEmptyString" data-provider="version-data-provider" finished-at="2021-04-15T10:34:44 IST" duration-ms="10980" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPreparedEnvelopedID_FileToUploadEmptyString -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_15@15bb5034]" started-at="2021-04-15T10:34:33 IST" name="reportUp" finished-at="2021-04-15T10:34:33 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_4_15.getPreparedEnvelopedID_FileToUploadEmptyString(java.lang.String)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_15@15bb5034] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_15@15bb5034]" started-at="2021-04-15T10:34:44 IST" name="tearDown" finished-at="2021-04-15T10:34:44 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getPreparedEnvelopedID_FileToUploadEmptyString status=SUCCESS method=Scenario_4_15.getPreparedEnvelopedID_FileToUploadEmptyString(java.lang.String)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_15@15bb5034] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_15@15bb5034]" started-at="2021-04-15T10:34:44 IST" name="reportUp" finished-at="2021-04-15T10:34:44 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_4_15.getPreparedEnvelopedID_FileToUploadNull(java.lang.String)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_15@15bb5034] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="getPreparedEnvelopedID_FileToUploadNull(java.lang.String)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_15@15bb5034]" started-at="2021-04-15T10:34:44 IST" name="getPreparedEnvelopedID_FileToUploadNull" data-provider="version-data-provider" finished-at="2021-04-15T10:35:33 IST" duration-ms="49837" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPreparedEnvelopedID_FileToUploadNull -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_15@15bb5034]" started-at="2021-04-15T10:35:33 IST" name="tearDown" finished-at="2021-04-15T10:35:33 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getPreparedEnvelopedID_FileToUploadNull status=SUCCESS method=Scenario_4_15.getPreparedEnvelopedID_FileToUploadNull(java.lang.String)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_15@15bb5034] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="getPreparedEnvelopedID_InvalidFileName(java.lang.String)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_15@15bb5034]" started-at="2021-04-15T10:35:33 IST" name="getPreparedEnvelopedID_InvalidFileName" data-provider="version-data-provider" finished-at="2021-04-15T10:36:17 IST" duration-ms="43390" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPreparedEnvelopedID_InvalidFileName -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_15@15bb5034]" started-at="2021-04-15T10:35:33 IST" name="reportUp" finished-at="2021-04-15T10:35:33 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_4_15.getPreparedEnvelopedID_InvalidFileName(java.lang.String)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_15@15bb5034] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_15@15bb5034]" started-at="2021-04-15T10:36:17 IST" name="tearDown" finished-at="2021-04-15T10:36:17 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getPreparedEnvelopedID_InvalidFileName status=SUCCESS method=Scenario_4_15.getPreparedEnvelopedID_InvalidFileName(java.lang.String)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_15@15bb5034] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_15@15bb5034]" started-at="2021-04-15T10:36:17 IST" name="reportUp" finished-at="2021-04-15T10:36:17 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_4_15.getPreparedEnvelopedID_InvalidFileValue(java.lang.String)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_15@15bb5034] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="getPreparedEnvelopedID_InvalidFileValue(java.lang.String)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_15@15bb5034]" started-at="2021-04-15T10:36:17 IST" name="getPreparedEnvelopedID_InvalidFileValue" data-provider="version-data-provider" finished-at="2021-04-15T10:36:29 IST" duration-ms="11853" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPreparedEnvelopedID_InvalidFileValue -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_15@15bb5034]" started-at="2021-04-15T10:36:29 IST" name="reportUp" finished-at="2021-04-15T10:36:29 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_4_15.getPreparedEnvelopedID_WithoutBase64File(java.lang.String)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_15@15bb5034] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_15@15bb5034]" started-at="2021-04-15T10:36:29 IST" name="tearDown" finished-at="2021-04-15T10:36:29 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getPreparedEnvelopedID_InvalidFileValue status=SUCCESS method=Scenario_4_15.getPreparedEnvelopedID_InvalidFileValue(java.lang.String)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_15@15bb5034] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="getPreparedEnvelopedID_WithoutBase64File(java.lang.String)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_15@15bb5034]" started-at="2021-04-15T10:36:29 IST" name="getPreparedEnvelopedID_WithoutBase64File" data-provider="version-data-provider" finished-at="2021-04-15T10:37:09 IST" duration-ms="40357" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPreparedEnvelopedID_WithoutBase64File -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_15@15bb5034]" started-at="2021-04-15T10:37:09 IST" name="tearDown" finished-at="2021-04-15T10:37:09 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getPreparedEnvelopedID_WithoutBase64File status=SUCCESS method=Scenario_4_15.getPreparedEnvelopedID_WithoutBase64File(java.lang.String)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_15@15bb5034] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="submitPrepare_DocMoreThen128Char(java.lang.String)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_15@15bb5034]" started-at="2021-04-15T10:37:09 IST" name="submitPrepare_DocMoreThen128Char" data-provider="version-data-provider" finished-at="2021-04-15T10:37:36 IST" duration-ms="27191" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitPrepare_DocMoreThen128Char -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_15@15bb5034]" started-at="2021-04-15T10:37:09 IST" name="reportUp" finished-at="2021-04-15T10:37:09 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_4_15.submitPrepare_DocMoreThen128Char(java.lang.String)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_15@15bb5034] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_15@15bb5034]" started-at="2021-04-15T10:37:36 IST" name="tearDown" finished-at="2021-04-15T10:37:36 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=submitPrepare_DocMoreThen128Char status=SUCCESS method=Scenario_4_15.submitPrepare_DocMoreThen128Char(java.lang.String)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_15@15bb5034] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_15@15bb5034]" started-at="2021-04-15T10:37:36 IST" name="reportUp" finished-at="2021-04-15T10:37:36 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_4_15.submitPrepare_FileToUploadEmptyString(java.lang.String)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_15@15bb5034] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="submitPrepare_FileToUploadEmptyString(java.lang.String)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_15@15bb5034]" started-at="2021-04-15T10:37:36 IST" name="submitPrepare_FileToUploadEmptyString" data-provider="version-data-provider" finished-at="2021-04-15T10:37:51 IST" duration-ms="14464" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitPrepare_FileToUploadEmptyString -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_15@15bb5034]" started-at="2021-04-15T10:37:51 IST" name="tearDown" finished-at="2021-04-15T10:37:51 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=submitPrepare_FileToUploadEmptyString status=SUCCESS method=Scenario_4_15.submitPrepare_FileToUploadEmptyString(java.lang.String)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_15@15bb5034] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_15@15bb5034]" started-at="2021-04-15T10:37:51 IST" name="reportUp" finished-at="2021-04-15T10:37:51 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_4_15.submitPrepare_FileToUploadNull(java.lang.String)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_15@15bb5034] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="submitPrepare_FileToUploadNull(java.lang.String)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_15@15bb5034]" started-at="2021-04-15T10:37:51 IST" name="submitPrepare_FileToUploadNull" data-provider="version-data-provider" finished-at="2021-04-15T10:38:07 IST" duration-ms="16083" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitPrepare_FileToUploadNull -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_15@15bb5034]" started-at="2021-04-15T10:38:07 IST" name="tearDown" finished-at="2021-04-15T10:38:07 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=submitPrepare_FileToUploadNull status=SUCCESS method=Scenario_4_15.submitPrepare_FileToUploadNull(java.lang.String)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_15@15bb5034] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_15@15bb5034]" started-at="2021-04-15T10:38:07 IST" name="reportUp" finished-at="2021-04-15T10:38:07 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_4_15.submitPrepare_WithoutBase64File(java.lang.String)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_15@15bb5034] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="submitPrepare_WithoutBase64File(java.lang.String)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_15@15bb5034]" started-at="2021-04-15T10:38:07 IST" name="submitPrepare_WithoutBase64File" data-provider="version-data-provider" finished-at="2021-04-15T10:38:21 IST" duration-ms="13997" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitPrepare_WithoutBase64File -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_15@15bb5034]" started-at="2021-04-15T10:38:21 IST" name="tearDown" finished-at="2021-04-15T10:38:21 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=submitPrepare_WithoutBase64File status=SUCCESS method=Scenario_4_15.submitPrepare_WithoutBase64File(java.lang.String)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_15@15bb5034] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- net.assuresign.scenario_4.Scenario_4_15 -->
      <class name="net.assuresign.scenario_4.Scenario_4_10">
        <test-method signature="submitPrepare_WrongConditionalLogic(java.lang.String)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_10@5b1669c0]" started-at="2021-04-15T10:33:02 IST" name="submitPrepare_WrongConditionalLogic" data-provider="version-data-provider" finished-at="2021-04-15T10:33:13 IST" duration-ms="11141" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitPrepare_WrongConditionalLogic -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_10@5b1669c0]" started-at="2021-04-15T10:33:02 IST" name="reportUp" finished-at="2021-04-15T10:33:02 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_4_10.submitPrepare_WrongConditionalLogic(java.lang.String)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_10@5b1669c0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_10@5b1669c0]" started-at="2021-04-15T10:33:13 IST" name="tearDown" finished-at="2021-04-15T10:33:13 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=submitPrepare_WrongConditionalLogic status=SUCCESS method=Scenario_4_10.submitPrepare_WrongConditionalLogic(java.lang.String)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_10@5b1669c0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- net.assuresign.scenario_4.Scenario_4_10 -->
      <class name="net.assuresign.scenario_4.Scenario_4_11">
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_11@78e4deb0]" started-at="2021-04-15T10:33:13 IST" name="reportUp" finished-at="2021-04-15T10:33:13 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_4_11.submitPrepare_deprecated(java.lang.String)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_11@78e4deb0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="submitPrepare_deprecated(java.lang.String)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_11@78e4deb0]" started-at="2021-04-15T10:33:13 IST" name="submitPrepare_deprecated" data-provider="version-data-provider" finished-at="2021-04-15T10:33:24 IST" duration-ms="10895" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitPrepare_deprecated -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_11@78e4deb0]" started-at="2021-04-15T10:33:24 IST" name="tearDown" finished-at="2021-04-15T10:33:24 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=submitPrepare_deprecated status=SUCCESS method=Scenario_4_11.submitPrepare_deprecated(java.lang.String)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_11@78e4deb0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_11@78e4deb0]" started-at="2021-04-15T10:33:24 IST" name="reportUp" finished-at="2021-04-15T10:33:24 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_4_11.submit_deprecated(java.lang.String)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_11@78e4deb0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="submit_deprecated(java.lang.String)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_11@78e4deb0]" started-at="2021-04-15T10:33:24 IST" name="submit_deprecated" data-provider="version-data-provider" finished-at="2021-04-15T10:33:45 IST" duration-ms="20640" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submit_deprecated -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_11@78e4deb0]" started-at="2021-04-15T10:33:45 IST" name="tearDown" finished-at="2021-04-15T10:33:45 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=submit_deprecated status=SUCCESS method=Scenario_4_11.submit_deprecated(java.lang.String)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_11@78e4deb0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- net.assuresign.scenario_4.Scenario_4_11 -->
      <class name="net.assuresign.scenario_4.Scenario_4_12">
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_12@6e9175d8]" started-at="2021-04-15T10:33:45 IST" name="reportUp" finished-at="2021-04-15T10:33:45 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_4_12.submitPrepare_specifiedSchema(java.lang.String)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_12@6e9175d8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="submitPrepare_specifiedSchema(java.lang.String)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_12@6e9175d8]" started-at="2021-04-15T10:33:45 IST" name="submitPrepare_specifiedSchema" data-provider="version-data-provider" finished-at="2021-04-15T10:33:56 IST" duration-ms="11372" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitPrepare_specifiedSchema -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_12@6e9175d8]" started-at="2021-04-15T10:33:56 IST" name="tearDown" finished-at="2021-04-15T10:33:56 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=submitPrepare_specifiedSchema status=SUCCESS method=Scenario_4_12.submitPrepare_specifiedSchema(java.lang.String)[pri:0, instance:net.assuresign.scenario_4.Scenario_4_12@6e9175d8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- net.assuresign.scenario_4.Scenario_4_12 -->
      <class name="net.assuresign.scenario_9.Scenario_9">
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_9.Scenario_9@25ce9dc4]" started-at="2021-04-15T10:44:51 IST" name="reportUp" finished-at="2021-04-15T10:44:51 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_9.getSSOToken(java.lang.String)[pri:0, instance:net.assuresign.scenario_9.Scenario_9@25ce9dc4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="getSSOToken(java.lang.String)[pri:0, instance:net.assuresign.scenario_9.Scenario_9@25ce9dc4]" started-at="2021-04-15T10:44:51 IST" name="getSSOToken" data-provider="version-data-provider" finished-at="2021-04-15T10:44:56 IST" duration-ms="4477" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSSOToken -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_9.Scenario_9@25ce9dc4]" started-at="2021-04-15T10:44:56 IST" name="tearDown" finished-at="2021-04-15T10:44:56 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getSSOToken status=SUCCESS method=Scenario_9.getSSOToken(java.lang.String)[pri:0, instance:net.assuresign.scenario_9.Scenario_9@25ce9dc4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_9.Scenario_9@25ce9dc4]" started-at="2021-04-15T10:44:56 IST" name="reportUp" finished-at="2021-04-15T10:44:56 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_9.getSSOToken_XASUserContext(java.lang.String)[pri:0, instance:net.assuresign.scenario_9.Scenario_9@25ce9dc4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="getSSOToken_XASUserContext(java.lang.String)[pri:0, instance:net.assuresign.scenario_9.Scenario_9@25ce9dc4]" started-at="2021-04-15T10:44:56 IST" name="getSSOToken_XASUserContext" data-provider="version-data-provider" finished-at="2021-04-15T10:45:00 IST" duration-ms="4464" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSSOToken_XASUserContext -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_9.Scenario_9@25ce9dc4]" started-at="2021-04-15T10:45:00 IST" name="tearDown" finished-at="2021-04-15T10:45:00 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getSSOToken_XASUserContext status=SUCCESS method=Scenario_9.getSSOToken_XASUserContext(java.lang.String)[pri:0, instance:net.assuresign.scenario_9.Scenario_9@25ce9dc4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- net.assuresign.scenario_9.Scenario_9 -->
      <class name="net.assuresign.scenario_3.Scenario_3_10">
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_3.Scenario_3_10@644baf4a]" started-at="2021-04-15T10:23:19 IST" name="reportUp" finished-at="2021-04-15T10:23:19 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_3_10.submitSSTemplate_EmptyDocName(java.lang.String)[pri:0, instance:net.assuresign.scenario_3.Scenario_3_10@644baf4a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="submitSSTemplate_EmptyDocName(java.lang.String)[pri:0, instance:net.assuresign.scenario_3.Scenario_3_10@644baf4a]" started-at="2021-04-15T10:23:19 IST" name="submitSSTemplate_EmptyDocName" data-provider="version-data-provider" finished-at="2021-04-15T10:23:24 IST" duration-ms="5615" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitSSTemplate_EmptyDocName -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_3.Scenario_3_10@644baf4a]" started-at="2021-04-15T10:23:24 IST" name="tearDown" finished-at="2021-04-15T10:23:24 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=submitSSTemplate_EmptyDocName status=SUCCESS method=Scenario_3_10.submitSSTemplate_EmptyDocName(java.lang.String)[pri:0, instance:net.assuresign.scenario_3.Scenario_3_10@644baf4a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_3.Scenario_3_10@644baf4a]" started-at="2021-04-15T10:23:24 IST" name="reportUp" finished-at="2021-04-15T10:23:24 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_3_10.submit_HybridCallMissingDocName(java.lang.String)[pri:0, instance:net.assuresign.scenario_3.Scenario_3_10@644baf4a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="submit_HybridCallMissingDocName(java.lang.String)[pri:0, instance:net.assuresign.scenario_3.Scenario_3_10@644baf4a]" started-at="2021-04-15T10:23:24 IST" name="submit_HybridCallMissingDocName" data-provider="version-data-provider" finished-at="2021-04-15T10:23:31 IST" duration-ms="6382" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submit_HybridCallMissingDocName -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_3.Scenario_3_10@644baf4a]" started-at="2021-04-15T10:23:31 IST" name="tearDown" finished-at="2021-04-15T10:23:31 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=submit_HybridCallMissingDocName status=SUCCESS method=Scenario_3_10.submit_HybridCallMissingDocName(java.lang.String)[pri:0, instance:net.assuresign.scenario_3.Scenario_3_10@644baf4a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_3.Scenario_3_10@644baf4a]" started-at="2021-04-15T10:23:31 IST" name="reportUp" finished-at="2021-04-15T10:23:31 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_3_10.submit_missingDocName(java.lang.String)[pri:0, instance:net.assuresign.scenario_3.Scenario_3_10@644baf4a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="submit_missingDocName(java.lang.String)[pri:0, instance:net.assuresign.scenario_3.Scenario_3_10@644baf4a]" started-at="2021-04-15T10:23:31 IST" name="submit_missingDocName" data-provider="version-data-provider" finished-at="2021-04-15T10:23:38 IST" duration-ms="7355" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submit_missingDocName -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_3.Scenario_3_10@644baf4a]" started-at="2021-04-15T10:23:38 IST" name="tearDown" finished-at="2021-04-15T10:23:38 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=submit_missingDocName status=SUCCESS method=Scenario_3_10.submit_missingDocName(java.lang.String)[pri:0, instance:net.assuresign.scenario_3.Scenario_3_10@644baf4a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- net.assuresign.scenario_3.Scenario_3_10 -->
      <class name="net.assuresign.scenario_3.Scenario_3_12">
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_3.Scenario_3_12@1ed4ae0f]" started-at="2021-04-15T10:24:41 IST" name="reportUp" finished-at="2021-04-15T10:24:41 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_3_12.submitSSTemplate_delayedStep(java.lang.String)[pri:0, instance:net.assuresign.scenario_3.Scenario_3_12@1ed4ae0f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="submitSSTemplate_delayedStep(java.lang.String)[pri:0, instance:net.assuresign.scenario_3.Scenario_3_12@1ed4ae0f]" started-at="2021-04-15T10:24:41 IST" name="submitSSTemplate_delayedStep" data-provider="version-data-provider" finished-at="2021-04-15T10:24:57 IST" duration-ms="16507" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitSSTemplate_delayedStep -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_3.Scenario_3_12@1ed4ae0f]" started-at="2021-04-15T10:24:57 IST" name="tearDown" finished-at="2021-04-15T10:24:57 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=submitSSTemplate_delayedStep status=SUCCESS method=Scenario_3_12.submitSSTemplate_delayedStep(java.lang.String)[pri:0, instance:net.assuresign.scenario_3.Scenario_3_12@1ed4ae0f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_3.Scenario_3_12@1ed4ae0f]" started-at="2021-04-15T10:24:57 IST" name="reportUp" finished-at="2021-04-15T10:24:57 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_3_12.submitSSTemplate_invalidID(java.lang.String)[pri:0, instance:net.assuresign.scenario_3.Scenario_3_12@1ed4ae0f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="submitSSTemplate_invalidID(java.lang.String)[pri:0, instance:net.assuresign.scenario_3.Scenario_3_12@1ed4ae0f]" started-at="2021-04-15T10:24:57 IST" name="submitSSTemplate_invalidID" data-provider="version-data-provider" finished-at="2021-04-15T10:25:03 IST" duration-ms="6200" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitSSTemplate_invalidID -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_3.Scenario_3_12@1ed4ae0f]" started-at="2021-04-15T10:25:03 IST" name="tearDown" finished-at="2021-04-15T10:25:03 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=submitSSTemplate_invalidID status=SUCCESS method=Scenario_3_12.submitSSTemplate_invalidID(java.lang.String)[pri:0, instance:net.assuresign.scenario_3.Scenario_3_12@1ed4ae0f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_3.Scenario_3_12@1ed4ae0f]" started-at="2021-04-15T10:25:03 IST" name="reportUp" finished-at="2021-04-15T10:25:03 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_3_12.submitSSTemplate_pwdOpenFile(java.lang.String)[pri:0, instance:net.assuresign.scenario_3.Scenario_3_12@1ed4ae0f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="submitSSTemplate_pwdOpenFile(java.lang.String)[pri:0, instance:net.assuresign.scenario_3.Scenario_3_12@1ed4ae0f]" started-at="2021-04-15T10:25:03 IST" name="submitSSTemplate_pwdOpenFile" data-provider="version-data-provider" finished-at="2021-04-15T10:25:08 IST" duration-ms="4951" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitSSTemplate_pwdOpenFile -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_3.Scenario_3_12@1ed4ae0f]" started-at="2021-04-15T10:25:08 IST" name="tearDown" finished-at="2021-04-15T10:25:08 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=submitSSTemplate_pwdOpenFile status=SUCCESS method=Scenario_3_12.submitSSTemplate_pwdOpenFile(java.lang.String)[pri:0, instance:net.assuresign.scenario_3.Scenario_3_12@1ed4ae0f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_3.Scenario_3_12@1ed4ae0f]" started-at="2021-04-15T10:25:08 IST" name="reportUp" finished-at="2021-04-15T10:25:08 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_3_12.submitSSTemplate_signerPassword(java.lang.String)[pri:0, instance:net.assuresign.scenario_3.Scenario_3_12@1ed4ae0f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="submitSSTemplate_signerPassword(java.lang.String)[pri:0, instance:net.assuresign.scenario_3.Scenario_3_12@1ed4ae0f]" started-at="2021-04-15T10:25:08 IST" name="submitSSTemplate_signerPassword" data-provider="version-data-provider" finished-at="2021-04-15T10:25:16 IST" duration-ms="7651" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitSSTemplate_signerPassword -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_3.Scenario_3_12@1ed4ae0f]" started-at="2021-04-15T10:25:16 IST" name="tearDown" finished-at="2021-04-15T10:25:16 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=submitSSTemplate_signerPassword status=SUCCESS method=Scenario_3_12.submitSSTemplate_signerPassword(java.lang.String)[pri:0, instance:net.assuresign.scenario_3.Scenario_3_12@1ed4ae0f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- net.assuresign.scenario_3.Scenario_3_12 -->
      <class name="net.assuresign.scenario_3.Scenario_3_11">
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_3.Scenario_3_11@7526515b]" started-at="2021-04-15T10:23:38 IST" name="reportUp" finished-at="2021-04-15T10:23:38 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_3_11.submit_withPwdToEditFile(java.lang.String)[pri:0, instance:net.assuresign.scenario_3.Scenario_3_11@7526515b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="submit_withPwdToEditFile(java.lang.String)[pri:0, instance:net.assuresign.scenario_3.Scenario_3_11@7526515b]" started-at="2021-04-15T10:23:38 IST" name="submit_withPwdToEditFile" data-provider="version-data-provider" finished-at="2021-04-15T10:23:52 IST" duration-ms="13862" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <400> but was <200>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <400> but was <200>.

at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:72)
at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:59)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:59)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:263)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:493)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:674)
at jdk.internal.reflect.GeneratedMethodAccessor69.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:193)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:61)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:126)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:84)
at io.restassured.internal.ValidatableResponseImpl.super$2$statusCode(ValidatableResponseImpl.groovy)
at jdk.internal.reflect.GeneratedMethodAccessor166.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1268)
at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)
at io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy:136)
at io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy)
at net.assuresign.scenario_3.Scenario_3_11.submit_withPwdToEditFile(Scenario_3_11.java:57)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submit_withPwdToEditFile -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_3.Scenario_3_11@7526515b]" started-at="2021-04-15T10:23:52 IST" name="reportUp" finished-at="2021-04-15T10:23:52 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_3_11.submit_withPwdToOpenFile(java.lang.String)[pri:0, instance:net.assuresign.scenario_3.Scenario_3_11@7526515b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_3.Scenario_3_11@7526515b]" started-at="2021-04-15T10:23:52 IST" name="tearDown" finished-at="2021-04-15T10:23:52 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=submit_withPwdToEditFile status=FAILURE method=Scenario_3_11.submit_withPwdToEditFile(java.lang.String)[pri:0, instance:net.assuresign.scenario_3.Scenario_3_11@7526515b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="submit_withPwdToOpenFile(java.lang.String)[pri:0, instance:net.assuresign.scenario_3.Scenario_3_11@7526515b]" started-at="2021-04-15T10:23:52 IST" name="submit_withPwdToOpenFile" data-provider="version-data-provider" finished-at="2021-04-15T10:24:41 IST" duration-ms="48694" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submit_withPwdToOpenFile -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_3.Scenario_3_11@7526515b]" started-at="2021-04-15T10:24:41 IST" name="tearDown" finished-at="2021-04-15T10:24:41 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=submit_withPwdToOpenFile status=SUCCESS method=Scenario_3_11.submit_withPwdToOpenFile(java.lang.String)[pri:0, instance:net.assuresign.scenario_3.Scenario_3_11@7526515b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- net.assuresign.scenario_3.Scenario_3_11 -->
      <class name="net.assuresign.scenario_13.Scenario_13">
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_13.Scenario_13@27406a17]" started-at="2021-04-15T10:47:00 IST" name="reportUp" finished-at="2021-04-15T10:47:00 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_13.submitPrepare_documents(java.lang.String)[pri:0, instance:net.assuresign.scenario_13.Scenario_13@27406a17] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="submitPrepare_documents(java.lang.String)[pri:0, instance:net.assuresign.scenario_13.Scenario_13@27406a17]" started-at="2021-04-15T10:47:00 IST" name="submitPrepare_documents" data-provider="version-data-provider" finished-at="2021-04-15T10:47:12 IST" duration-ms="11856" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitPrepare_documents -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_13.Scenario_13@27406a17]" started-at="2021-04-15T10:47:12 IST" name="tearDown" finished-at="2021-04-15T10:47:12 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=submitPrepare_documents status=SUCCESS method=Scenario_13.submitPrepare_documents(java.lang.String)[pri:0, instance:net.assuresign.scenario_13.Scenario_13@27406a17] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="submitPrepare_documentsEmptyID(java.lang.String)[pri:0, instance:net.assuresign.scenario_13.Scenario_13@27406a17]" started-at="2021-04-15T10:47:12 IST" name="submitPrepare_documentsEmptyID" data-provider="version-data-provider" finished-at="2021-04-15T10:47:18 IST" duration-ms="6122" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitPrepare_documentsEmptyID -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_13.Scenario_13@27406a17]" started-at="2021-04-15T10:47:12 IST" name="reportUp" finished-at="2021-04-15T10:47:12 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_13.submitPrepare_documentsEmptyID(java.lang.String)[pri:0, instance:net.assuresign.scenario_13.Scenario_13@27406a17] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_13.Scenario_13@27406a17]" started-at="2021-04-15T10:47:18 IST" name="tearDown" finished-at="2021-04-15T10:47:18 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=submitPrepare_documentsEmptyID status=SUCCESS method=Scenario_13.submitPrepare_documentsEmptyID(java.lang.String)[pri:0, instance:net.assuresign.scenario_13.Scenario_13@27406a17] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_13.Scenario_13@27406a17]" started-at="2021-04-15T10:47:18 IST" name="reportUp" finished-at="2021-04-15T10:47:18 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_13.submitPrepare_documentsInvalidID(java.lang.String)[pri:0, instance:net.assuresign.scenario_13.Scenario_13@27406a17] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="submitPrepare_documentsInvalidID(java.lang.String)[pri:0, instance:net.assuresign.scenario_13.Scenario_13@27406a17]" started-at="2021-04-15T10:47:18 IST" name="submitPrepare_documentsInvalidID" data-provider="version-data-provider" finished-at="2021-04-15T10:47:24 IST" duration-ms="5716" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitPrepare_documentsInvalidID -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_13.Scenario_13@27406a17]" started-at="2021-04-15T10:47:24 IST" name="tearDown" finished-at="2021-04-15T10:47:24 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=submitPrepare_documentsInvalidID status=SUCCESS method=Scenario_13.submitPrepare_documentsInvalidID(java.lang.String)[pri:0, instance:net.assuresign.scenario_13.Scenario_13@27406a17] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="submitPrepare_documentsPwdToEditFile(java.lang.String)[pri:0, instance:net.assuresign.scenario_13.Scenario_13@27406a17]" started-at="2021-04-15T10:47:24 IST" name="submitPrepare_documentsPwdToEditFile" data-provider="version-data-provider" finished-at="2021-04-15T10:47:35 IST" duration-ms="10619" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitPrepare_documentsPwdToEditFile -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_13.Scenario_13@27406a17]" started-at="2021-04-15T10:47:24 IST" name="reportUp" finished-at="2021-04-15T10:47:24 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_13.submitPrepare_documentsPwdToEditFile(java.lang.String)[pri:0, instance:net.assuresign.scenario_13.Scenario_13@27406a17] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_13.Scenario_13@27406a17]" started-at="2021-04-15T10:47:35 IST" name="tearDown" finished-at="2021-04-15T10:47:35 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=submitPrepare_documentsPwdToEditFile status=SUCCESS method=Scenario_13.submitPrepare_documentsPwdToEditFile(java.lang.String)[pri:0, instance:net.assuresign.scenario_13.Scenario_13@27406a17] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_13.Scenario_13@27406a17]" started-at="2021-04-15T10:47:35 IST" name="reportUp" finished-at="2021-04-15T10:47:35 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_13.submitPrepare_documentsPwdToOpenFile(java.lang.String)[pri:0, instance:net.assuresign.scenario_13.Scenario_13@27406a17] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="submitPrepare_documentsPwdToOpenFile(java.lang.String)[pri:0, instance:net.assuresign.scenario_13.Scenario_13@27406a17]" started-at="2021-04-15T10:47:35 IST" name="submitPrepare_documentsPwdToOpenFile" data-provider="version-data-provider" finished-at="2021-04-15T10:47:44 IST" duration-ms="9894" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitPrepare_documentsPwdToOpenFile -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_13.Scenario_13@27406a17]" started-at="2021-04-15T10:47:44 IST" name="tearDown" finished-at="2021-04-15T10:47:44 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=submitPrepare_documentsPwdToOpenFile status=SUCCESS method=Scenario_13.submitPrepare_documentsPwdToOpenFile(java.lang.String)[pri:0, instance:net.assuresign.scenario_13.Scenario_13@27406a17] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_13.Scenario_13@27406a17]" started-at="2021-04-15T10:47:44 IST" name="reportUp" finished-at="2021-04-15T10:47:44 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_13.submitPrepare_putCall1(java.lang.String)[pri:0, instance:net.assuresign.scenario_13.Scenario_13@27406a17] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="submitPrepare_putCall1(java.lang.String)[pri:0, instance:net.assuresign.scenario_13.Scenario_13@27406a17]" started-at="2021-04-15T10:47:44 IST" name="submitPrepare_putCall1" data-provider="version-data-provider" finished-at="2021-04-15T10:47:56 IST" duration-ms="11359" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitPrepare_putCall1 -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_13.Scenario_13@27406a17]" started-at="2021-04-15T10:47:56 IST" name="tearDown" finished-at="2021-04-15T10:47:56 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=submitPrepare_putCall1 status=SUCCESS method=Scenario_13.submitPrepare_putCall1(java.lang.String)[pri:0, instance:net.assuresign.scenario_13.Scenario_13@27406a17] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_13.Scenario_13@27406a17]" started-at="2021-04-15T10:47:56 IST" name="reportUp" finished-at="2021-04-15T10:47:56 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_13.submitPrepare_withoutDocName(java.lang.String)[pri:0, instance:net.assuresign.scenario_13.Scenario_13@27406a17] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="submitPrepare_withoutDocName(java.lang.String)[pri:0, instance:net.assuresign.scenario_13.Scenario_13@27406a17]" started-at="2021-04-15T10:47:56 IST" name="submitPrepare_withoutDocName" data-provider="version-data-provider" finished-at="2021-04-15T10:48:06 IST" duration-ms="10441" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitPrepare_withoutDocName -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_13.Scenario_13@27406a17]" started-at="2021-04-15T10:48:06 IST" name="tearDown" finished-at="2021-04-15T10:48:06 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=submitPrepare_withoutDocName status=SUCCESS method=Scenario_13.submitPrepare_withoutDocName(java.lang.String)[pri:0, instance:net.assuresign.scenario_13.Scenario_13@27406a17] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_13.Scenario_13@27406a17]" started-at="2021-04-15T10:48:06 IST" name="reportUp" finished-at="2021-04-15T10:48:06 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_13.submitValidate_Adhoc(java.lang.String)[pri:0, instance:net.assuresign.scenario_13.Scenario_13@27406a17] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="submitValidate_Adhoc(java.lang.String)[pri:0, instance:net.assuresign.scenario_13.Scenario_13@27406a17]" started-at="2021-04-15T10:48:06 IST" name="submitValidate_Adhoc" data-provider="version-data-provider" finished-at="2021-04-15T10:50:31 IST" duration-ms="145024" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitValidate_Adhoc -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_13.Scenario_13@27406a17]" started-at="2021-04-15T10:50:31 IST" name="tearDown" finished-at="2021-04-15T10:50:31 IST" duration-ms="17" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=submitValidate_Adhoc status=SUCCESS method=Scenario_13.submitValidate_Adhoc(java.lang.String)[pri:0, instance:net.assuresign.scenario_13.Scenario_13@27406a17] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_13.Scenario_13@27406a17]" started-at="2021-04-15T10:50:31 IST" name="reportUp" finished-at="2021-04-15T10:50:31 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_13.submitValidate_adhoc400(java.lang.String)[pri:0, instance:net.assuresign.scenario_13.Scenario_13@27406a17] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="submitValidate_adhoc400(java.lang.String)[pri:0, instance:net.assuresign.scenario_13.Scenario_13@27406a17]" started-at="2021-04-15T10:50:31 IST" name="submitValidate_adhoc400" data-provider="version-data-provider" finished-at="2021-04-15T10:50:43 IST" duration-ms="11359" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitValidate_adhoc400 -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_13.Scenario_13@27406a17]" started-at="2021-04-15T10:50:43 IST" name="tearDown" finished-at="2021-04-15T10:50:43 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=submitValidate_adhoc400 status=SUCCESS method=Scenario_13.submitValidate_adhoc400(java.lang.String)[pri:0, instance:net.assuresign.scenario_13.Scenario_13@27406a17] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_13.Scenario_13@27406a17]" started-at="2021-04-15T10:50:43 IST" name="reportUp" finished-at="2021-04-15T10:50:43 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_13.submitValidate_hybridCall(java.lang.String)[pri:0, instance:net.assuresign.scenario_13.Scenario_13@27406a17] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="submitValidate_hybridCall(java.lang.String)[pri:0, instance:net.assuresign.scenario_13.Scenario_13@27406a17]" started-at="2021-04-15T10:50:43 IST" name="submitValidate_hybridCall" data-provider="version-data-provider" finished-at="2021-04-15T10:50:50 IST" duration-ms="7832" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitValidate_hybridCall -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_13.Scenario_13@27406a17]" started-at="2021-04-15T10:50:50 IST" name="tearDown" finished-at="2021-04-15T10:50:50 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=submitValidate_hybridCall status=SUCCESS method=Scenario_13.submitValidate_hybridCall(java.lang.String)[pri:0, instance:net.assuresign.scenario_13.Scenario_13@27406a17] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="submitValidate_ssTemplate(java.lang.String)[pri:0, instance:net.assuresign.scenario_13.Scenario_13@27406a17]" started-at="2021-04-15T10:50:50 IST" name="submitValidate_ssTemplate" data-provider="version-data-provider" finished-at="2021-04-15T10:50:57 IST" duration-ms="6912" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitValidate_ssTemplate -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_13.Scenario_13@27406a17]" started-at="2021-04-15T10:50:50 IST" name="reportUp" finished-at="2021-04-15T10:50:50 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_13.submitValidate_ssTemplate(java.lang.String)[pri:0, instance:net.assuresign.scenario_13.Scenario_13@27406a17] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_13.Scenario_13@27406a17]" started-at="2021-04-15T10:50:57 IST" name="tearDown" finished-at="2021-04-15T10:50:57 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=submitValidate_ssTemplate status=SUCCESS method=Scenario_13.submitValidate_ssTemplate(java.lang.String)[pri:0, instance:net.assuresign.scenario_13.Scenario_13@27406a17] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- net.assuresign.scenario_13.Scenario_13 -->
      <class name="net.assuresign.scenario_8.Scenario_8">
        <test-method signature="getEnvelope_EmptyEnvelopID(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@470734c3]" started-at="2021-04-15T10:39:43 IST" name="getEnvelope_EmptyEnvelopID" data-provider="version-data-provider" finished-at="2021-04-15T10:39:47 IST" duration-ms="4140" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getEnvelope_EmptyEnvelopID -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@470734c3]" started-at="2021-04-15T10:39:43 IST" name="reportUp" finished-at="2021-04-15T10:39:43 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_8.getEnvelope_EmptyEnvelopID(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@470734c3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@470734c3]" started-at="2021-04-15T10:39:47 IST" name="tearDown" finished-at="2021-04-15T10:39:47 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getEnvelope_EmptyEnvelopID status=SUCCESS method=Scenario_8.getEnvelope_EmptyEnvelopID(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@470734c3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@470734c3]" started-at="2021-04-15T10:39:47 IST" name="reportUp" finished-at="2021-04-15T10:39:47 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_8.getEnvelope_ForEmptyEnvelopes(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@470734c3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="getEnvelope_ForEmptyEnvelopes(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@470734c3]" started-at="2021-04-15T10:39:47 IST" name="getEnvelope_ForEmptyEnvelopes" data-provider="version-data-provider" finished-at="2021-04-15T10:39:52 IST" duration-ms="4828" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code (<400> or <404>) but was <200>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code (<400> or <404>) but was <200>.

at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:72)
at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:59)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:493)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:674)
at jdk.internal.reflect.GeneratedMethodAccessor69.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:193)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:61)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:126)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:84)
at io.restassured.internal.ValidatableResponseImpl.super$2$statusCode(ValidatableResponseImpl.groovy)
at jdk.internal.reflect.GeneratedMethodAccessor166.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1268)
at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)
at io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy:136)
at io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy)
at net.assuresign.scenario_8.Scenario_8.getEnvelope_ForEmptyEnvelopes(Scenario_8.java:171)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getEnvelope_ForEmptyEnvelopes -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@470734c3]" started-at="2021-04-15T10:39:52 IST" name="reportUp" finished-at="2021-04-15T10:39:52 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_8.getEnvelope_ForInvalidEnvelopes(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@470734c3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@470734c3]" started-at="2021-04-15T10:39:52 IST" name="tearDown" finished-at="2021-04-15T10:39:52 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getEnvelope_ForEmptyEnvelopes status=FAILURE method=Scenario_8.getEnvelope_ForEmptyEnvelopes(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@470734c3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="getEnvelope_ForInvalidEnvelopes(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@470734c3]" started-at="2021-04-15T10:39:52 IST" name="getEnvelope_ForInvalidEnvelopes" data-provider="version-data-provider" finished-at="2021-04-15T10:39:56 IST" duration-ms="4741" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getEnvelope_ForInvalidEnvelopes -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@470734c3]" started-at="2021-04-15T10:39:56 IST" name="tearDown" finished-at="2021-04-15T10:39:56 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getEnvelope_ForInvalidEnvelopes status=SUCCESS method=Scenario_8.getEnvelope_ForInvalidEnvelopes(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@470734c3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="getEnvelope_InvalidDocType(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@470734c3]" started-at="2021-04-15T10:39:56 IST" name="getEnvelope_InvalidDocType" data-provider="version-data-provider" finished-at="2021-04-15T10:40:01 IST" duration-ms="5120" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code (<400> or <401>) but was <200>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code (<400> or <401>) but was <200>.

at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:72)
at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:59)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:493)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:674)
at jdk.internal.reflect.GeneratedMethodAccessor69.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:193)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:61)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:126)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:84)
at io.restassured.internal.ValidatableResponseImpl.super$2$statusCode(ValidatableResponseImpl.groovy)
at jdk.internal.reflect.GeneratedMethodAccessor166.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1268)
at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)
at io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy:136)
at io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy)
at net.assuresign.scenario_8.Scenario_8.getEnvelope_InvalidDocType(Scenario_8.java:226)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getEnvelope_InvalidDocType -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@470734c3]" started-at="2021-04-15T10:39:56 IST" name="reportUp" finished-at="2021-04-15T10:39:56 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_8.getEnvelope_InvalidDocType(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@470734c3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@470734c3]" started-at="2021-04-15T10:40:01 IST" name="tearDown" finished-at="2021-04-15T10:40:01 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getEnvelope_InvalidDocType status=FAILURE method=Scenario_8.getEnvelope_InvalidDocType(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@470734c3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@470734c3]" started-at="2021-04-15T10:40:01 IST" name="reportUp" finished-at="2021-04-15T10:40:01 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_8.getEnvelope_InvalidEnvelopID(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@470734c3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="getEnvelope_InvalidEnvelopID(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@470734c3]" started-at="2021-04-15T10:40:01 IST" name="getEnvelope_InvalidEnvelopID" data-provider="version-data-provider" finished-at="2021-04-15T10:40:06 IST" duration-ms="4851" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getEnvelope_InvalidEnvelopID -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@470734c3]" started-at="2021-04-15T10:40:06 IST" name="tearDown" finished-at="2021-04-15T10:40:06 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getEnvelope_InvalidEnvelopID status=SUCCESS method=Scenario_8.getEnvelope_InvalidEnvelopID(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@470734c3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@470734c3]" started-at="2021-04-15T10:40:06 IST" name="reportUp" finished-at="2021-04-15T10:40:06 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_8.getEnvelope_WithoutDocType(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@470734c3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="getEnvelope_WithoutDocType(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@470734c3]" started-at="2021-04-15T10:40:06 IST" name="getEnvelope_WithoutDocType" data-provider="version-data-provider" finished-at="2021-04-15T10:40:11 IST" duration-ms="4345" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getEnvelope_WithoutDocType -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@470734c3]" started-at="2021-04-15T10:40:11 IST" name="tearDown" finished-at="2021-04-15T10:40:11 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getEnvelope_WithoutDocType status=SUCCESS method=Scenario_8.getEnvelope_WithoutDocType(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@470734c3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="getEnvelope_WrongDocType(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@470734c3]" started-at="2021-04-15T10:40:11 IST" name="getEnvelope_WrongDocType" data-provider="version-data-provider" finished-at="2021-04-15T10:40:16 IST" duration-ms="5285" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code (<400> or <401>) but was <200>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code (<400> or <401>) but was <200>.

at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:72)
at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:59)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:493)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:674)
at jdk.internal.reflect.GeneratedMethodAccessor69.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:193)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:61)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:126)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:84)
at io.restassured.internal.ValidatableResponseImpl.super$2$statusCode(ValidatableResponseImpl.groovy)
at jdk.internal.reflect.GeneratedMethodAccessor166.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1268)
at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)
at io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy:136)
at io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy)
at net.assuresign.scenario_8.Scenario_8.getEnvelope_WrongDocType(Scenario_8.java:189)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getEnvelope_WrongDocType -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@470734c3]" started-at="2021-04-15T10:40:11 IST" name="reportUp" finished-at="2021-04-15T10:40:11 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_8.getEnvelope_WrongDocType(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@470734c3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@470734c3]" started-at="2021-04-15T10:40:16 IST" name="tearDown" finished-at="2021-04-15T10:40:16 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getEnvelope_WrongDocType status=FAILURE method=Scenario_8.getEnvelope_WrongDocType(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@470734c3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@470734c3]" started-at="2021-04-15T10:40:16 IST" name="reportUp" finished-at="2021-04-15T10:40:16 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_8.getEnvelopesAnyFilter(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@470734c3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="getEnvelopesAnyFilter(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@470734c3]" started-at="2021-04-15T10:40:16 IST" name="getEnvelopesAnyFilter" data-provider="version-data-provider" finished-at="2021-04-15T10:40:25 IST" duration-ms="8903" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getEnvelopesAnyFilter -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@470734c3]" started-at="2021-04-15T10:40:25 IST" name="tearDown" finished-at="2021-04-15T10:40:25 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getEnvelopesAnyFilter status=SUCCESS method=Scenario_8.getEnvelopesAnyFilter(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@470734c3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@470734c3]" started-at="2021-04-15T10:40:25 IST" name="reportUp" finished-at="2021-04-15T10:40:25 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_8.getEnvelopes_ClosedWithFromDateLaterTodate(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@470734c3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="getEnvelopes_ClosedWithFromDateLaterTodate(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@470734c3]" started-at="2021-04-15T10:40:25 IST" name="getEnvelopes_ClosedWithFromDateLaterTodate" data-provider="version-data-provider" finished-at="2021-04-15T10:40:30 IST" duration-ms="5286" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getEnvelopes_ClosedWithFromDateLaterTodate -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@470734c3]" started-at="2021-04-15T10:40:30 IST" name="tearDown" finished-at="2021-04-15T10:40:30 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getEnvelopes_ClosedWithFromDateLaterTodate status=SUCCESS method=Scenario_8.getEnvelopes_ClosedWithFromDateLaterTodate(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@470734c3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@470734c3]" started-at="2021-04-15T10:40:30 IST" name="reportUp" finished-at="2021-04-15T10:40:30 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_8.getEnvelopes_ClosedWithInvalidFormData(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@470734c3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="getEnvelopes_ClosedWithInvalidFormData(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@470734c3]" started-at="2021-04-15T10:40:30 IST" name="getEnvelopes_ClosedWithInvalidFormData" data-provider="version-data-provider" finished-at="2021-04-15T10:40:35 IST" duration-ms="5100" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getEnvelopes_ClosedWithInvalidFormData -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@470734c3]" started-at="2021-04-15T10:40:35 IST" name="tearDown" finished-at="2021-04-15T10:40:35 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getEnvelopes_ClosedWithInvalidFormData status=SUCCESS method=Scenario_8.getEnvelopes_ClosedWithInvalidFormData(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@470734c3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="getEnvelopes_ClosedWithNoFormData(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@470734c3]" started-at="2021-04-15T10:40:35 IST" name="getEnvelopes_ClosedWithNoFormData" data-provider="version-data-provider" finished-at="2021-04-15T10:40:40 IST" duration-ms="4842" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getEnvelopes_ClosedWithNoFormData -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@470734c3]" started-at="2021-04-15T10:40:35 IST" name="reportUp" finished-at="2021-04-15T10:40:35 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_8.getEnvelopes_ClosedWithNoFormData(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@470734c3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@470734c3]" started-at="2021-04-15T10:40:40 IST" name="tearDown" finished-at="2021-04-15T10:40:40 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getEnvelopes_ClosedWithNoFormData status=SUCCESS method=Scenario_8.getEnvelopes_ClosedWithNoFormData(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@470734c3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@470734c3]" started-at="2021-04-15T10:40:40 IST" name="reportUp" finished-at="2021-04-15T10:40:40 IST" duration-ms="9" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_8.getEnvelopes_EmptyEnvelopID(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@470734c3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="getEnvelopes_EmptyEnvelopID(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@470734c3]" started-at="2021-04-15T10:40:40 IST" name="getEnvelopes_EmptyEnvelopID" data-provider="version-data-provider" finished-at="2021-04-15T10:40:47 IST" duration-ms="7419" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code (<400> or <404>) but was <200>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code (<400> or <404>) but was <200>.

at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:72)
at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:59)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:493)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:674)
at jdk.internal.reflect.GeneratedMethodAccessor69.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:193)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:61)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:126)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:84)
at io.restassured.internal.ValidatableResponseImpl.super$2$statusCode(ValidatableResponseImpl.groovy)
at jdk.internal.reflect.GeneratedMethodAccessor166.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1268)
at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)
at io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy:136)
at io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy)
at net.assuresign.scenario_8.Scenario_8.getEnvelopes_EmptyEnvelopID(Scenario_8.java:135)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getEnvelopes_EmptyEnvelopID -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@470734c3]" started-at="2021-04-15T10:40:47 IST" name="tearDown" finished-at="2021-04-15T10:40:47 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getEnvelopes_EmptyEnvelopID status=FAILURE method=Scenario_8.getEnvelopes_EmptyEnvelopID(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@470734c3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@470734c3]" started-at="2021-04-15T10:40:47 IST" name="reportUp" finished-at="2021-04-15T10:40:47 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_8.getEnvelopes_InvalidEnvelopID(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@470734c3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="getEnvelopes_InvalidEnvelopID(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@470734c3]" started-at="2021-04-15T10:40:47 IST" name="getEnvelopes_InvalidEnvelopID" data-provider="version-data-provider" finished-at="2021-04-15T10:40:52 IST" duration-ms="4752" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getEnvelopes_InvalidEnvelopID -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@470734c3]" started-at="2021-04-15T10:40:52 IST" name="tearDown" finished-at="2021-04-15T10:40:52 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getEnvelopes_InvalidEnvelopID status=SUCCESS method=Scenario_8.getEnvelopes_InvalidEnvelopID(java.lang.String)[pri:0, instance:net.assuresign.scenario_8.Scenario_8@470734c3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- net.assuresign.scenario_8.Scenario_8 -->
      <class name="net.assuresign.scenario_3.Scenario_3_13">
        <test-method signature="submitPlaceholderTemplate_oneDoc(java.lang.String)[pri:0, instance:net.assuresign.scenario_3.Scenario_3_13@54c5a2ff]" started-at="2021-04-15T10:25:16 IST" name="submitPlaceholderTemplate_oneDoc" data-provider="version-data-provider" finished-at="2021-04-15T10:25:27 IST" duration-ms="11521" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitPlaceholderTemplate_oneDoc -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_3.Scenario_3_13@54c5a2ff]" started-at="2021-04-15T10:25:16 IST" name="reportUp" finished-at="2021-04-15T10:25:16 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_3_13.submitPlaceholderTemplate_oneDoc(java.lang.String)[pri:0, instance:net.assuresign.scenario_3.Scenario_3_13@54c5a2ff] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_3.Scenario_3_13@54c5a2ff]" started-at="2021-04-15T10:25:27 IST" name="tearDown" finished-at="2021-04-15T10:25:27 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=submitPlaceholderTemplate_oneDoc status=SUCCESS method=Scenario_3_13.submitPlaceholderTemplate_oneDoc(java.lang.String)[pri:0, instance:net.assuresign.scenario_3.Scenario_3_13@54c5a2ff] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="reportUp(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_3.Scenario_3_13@54c5a2ff]" started-at="2021-04-15T10:25:27 IST" name="reportUp" finished-at="2021-04-15T10:25:28 IST" duration-ms="6" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Scenario_3_13.submitPlaceholderTemplate_twoDoc(java.lang.String)[pri:0, instance:net.assuresign.scenario_3.Scenario_3_13@54c5a2ff] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportUp -->
        <test-method signature="submitPlaceholderTemplate_twoDoc(java.lang.String)[pri:0, instance:net.assuresign.scenario_3.Scenario_3_13@54c5a2ff]" started-at="2021-04-15T10:25:28 IST" name="submitPlaceholderTemplate_twoDoc" data-provider="version-data-provider" finished-at="2021-04-15T10:25:42 IST" duration-ms="14095" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitPlaceholderTemplate_twoDoc -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:net.assuresign.scenario_3.Scenario_3_13@54c5a2ff]" started-at="2021-04-15T10:25:42 IST" name="tearDown" finished-at="2021-04-15T10:25:42 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=submitPlaceholderTemplate_twoDoc status=SUCCESS method=Scenario_3_13.submitPlaceholderTemplate_twoDoc(java.lang.String)[pri:0, instance:net.assuresign.scenario_3.Scenario_3_13@54c5a2ff] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- net.assuresign.scenario_3.Scenario_3_13 -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
